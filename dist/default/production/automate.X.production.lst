

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sat Mar 19 18:09:43 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16LF1939
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext7,global,class=STRCODE,delta=2,noexec
    12                           	psect	stringtext8,global,class=STRCODE,delta=2,noexec
    13                           	psect	cinit,global,class=CODE,merge=1,delta=2
    14                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    15                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    17                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    18                           	psect	clrtext,global,class=CODE,delta=2
    19                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    20                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    21                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    22                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    23                           	psect	text1,local,class=CODE,merge=1,delta=2,group=3
    24                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text4,local,class=CODE,merge=1,delta=2,group=3
    27                           	psect	text5,local,class=CODE,merge=1,delta=2
    28                           	psect	text6,local,class=CODE,merge=1,delta=2
    29                           	psect	text7,local,class=CODE,merge=1,delta=2
    30                           	psect	text8,local,class=CODE,merge=1,delta=2
    31                           	psect	text9,local,class=CODE,merge=1,delta=2
    32                           	psect	text10,local,class=CODE,merge=1,delta=2
    33                           	psect	text11,local,class=CODE,merge=1,delta=2
    34                           	psect	text12,local,class=CODE,merge=1,delta=2
    35                           	psect	text13,local,class=CODE,merge=1,delta=2
    36                           	psect	text14,local,class=CODE,merge=1,delta=2
    37                           	psect	text15,local,class=CODE,merge=1,delta=2
    38                           	psect	text16,local,class=CODE,merge=1,delta=2
    39                           	psect	text17,local,class=CODE,merge=1,delta=2
    40                           	psect	text18,local,class=CODE,merge=1,delta=2
    41                           	psect	text19,local,class=CODE,merge=1,delta=2
    42                           	psect	text20,local,class=CODE,merge=1,delta=2
    43                           	psect	text21,local,class=CODE,merge=1,delta=2
    44                           	psect	text22,local,class=CODE,merge=1,delta=2
    45                           	psect	text23,local,class=CODE,merge=1,delta=2
    46                           	psect	text24,local,class=CODE,merge=1,delta=2
    47                           	psect	text25,local,class=CODE,merge=1,delta=2
    48                           	psect	text26,local,class=CODE,merge=1,delta=2
    49                           	psect	text27,local,class=CODE,merge=1,delta=2
    50                           	psect	text28,local,class=CODE,merge=1,delta=2
    51                           	psect	text29,local,class=CODE,merge=1,delta=2
    52                           	psect	text30,local,class=CODE,merge=1,delta=2
    53                           	psect	text31,local,class=CODE,merge=1,delta=2
    54                           	psect	text32,local,class=CODE,merge=1,delta=2
    55                           	psect	intentry,global,class=CODE,delta=2
    56                           	psect	text34,local,class=CODE,merge=1,delta=2
    57                           	psect	text35,local,class=CODE,merge=1,inline,delta=2
    58                           	psect	text36,local,class=CODE,merge=1,inline,delta=2
    59                           	psect	text37,local,class=CODE,merge=1,delta=2
    60                           	psect	text38,local,class=CODE,merge=1,delta=2
    61                           	psect	text39,local,class=CODE,merge=1,delta=2
    62                           	psect	text40,local,class=CODE,merge=1,delta=2
    63                           	psect	text41,local,class=CODE,merge=1,delta=2
    64                           	psect	text42,local,class=CODE,merge=1,delta=2
    65                           	psect	text43,local,class=CODE,merge=1,delta=2
    66                           	psect	text44,local,class=CODE,merge=1,delta=2
    67                           	psect	text45,local,class=CODE,merge=1,delta=2
    68                           	psect	text46,local,class=CODE,merge=1,delta=2
    69                           	psect	text47,local,class=CODE,merge=1,delta=2
    70                           	psect	text48,local,class=CODE,merge=1,delta=2
    71                           	psect	text49,local,class=CODE,merge=1,delta=2
    72                           	psect	text50,local,class=CODE,merge=1,delta=2
    73                           	psect	text51,local,class=CODE,merge=1,delta=2
    74                           	psect	text52,local,class=CODE,merge=1,delta=2
    75                           	psect	text53,local,class=CODE,merge=1,inline,delta=2
    76                           	psect	text54,local,class=CODE,merge=1,inline,delta=2
    77                           	psect	text55,local,class=CODE,merge=1,inline,delta=2
    78                           	psect	text56,local,class=CODE,merge=1,inline,delta=2
    79                           	psect	text57,local,class=CODE,merge=1,inline,delta=2
    80                           	psect	text58,local,class=CODE,merge=1,inline,delta=2
    81                           	psect	text59,local,class=CODE,merge=1,inline,delta=2
    82                           	psect	text60,local,class=CODE,merge=1,delta=2
    83                           	psect	text61,local,class=CODE,merge=1,delta=2
    84                           	psect	text62,local,class=CODE,merge=1,delta=2
    85                           	psect	text63,local,class=CODE,merge=1,delta=2
    86                           	psect	text64,local,class=CODE,merge=1,delta=2
    87                           	psect	text65,local,class=CODE,merge=1,delta=2
    88                           	psect	text66,local,class=CODE,merge=1,delta=2
    89                           	psect	text67,local,class=CODE,merge=1,delta=2
    90                           	psect	text68,local,class=CODE,merge=1,delta=2
    91                           	psect	text69,local,class=CODE,merge=1,delta=2
    92                           	psect	text70,local,class=CODE,merge=1,inline,delta=2
    93                           	psect	text71,local,class=CODE,merge=1,inline,delta=2
    94                           	psect	text72,local,class=CODE,merge=1,delta=2
    95                           	psect	text73,local,class=CODE,merge=1,delta=2
    96                           	psect	text74,local,class=CODE,merge=1,delta=2
    97                           	psect	text75,local,class=CODE,merge=1,delta=2
    98                           	psect	text76,local,class=CODE,merge=1,delta=2
    99                           	psect	text77,local,class=CODE,merge=1,delta=2
   100                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
   101                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
   102                           	dabs	1,0x7E,2
   103  0000                     
   104                           ; Version 2.40
   105                           ; Generated 17/11/2021 GMT
   106                           ; 
   107                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
   108                           ; All rights reserved.
   109                           ; 
   110                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   111                           ; 
   112                           ; Redistribution and use in source and binary forms, with or without modification, are
   113                           ; permitted provided that the following conditions are met:
   114                           ; 
   115                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   116                           ;        conditions and the following disclaimer.
   117                           ; 
   118                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   119                           ;        of conditions and the following disclaimer in the documentation and/or other
   120                           ;        materials provided with the distribution. Publication is not required when
   121                           ;        this file is used in an embedded application.
   122                           ; 
   123                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   124                           ;        software without specific prior written permission.
   125                           ; 
   126                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   127                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   128                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   129                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   130                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   131                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   132                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   133                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   134                           ; 
   135                           ; 
   136                           ; Code-generator required, PIC16LF1939 Definitions
   137                           ; 
   138                           ; SFR Addresses
   139  0000                     	;# 
   140  0001                     	;# 
   141  0002                     	;# 
   142  0003                     	;# 
   143  0004                     	;# 
   144  0005                     	;# 
   145  0006                     	;# 
   146  0007                     	;# 
   147  0008                     	;# 
   148  0009                     	;# 
   149  000A                     	;# 
   150  000B                     	;# 
   151  000C                     	;# 
   152  000D                     	;# 
   153  000E                     	;# 
   154  000F                     	;# 
   155  0010                     	;# 
   156  0011                     	;# 
   157  0012                     	;# 
   158  0013                     	;# 
   159  0015                     	;# 
   160  0016                     	;# 
   161  0016                     	;# 
   162  0017                     	;# 
   163  0018                     	;# 
   164  0019                     	;# 
   165  001A                     	;# 
   166  001B                     	;# 
   167  001C                     	;# 
   168  001E                     	;# 
   169  001F                     	;# 
   170  008C                     	;# 
   171  008D                     	;# 
   172  008E                     	;# 
   173  008F                     	;# 
   174  0090                     	;# 
   175  0091                     	;# 
   176  0092                     	;# 
   177  0093                     	;# 
   178  0095                     	;# 
   179  0096                     	;# 
   180  0097                     	;# 
   181  0098                     	;# 
   182  0099                     	;# 
   183  009A                     	;# 
   184  009B                     	;# 
   185  009B                     	;# 
   186  009C                     	;# 
   187  009D                     	;# 
   188  009E                     	;# 
   189  010C                     	;# 
   190  010D                     	;# 
   191  010E                     	;# 
   192  010F                     	;# 
   193  0110                     	;# 
   194  0111                     	;# 
   195  0112                     	;# 
   196  0113                     	;# 
   197  0114                     	;# 
   198  0115                     	;# 
   199  0116                     	;# 
   200  0117                     	;# 
   201  0118                     	;# 
   202  0119                     	;# 
   203  011A                     	;# 
   204  011B                     	;# 
   205  011D                     	;# 
   206  018C                     	;# 
   207  018D                     	;# 
   208  018F                     	;# 
   209  0190                     	;# 
   210  0191                     	;# 
   211  0191                     	;# 
   212  0192                     	;# 
   213  0193                     	;# 
   214  0193                     	;# 
   215  0193                     	;# 
   216  0194                     	;# 
   217  0195                     	;# 
   218  0196                     	;# 
   219  0199                     	;# 
   220  019A                     	;# 
   221  019B                     	;# 
   222  019B                     	;# 
   223  019B                     	;# 
   224  019B                     	;# 
   225  019C                     	;# 
   226  019C                     	;# 
   227  019D                     	;# 
   228  019E                     	;# 
   229  019F                     	;# 
   230  020D                     	;# 
   231  0210                     	;# 
   232  0211                     	;# 
   233  0212                     	;# 
   234  0213                     	;# 
   235  0214                     	;# 
   236  0215                     	;# 
   237  0215                     	;# 
   238  0216                     	;# 
   239  0217                     	;# 
   240  0291                     	;# 
   241  0291                     	;# 
   242  0292                     	;# 
   243  0293                     	;# 
   244  0294                     	;# 
   245  0295                     	;# 
   246  0295                     	;# 
   247  0296                     	;# 
   248  0298                     	;# 
   249  0298                     	;# 
   250  0299                     	;# 
   251  029A                     	;# 
   252  029B                     	;# 
   253  029C                     	;# 
   254  029C                     	;# 
   255  029D                     	;# 
   256  029E                     	;# 
   257  029F                     	;# 
   258  0311                     	;# 
   259  0311                     	;# 
   260  0312                     	;# 
   261  0313                     	;# 
   262  0314                     	;# 
   263  0315                     	;# 
   264  0315                     	;# 
   265  0316                     	;# 
   266  0318                     	;# 
   267  0318                     	;# 
   268  0319                     	;# 
   269  031A                     	;# 
   270  031C                     	;# 
   271  031C                     	;# 
   272  031D                     	;# 
   273  031E                     	;# 
   274  0394                     	;# 
   275  0395                     	;# 
   276  0396                     	;# 
   277  0415                     	;# 
   278  0416                     	;# 
   279  0417                     	;# 
   280  041C                     	;# 
   281  041D                     	;# 
   282  041E                     	;# 
   283  0791                     	;# 
   284  0792                     	;# 
   285  0793                     	;# 
   286  0794                     	;# 
   287  0795                     	;# 
   288  0798                     	;# 
   289  0799                     	;# 
   290  079A                     	;# 
   291  07A0                     	;# 
   292  07A1                     	;# 
   293  07A2                     	;# 
   294  07A3                     	;# 
   295  07A4                     	;# 
   296  07A5                     	;# 
   297  07A6                     	;# 
   298  07A7                     	;# 
   299  07A8                     	;# 
   300  07A9                     	;# 
   301  07AA                     	;# 
   302  07AB                     	;# 
   303  0FE4                     	;# 
   304  0FE5                     	;# 
   305  0FE6                     	;# 
   306  0FE7                     	;# 
   307  0FE8                     	;# 
   308  0FE9                     	;# 
   309  0FEA                     	;# 
   310  0FEB                     	;# 
   311  0FED                     	;# 
   312  0FEE                     	;# 
   313  0FEF                     	;# 
   314  0000                     	;# 
   315  0001                     	;# 
   316  0002                     	;# 
   317  0003                     	;# 
   318  0004                     	;# 
   319  0005                     	;# 
   320  0006                     	;# 
   321  0007                     	;# 
   322  0008                     	;# 
   323  0009                     	;# 
   324  000A                     	;# 
   325  000B                     	;# 
   326  000C                     	;# 
   327  000D                     	;# 
   328  000E                     	;# 
   329  000F                     	;# 
   330  0010                     	;# 
   331  0011                     	;# 
   332  0012                     	;# 
   333  0013                     	;# 
   334  0015                     	;# 
   335  0016                     	;# 
   336  0016                     	;# 
   337  0017                     	;# 
   338  0018                     	;# 
   339  0019                     	;# 
   340  001A                     	;# 
   341  001B                     	;# 
   342  001C                     	;# 
   343  001E                     	;# 
   344  001F                     	;# 
   345  008C                     	;# 
   346  008D                     	;# 
   347  008E                     	;# 
   348  008F                     	;# 
   349  0090                     	;# 
   350  0091                     	;# 
   351  0092                     	;# 
   352  0093                     	;# 
   353  0095                     	;# 
   354  0096                     	;# 
   355  0097                     	;# 
   356  0098                     	;# 
   357  0099                     	;# 
   358  009A                     	;# 
   359  009B                     	;# 
   360  009B                     	;# 
   361  009C                     	;# 
   362  009D                     	;# 
   363  009E                     	;# 
   364  010C                     	;# 
   365  010D                     	;# 
   366  010E                     	;# 
   367  010F                     	;# 
   368  0110                     	;# 
   369  0111                     	;# 
   370  0112                     	;# 
   371  0113                     	;# 
   372  0114                     	;# 
   373  0115                     	;# 
   374  0116                     	;# 
   375  0117                     	;# 
   376  0118                     	;# 
   377  0119                     	;# 
   378  011A                     	;# 
   379  011B                     	;# 
   380  011D                     	;# 
   381  018C                     	;# 
   382  018D                     	;# 
   383  018F                     	;# 
   384  0190                     	;# 
   385  0191                     	;# 
   386  0191                     	;# 
   387  0192                     	;# 
   388  0193                     	;# 
   389  0193                     	;# 
   390  0193                     	;# 
   391  0194                     	;# 
   392  0195                     	;# 
   393  0196                     	;# 
   394  0199                     	;# 
   395  019A                     	;# 
   396  019B                     	;# 
   397  019B                     	;# 
   398  019B                     	;# 
   399  019B                     	;# 
   400  019C                     	;# 
   401  019C                     	;# 
   402  019D                     	;# 
   403  019E                     	;# 
   404  019F                     	;# 
   405  020D                     	;# 
   406  0210                     	;# 
   407  0211                     	;# 
   408  0212                     	;# 
   409  0213                     	;# 
   410  0214                     	;# 
   411  0215                     	;# 
   412  0215                     	;# 
   413  0216                     	;# 
   414  0217                     	;# 
   415  0291                     	;# 
   416  0291                     	;# 
   417  0292                     	;# 
   418  0293                     	;# 
   419  0294                     	;# 
   420  0295                     	;# 
   421  0295                     	;# 
   422  0296                     	;# 
   423  0298                     	;# 
   424  0298                     	;# 
   425  0299                     	;# 
   426  029A                     	;# 
   427  029B                     	;# 
   428  029C                     	;# 
   429  029C                     	;# 
   430  029D                     	;# 
   431  029E                     	;# 
   432  029F                     	;# 
   433  0311                     	;# 
   434  0311                     	;# 
   435  0312                     	;# 
   436  0313                     	;# 
   437  0314                     	;# 
   438  0315                     	;# 
   439  0315                     	;# 
   440  0316                     	;# 
   441  0318                     	;# 
   442  0318                     	;# 
   443  0319                     	;# 
   444  031A                     	;# 
   445  031C                     	;# 
   446  031C                     	;# 
   447  031D                     	;# 
   448  031E                     	;# 
   449  0394                     	;# 
   450  0395                     	;# 
   451  0396                     	;# 
   452  0415                     	;# 
   453  0416                     	;# 
   454  0417                     	;# 
   455  041C                     	;# 
   456  041D                     	;# 
   457  041E                     	;# 
   458  0791                     	;# 
   459  0792                     	;# 
   460  0793                     	;# 
   461  0794                     	;# 
   462  0795                     	;# 
   463  0798                     	;# 
   464  0799                     	;# 
   465  079A                     	;# 
   466  07A0                     	;# 
   467  07A1                     	;# 
   468  07A2                     	;# 
   469  07A3                     	;# 
   470  07A4                     	;# 
   471  07A5                     	;# 
   472  07A6                     	;# 
   473  07A7                     	;# 
   474  07A8                     	;# 
   475  07A9                     	;# 
   476  07AA                     	;# 
   477  07AB                     	;# 
   478  0FE4                     	;# 
   479  0FE5                     	;# 
   480  0FE6                     	;# 
   481  0FE7                     	;# 
   482  0FE8                     	;# 
   483  0FE9                     	;# 
   484  0FEA                     	;# 
   485  0FEB                     	;# 
   486  0FED                     	;# 
   487  0FEE                     	;# 
   488  0FEF                     	;# 
   489  0000                     	;# 
   490  0001                     	;# 
   491  0002                     	;# 
   492  0003                     	;# 
   493  0004                     	;# 
   494  0005                     	;# 
   495  0006                     	;# 
   496  0007                     	;# 
   497  0008                     	;# 
   498  0009                     	;# 
   499  000A                     	;# 
   500  000B                     	;# 
   501  000C                     	;# 
   502  000D                     	;# 
   503  000E                     	;# 
   504  000F                     	;# 
   505  0010                     	;# 
   506  0011                     	;# 
   507  0012                     	;# 
   508  0013                     	;# 
   509  0015                     	;# 
   510  0016                     	;# 
   511  0016                     	;# 
   512  0017                     	;# 
   513  0018                     	;# 
   514  0019                     	;# 
   515  001A                     	;# 
   516  001B                     	;# 
   517  001C                     	;# 
   518  001E                     	;# 
   519  001F                     	;# 
   520  008C                     	;# 
   521  008D                     	;# 
   522  008E                     	;# 
   523  008F                     	;# 
   524  0090                     	;# 
   525  0091                     	;# 
   526  0092                     	;# 
   527  0093                     	;# 
   528  0095                     	;# 
   529  0096                     	;# 
   530  0097                     	;# 
   531  0098                     	;# 
   532  0099                     	;# 
   533  009A                     	;# 
   534  009B                     	;# 
   535  009B                     	;# 
   536  009C                     	;# 
   537  009D                     	;# 
   538  009E                     	;# 
   539  010C                     	;# 
   540  010D                     	;# 
   541  010E                     	;# 
   542  010F                     	;# 
   543  0110                     	;# 
   544  0111                     	;# 
   545  0112                     	;# 
   546  0113                     	;# 
   547  0114                     	;# 
   548  0115                     	;# 
   549  0116                     	;# 
   550  0117                     	;# 
   551  0118                     	;# 
   552  0119                     	;# 
   553  011A                     	;# 
   554  011B                     	;# 
   555  011D                     	;# 
   556  018C                     	;# 
   557  018D                     	;# 
   558  018F                     	;# 
   559  0190                     	;# 
   560  0191                     	;# 
   561  0191                     	;# 
   562  0192                     	;# 
   563  0193                     	;# 
   564  0193                     	;# 
   565  0193                     	;# 
   566  0194                     	;# 
   567  0195                     	;# 
   568  0196                     	;# 
   569  0199                     	;# 
   570  019A                     	;# 
   571  019B                     	;# 
   572  019B                     	;# 
   573  019B                     	;# 
   574  019B                     	;# 
   575  019C                     	;# 
   576  019C                     	;# 
   577  019D                     	;# 
   578  019E                     	;# 
   579  019F                     	;# 
   580  020D                     	;# 
   581  0210                     	;# 
   582  0211                     	;# 
   583  0212                     	;# 
   584  0213                     	;# 
   585  0214                     	;# 
   586  0215                     	;# 
   587  0215                     	;# 
   588  0216                     	;# 
   589  0217                     	;# 
   590  0291                     	;# 
   591  0291                     	;# 
   592  0292                     	;# 
   593  0293                     	;# 
   594  0294                     	;# 
   595  0295                     	;# 
   596  0295                     	;# 
   597  0296                     	;# 
   598  0298                     	;# 
   599  0298                     	;# 
   600  0299                     	;# 
   601  029A                     	;# 
   602  029B                     	;# 
   603  029C                     	;# 
   604  029C                     	;# 
   605  029D                     	;# 
   606  029E                     	;# 
   607  029F                     	;# 
   608  0311                     	;# 
   609  0311                     	;# 
   610  0312                     	;# 
   611  0313                     	;# 
   612  0314                     	;# 
   613  0315                     	;# 
   614  0315                     	;# 
   615  0316                     	;# 
   616  0318                     	;# 
   617  0318                     	;# 
   618  0319                     	;# 
   619  031A                     	;# 
   620  031C                     	;# 
   621  031C                     	;# 
   622  031D                     	;# 
   623  031E                     	;# 
   624  0394                     	;# 
   625  0395                     	;# 
   626  0396                     	;# 
   627  0415                     	;# 
   628  0416                     	;# 
   629  0417                     	;# 
   630  041C                     	;# 
   631  041D                     	;# 
   632  041E                     	;# 
   633  0791                     	;# 
   634  0792                     	;# 
   635  0793                     	;# 
   636  0794                     	;# 
   637  0795                     	;# 
   638  0798                     	;# 
   639  0799                     	;# 
   640  079A                     	;# 
   641  07A0                     	;# 
   642  07A1                     	;# 
   643  07A2                     	;# 
   644  07A3                     	;# 
   645  07A4                     	;# 
   646  07A5                     	;# 
   647  07A6                     	;# 
   648  07A7                     	;# 
   649  07A8                     	;# 
   650  07A9                     	;# 
   651  07AA                     	;# 
   652  07AB                     	;# 
   653  0FE4                     	;# 
   654  0FE5                     	;# 
   655  0FE6                     	;# 
   656  0FE7                     	;# 
   657  0FE8                     	;# 
   658  0FE9                     	;# 
   659  0FEA                     	;# 
   660  0FEB                     	;# 
   661  0FED                     	;# 
   662  0FEE                     	;# 
   663  0FEF                     	;# 
   664  0000                     	;# 
   665  0001                     	;# 
   666  0002                     	;# 
   667  0003                     	;# 
   668  0004                     	;# 
   669  0005                     	;# 
   670  0006                     	;# 
   671  0007                     	;# 
   672  0008                     	;# 
   673  0009                     	;# 
   674  000A                     	;# 
   675  000B                     	;# 
   676  000C                     	;# 
   677  000D                     	;# 
   678  000E                     	;# 
   679  000F                     	;# 
   680  0010                     	;# 
   681  0011                     	;# 
   682  0012                     	;# 
   683  0013                     	;# 
   684  0015                     	;# 
   685  0016                     	;# 
   686  0016                     	;# 
   687  0017                     	;# 
   688  0018                     	;# 
   689  0019                     	;# 
   690  001A                     	;# 
   691  001B                     	;# 
   692  001C                     	;# 
   693  001E                     	;# 
   694  001F                     	;# 
   695  008C                     	;# 
   696  008D                     	;# 
   697  008E                     	;# 
   698  008F                     	;# 
   699  0090                     	;# 
   700  0091                     	;# 
   701  0092                     	;# 
   702  0093                     	;# 
   703  0095                     	;# 
   704  0096                     	;# 
   705  0097                     	;# 
   706  0098                     	;# 
   707  0099                     	;# 
   708  009A                     	;# 
   709  009B                     	;# 
   710  009B                     	;# 
   711  009C                     	;# 
   712  009D                     	;# 
   713  009E                     	;# 
   714  010C                     	;# 
   715  010D                     	;# 
   716  010E                     	;# 
   717  010F                     	;# 
   718  0110                     	;# 
   719  0111                     	;# 
   720  0112                     	;# 
   721  0113                     	;# 
   722  0114                     	;# 
   723  0115                     	;# 
   724  0116                     	;# 
   725  0117                     	;# 
   726  0118                     	;# 
   727  0119                     	;# 
   728  011A                     	;# 
   729  011B                     	;# 
   730  011D                     	;# 
   731  018C                     	;# 
   732  018D                     	;# 
   733  018F                     	;# 
   734  0190                     	;# 
   735  0191                     	;# 
   736  0191                     	;# 
   737  0192                     	;# 
   738  0193                     	;# 
   739  0193                     	;# 
   740  0193                     	;# 
   741  0194                     	;# 
   742  0195                     	;# 
   743  0196                     	;# 
   744  0199                     	;# 
   745  019A                     	;# 
   746  019B                     	;# 
   747  019B                     	;# 
   748  019B                     	;# 
   749  019B                     	;# 
   750  019C                     	;# 
   751  019C                     	;# 
   752  019D                     	;# 
   753  019E                     	;# 
   754  019F                     	;# 
   755  020D                     	;# 
   756  0210                     	;# 
   757  0211                     	;# 
   758  0212                     	;# 
   759  0213                     	;# 
   760  0214                     	;# 
   761  0215                     	;# 
   762  0215                     	;# 
   763  0216                     	;# 
   764  0217                     	;# 
   765  0291                     	;# 
   766  0291                     	;# 
   767  0292                     	;# 
   768  0293                     	;# 
   769  0294                     	;# 
   770  0295                     	;# 
   771  0295                     	;# 
   772  0296                     	;# 
   773  0298                     	;# 
   774  0298                     	;# 
   775  0299                     	;# 
   776  029A                     	;# 
   777  029B                     	;# 
   778  029C                     	;# 
   779  029C                     	;# 
   780  029D                     	;# 
   781  029E                     	;# 
   782  029F                     	;# 
   783  0311                     	;# 
   784  0311                     	;# 
   785  0312                     	;# 
   786  0313                     	;# 
   787  0314                     	;# 
   788  0315                     	;# 
   789  0315                     	;# 
   790  0316                     	;# 
   791  0318                     	;# 
   792  0318                     	;# 
   793  0319                     	;# 
   794  031A                     	;# 
   795  031C                     	;# 
   796  031C                     	;# 
   797  031D                     	;# 
   798  031E                     	;# 
   799  0394                     	;# 
   800  0395                     	;# 
   801  0396                     	;# 
   802  0415                     	;# 
   803  0416                     	;# 
   804  0417                     	;# 
   805  041C                     	;# 
   806  041D                     	;# 
   807  041E                     	;# 
   808  0791                     	;# 
   809  0792                     	;# 
   810  0793                     	;# 
   811  0794                     	;# 
   812  0795                     	;# 
   813  0798                     	;# 
   814  0799                     	;# 
   815  079A                     	;# 
   816  07A0                     	;# 
   817  07A1                     	;# 
   818  07A2                     	;# 
   819  07A3                     	;# 
   820  07A4                     	;# 
   821  07A5                     	;# 
   822  07A6                     	;# 
   823  07A7                     	;# 
   824  07A8                     	;# 
   825  07A9                     	;# 
   826  07AA                     	;# 
   827  07AB                     	;# 
   828  0FE4                     	;# 
   829  0FE5                     	;# 
   830  0FE6                     	;# 
   831  0FE7                     	;# 
   832  0FE8                     	;# 
   833  0FE9                     	;# 
   834  0FEA                     	;# 
   835  0FEB                     	;# 
   836  0FED                     	;# 
   837  0FEE                     	;# 
   838  0FEF                     	;# 
   839  0000                     	;# 
   840  0001                     	;# 
   841  0002                     	;# 
   842  0003                     	;# 
   843  0004                     	;# 
   844  0005                     	;# 
   845  0006                     	;# 
   846  0007                     	;# 
   847  0008                     	;# 
   848  0009                     	;# 
   849  000A                     	;# 
   850  000B                     	;# 
   851  000C                     	;# 
   852  000D                     	;# 
   853  000E                     	;# 
   854  000F                     	;# 
   855  0010                     	;# 
   856  0011                     	;# 
   857  0012                     	;# 
   858  0013                     	;# 
   859  0015                     	;# 
   860  0016                     	;# 
   861  0016                     	;# 
   862  0017                     	;# 
   863  0018                     	;# 
   864  0019                     	;# 
   865  001A                     	;# 
   866  001B                     	;# 
   867  001C                     	;# 
   868  001E                     	;# 
   869  001F                     	;# 
   870  008C                     	;# 
   871  008D                     	;# 
   872  008E                     	;# 
   873  008F                     	;# 
   874  0090                     	;# 
   875  0091                     	;# 
   876  0092                     	;# 
   877  0093                     	;# 
   878  0095                     	;# 
   879  0096                     	;# 
   880  0097                     	;# 
   881  0098                     	;# 
   882  0099                     	;# 
   883  009A                     	;# 
   884  009B                     	;# 
   885  009B                     	;# 
   886  009C                     	;# 
   887  009D                     	;# 
   888  009E                     	;# 
   889  010C                     	;# 
   890  010D                     	;# 
   891  010E                     	;# 
   892  010F                     	;# 
   893  0110                     	;# 
   894  0111                     	;# 
   895  0112                     	;# 
   896  0113                     	;# 
   897  0114                     	;# 
   898  0115                     	;# 
   899  0116                     	;# 
   900  0117                     	;# 
   901  0118                     	;# 
   902  0119                     	;# 
   903  011A                     	;# 
   904  011B                     	;# 
   905  011D                     	;# 
   906  018C                     	;# 
   907  018D                     	;# 
   908  018F                     	;# 
   909  0190                     	;# 
   910  0191                     	;# 
   911  0191                     	;# 
   912  0192                     	;# 
   913  0193                     	;# 
   914  0193                     	;# 
   915  0193                     	;# 
   916  0194                     	;# 
   917  0195                     	;# 
   918  0196                     	;# 
   919  0199                     	;# 
   920  019A                     	;# 
   921  019B                     	;# 
   922  019B                     	;# 
   923  019B                     	;# 
   924  019B                     	;# 
   925  019C                     	;# 
   926  019C                     	;# 
   927  019D                     	;# 
   928  019E                     	;# 
   929  019F                     	;# 
   930  020D                     	;# 
   931  0210                     	;# 
   932  0211                     	;# 
   933  0212                     	;# 
   934  0213                     	;# 
   935  0214                     	;# 
   936  0215                     	;# 
   937  0215                     	;# 
   938  0216                     	;# 
   939  0217                     	;# 
   940  0291                     	;# 
   941  0291                     	;# 
   942  0292                     	;# 
   943  0293                     	;# 
   944  0294                     	;# 
   945  0295                     	;# 
   946  0295                     	;# 
   947  0296                     	;# 
   948  0298                     	;# 
   949  0298                     	;# 
   950  0299                     	;# 
   951  029A                     	;# 
   952  029B                     	;# 
   953  029C                     	;# 
   954  029C                     	;# 
   955  029D                     	;# 
   956  029E                     	;# 
   957  029F                     	;# 
   958  0311                     	;# 
   959  0311                     	;# 
   960  0312                     	;# 
   961  0313                     	;# 
   962  0314                     	;# 
   963  0315                     	;# 
   964  0315                     	;# 
   965  0316                     	;# 
   966  0318                     	;# 
   967  0318                     	;# 
   968  0319                     	;# 
   969  031A                     	;# 
   970  031C                     	;# 
   971  031C                     	;# 
   972  031D                     	;# 
   973  031E                     	;# 
   974  0394                     	;# 
   975  0395                     	;# 
   976  0396                     	;# 
   977  0415                     	;# 
   978  0416                     	;# 
   979  0417                     	;# 
   980  041C                     	;# 
   981  041D                     	;# 
   982  041E                     	;# 
   983  0791                     	;# 
   984  0792                     	;# 
   985  0793                     	;# 
   986  0794                     	;# 
   987  0795                     	;# 
   988  0798                     	;# 
   989  0799                     	;# 
   990  079A                     	;# 
   991  07A0                     	;# 
   992  07A1                     	;# 
   993  07A2                     	;# 
   994  07A3                     	;# 
   995  07A4                     	;# 
   996  07A5                     	;# 
   997  07A6                     	;# 
   998  07A7                     	;# 
   999  07A8                     	;# 
  1000  07A9                     	;# 
  1001  07AA                     	;# 
  1002  07AB                     	;# 
  1003  0FE4                     	;# 
  1004  0FE5                     	;# 
  1005  0FE6                     	;# 
  1006  0FE7                     	;# 
  1007  0FE8                     	;# 
  1008  0FE9                     	;# 
  1009  0FEA                     	;# 
  1010  0FEB                     	;# 
  1011  0FED                     	;# 
  1012  0FEE                     	;# 
  1013  0FEF                     	;# 
  1014  0000                     	;# 
  1015  0001                     	;# 
  1016  0002                     	;# 
  1017  0003                     	;# 
  1018  0004                     	;# 
  1019  0005                     	;# 
  1020  0006                     	;# 
  1021  0007                     	;# 
  1022  0008                     	;# 
  1023  0009                     	;# 
  1024  000A                     	;# 
  1025  000B                     	;# 
  1026  000C                     	;# 
  1027  000D                     	;# 
  1028  000E                     	;# 
  1029  000F                     	;# 
  1030  0010                     	;# 
  1031  0011                     	;# 
  1032  0012                     	;# 
  1033  0013                     	;# 
  1034  0015                     	;# 
  1035  0016                     	;# 
  1036  0016                     	;# 
  1037  0017                     	;# 
  1038  0018                     	;# 
  1039  0019                     	;# 
  1040  001A                     	;# 
  1041  001B                     	;# 
  1042  001C                     	;# 
  1043  001E                     	;# 
  1044  001F                     	;# 
  1045  008C                     	;# 
  1046  008D                     	;# 
  1047  008E                     	;# 
  1048  008F                     	;# 
  1049  0090                     	;# 
  1050  0091                     	;# 
  1051  0092                     	;# 
  1052  0093                     	;# 
  1053  0095                     	;# 
  1054  0096                     	;# 
  1055  0097                     	;# 
  1056  0098                     	;# 
  1057  0099                     	;# 
  1058  009A                     	;# 
  1059  009B                     	;# 
  1060  009B                     	;# 
  1061  009C                     	;# 
  1062  009D                     	;# 
  1063  009E                     	;# 
  1064  010C                     	;# 
  1065  010D                     	;# 
  1066  010E                     	;# 
  1067  010F                     	;# 
  1068  0110                     	;# 
  1069  0111                     	;# 
  1070  0112                     	;# 
  1071  0113                     	;# 
  1072  0114                     	;# 
  1073  0115                     	;# 
  1074  0116                     	;# 
  1075  0117                     	;# 
  1076  0118                     	;# 
  1077  0119                     	;# 
  1078  011A                     	;# 
  1079  011B                     	;# 
  1080  011D                     	;# 
  1081  018C                     	;# 
  1082  018D                     	;# 
  1083  018F                     	;# 
  1084  0190                     	;# 
  1085  0191                     	;# 
  1086  0191                     	;# 
  1087  0192                     	;# 
  1088  0193                     	;# 
  1089  0193                     	;# 
  1090  0193                     	;# 
  1091  0194                     	;# 
  1092  0195                     	;# 
  1093  0196                     	;# 
  1094  0199                     	;# 
  1095  019A                     	;# 
  1096  019B                     	;# 
  1097  019B                     	;# 
  1098  019B                     	;# 
  1099  019B                     	;# 
  1100  019C                     	;# 
  1101  019C                     	;# 
  1102  019D                     	;# 
  1103  019E                     	;# 
  1104  019F                     	;# 
  1105  020D                     	;# 
  1106  0210                     	;# 
  1107  0211                     	;# 
  1108  0212                     	;# 
  1109  0213                     	;# 
  1110  0214                     	;# 
  1111  0215                     	;# 
  1112  0215                     	;# 
  1113  0216                     	;# 
  1114  0217                     	;# 
  1115  0291                     	;# 
  1116  0291                     	;# 
  1117  0292                     	;# 
  1118  0293                     	;# 
  1119  0294                     	;# 
  1120  0295                     	;# 
  1121  0295                     	;# 
  1122  0296                     	;# 
  1123  0298                     	;# 
  1124  0298                     	;# 
  1125  0299                     	;# 
  1126  029A                     	;# 
  1127  029B                     	;# 
  1128  029C                     	;# 
  1129  029C                     	;# 
  1130  029D                     	;# 
  1131  029E                     	;# 
  1132  029F                     	;# 
  1133  0311                     	;# 
  1134  0311                     	;# 
  1135  0312                     	;# 
  1136  0313                     	;# 
  1137  0314                     	;# 
  1138  0315                     	;# 
  1139  0315                     	;# 
  1140  0316                     	;# 
  1141  0318                     	;# 
  1142  0318                     	;# 
  1143  0319                     	;# 
  1144  031A                     	;# 
  1145  031C                     	;# 
  1146  031C                     	;# 
  1147  031D                     	;# 
  1148  031E                     	;# 
  1149  0394                     	;# 
  1150  0395                     	;# 
  1151  0396                     	;# 
  1152  0415                     	;# 
  1153  0416                     	;# 
  1154  0417                     	;# 
  1155  041C                     	;# 
  1156  041D                     	;# 
  1157  041E                     	;# 
  1158  0791                     	;# 
  1159  0792                     	;# 
  1160  0793                     	;# 
  1161  0794                     	;# 
  1162  0795                     	;# 
  1163  0798                     	;# 
  1164  0799                     	;# 
  1165  079A                     	;# 
  1166  07A0                     	;# 
  1167  07A1                     	;# 
  1168  07A2                     	;# 
  1169  07A3                     	;# 
  1170  07A4                     	;# 
  1171  07A5                     	;# 
  1172  07A6                     	;# 
  1173  07A7                     	;# 
  1174  07A8                     	;# 
  1175  07A9                     	;# 
  1176  07AA                     	;# 
  1177  07AB                     	;# 
  1178  0FE4                     	;# 
  1179  0FE5                     	;# 
  1180  0FE6                     	;# 
  1181  0FE7                     	;# 
  1182  0FE8                     	;# 
  1183  0FE9                     	;# 
  1184  0FEA                     	;# 
  1185  0FEB                     	;# 
  1186  0FED                     	;# 
  1187  0FEE                     	;# 
  1188  0FEF                     	;# 
  1189  0000                     	;# 
  1190  0001                     	;# 
  1191  0002                     	;# 
  1192  0003                     	;# 
  1193  0004                     	;# 
  1194  0005                     	;# 
  1195  0006                     	;# 
  1196  0007                     	;# 
  1197  0008                     	;# 
  1198  0009                     	;# 
  1199  000A                     	;# 
  1200  000B                     	;# 
  1201  000C                     	;# 
  1202  000D                     	;# 
  1203  000E                     	;# 
  1204  000F                     	;# 
  1205  0010                     	;# 
  1206  0011                     	;# 
  1207  0012                     	;# 
  1208  0013                     	;# 
  1209  0015                     	;# 
  1210  0016                     	;# 
  1211  0016                     	;# 
  1212  0017                     	;# 
  1213  0018                     	;# 
  1214  0019                     	;# 
  1215  001A                     	;# 
  1216  001B                     	;# 
  1217  001C                     	;# 
  1218  001E                     	;# 
  1219  001F                     	;# 
  1220  008C                     	;# 
  1221  008D                     	;# 
  1222  008E                     	;# 
  1223  008F                     	;# 
  1224  0090                     	;# 
  1225  0091                     	;# 
  1226  0092                     	;# 
  1227  0093                     	;# 
  1228  0095                     	;# 
  1229  0096                     	;# 
  1230  0097                     	;# 
  1231  0098                     	;# 
  1232  0099                     	;# 
  1233  009A                     	;# 
  1234  009B                     	;# 
  1235  009B                     	;# 
  1236  009C                     	;# 
  1237  009D                     	;# 
  1238  009E                     	;# 
  1239  010C                     	;# 
  1240  010D                     	;# 
  1241  010E                     	;# 
  1242  010F                     	;# 
  1243  0110                     	;# 
  1244  0111                     	;# 
  1245  0112                     	;# 
  1246  0113                     	;# 
  1247  0114                     	;# 
  1248  0115                     	;# 
  1249  0116                     	;# 
  1250  0117                     	;# 
  1251  0118                     	;# 
  1252  0119                     	;# 
  1253  011A                     	;# 
  1254  011B                     	;# 
  1255  011D                     	;# 
  1256  018C                     	;# 
  1257  018D                     	;# 
  1258  018F                     	;# 
  1259  0190                     	;# 
  1260  0191                     	;# 
  1261  0191                     	;# 
  1262  0192                     	;# 
  1263  0193                     	;# 
  1264  0193                     	;# 
  1265  0193                     	;# 
  1266  0194                     	;# 
  1267  0195                     	;# 
  1268  0196                     	;# 
  1269  0199                     	;# 
  1270  019A                     	;# 
  1271  019B                     	;# 
  1272  019B                     	;# 
  1273  019B                     	;# 
  1274  019B                     	;# 
  1275  019C                     	;# 
  1276  019C                     	;# 
  1277  019D                     	;# 
  1278  019E                     	;# 
  1279  019F                     	;# 
  1280  020D                     	;# 
  1281  0210                     	;# 
  1282  0211                     	;# 
  1283  0212                     	;# 
  1284  0213                     	;# 
  1285  0214                     	;# 
  1286  0215                     	;# 
  1287  0215                     	;# 
  1288  0216                     	;# 
  1289  0217                     	;# 
  1290  0291                     	;# 
  1291  0291                     	;# 
  1292  0292                     	;# 
  1293  0293                     	;# 
  1294  0294                     	;# 
  1295  0295                     	;# 
  1296  0295                     	;# 
  1297  0296                     	;# 
  1298  0298                     	;# 
  1299  0298                     	;# 
  1300  0299                     	;# 
  1301  029A                     	;# 
  1302  029B                     	;# 
  1303  029C                     	;# 
  1304  029C                     	;# 
  1305  029D                     	;# 
  1306  029E                     	;# 
  1307  029F                     	;# 
  1308  0311                     	;# 
  1309  0311                     	;# 
  1310  0312                     	;# 
  1311  0313                     	;# 
  1312  0314                     	;# 
  1313  0315                     	;# 
  1314  0315                     	;# 
  1315  0316                     	;# 
  1316  0318                     	;# 
  1317  0318                     	;# 
  1318  0319                     	;# 
  1319  031A                     	;# 
  1320  031C                     	;# 
  1321  031C                     	;# 
  1322  031D                     	;# 
  1323  031E                     	;# 
  1324  0394                     	;# 
  1325  0395                     	;# 
  1326  0396                     	;# 
  1327  0415                     	;# 
  1328  0416                     	;# 
  1329  0417                     	;# 
  1330  041C                     	;# 
  1331  041D                     	;# 
  1332  041E                     	;# 
  1333  0791                     	;# 
  1334  0792                     	;# 
  1335  0793                     	;# 
  1336  0794                     	;# 
  1337  0795                     	;# 
  1338  0798                     	;# 
  1339  0799                     	;# 
  1340  079A                     	;# 
  1341  07A0                     	;# 
  1342  07A1                     	;# 
  1343  07A2                     	;# 
  1344  07A3                     	;# 
  1345  07A4                     	;# 
  1346  07A5                     	;# 
  1347  07A6                     	;# 
  1348  07A7                     	;# 
  1349  07A8                     	;# 
  1350  07A9                     	;# 
  1351  07AA                     	;# 
  1352  07AB                     	;# 
  1353  0FE4                     	;# 
  1354  0FE5                     	;# 
  1355  0FE6                     	;# 
  1356  0FE7                     	;# 
  1357  0FE8                     	;# 
  1358  0FE9                     	;# 
  1359  0FEA                     	;# 
  1360  0FEB                     	;# 
  1361  0FED                     	;# 
  1362  0FEE                     	;# 
  1363  0FEF                     	;# 
  1364  0000                     	;# 
  1365  0001                     	;# 
  1366  0002                     	;# 
  1367  0003                     	;# 
  1368  0004                     	;# 
  1369  0005                     	;# 
  1370  0006                     	;# 
  1371  0007                     	;# 
  1372  0008                     	;# 
  1373  0009                     	;# 
  1374  000A                     	;# 
  1375  000B                     	;# 
  1376  000C                     	;# 
  1377  000D                     	;# 
  1378  000E                     	;# 
  1379  000F                     	;# 
  1380  0010                     	;# 
  1381  0011                     	;# 
  1382  0012                     	;# 
  1383  0013                     	;# 
  1384  0015                     	;# 
  1385  0016                     	;# 
  1386  0016                     	;# 
  1387  0017                     	;# 
  1388  0018                     	;# 
  1389  0019                     	;# 
  1390  001A                     	;# 
  1391  001B                     	;# 
  1392  001C                     	;# 
  1393  001E                     	;# 
  1394  001F                     	;# 
  1395  008C                     	;# 
  1396  008D                     	;# 
  1397  008E                     	;# 
  1398  008F                     	;# 
  1399  0090                     	;# 
  1400  0091                     	;# 
  1401  0092                     	;# 
  1402  0093                     	;# 
  1403  0095                     	;# 
  1404  0096                     	;# 
  1405  0097                     	;# 
  1406  0098                     	;# 
  1407  0099                     	;# 
  1408  009A                     	;# 
  1409  009B                     	;# 
  1410  009B                     	;# 
  1411  009C                     	;# 
  1412  009D                     	;# 
  1413  009E                     	;# 
  1414  010C                     	;# 
  1415  010D                     	;# 
  1416  010E                     	;# 
  1417  010F                     	;# 
  1418  0110                     	;# 
  1419  0111                     	;# 
  1420  0112                     	;# 
  1421  0113                     	;# 
  1422  0114                     	;# 
  1423  0115                     	;# 
  1424  0116                     	;# 
  1425  0117                     	;# 
  1426  0118                     	;# 
  1427  0119                     	;# 
  1428  011A                     	;# 
  1429  011B                     	;# 
  1430  011D                     	;# 
  1431  018C                     	;# 
  1432  018D                     	;# 
  1433  018F                     	;# 
  1434  0190                     	;# 
  1435  0191                     	;# 
  1436  0191                     	;# 
  1437  0192                     	;# 
  1438  0193                     	;# 
  1439  0193                     	;# 
  1440  0193                     	;# 
  1441  0194                     	;# 
  1442  0195                     	;# 
  1443  0196                     	;# 
  1444  0199                     	;# 
  1445  019A                     	;# 
  1446  019B                     	;# 
  1447  019B                     	;# 
  1448  019B                     	;# 
  1449  019B                     	;# 
  1450  019C                     	;# 
  1451  019C                     	;# 
  1452  019D                     	;# 
  1453  019E                     	;# 
  1454  019F                     	;# 
  1455  020D                     	;# 
  1456  0210                     	;# 
  1457  0211                     	;# 
  1458  0212                     	;# 
  1459  0213                     	;# 
  1460  0214                     	;# 
  1461  0215                     	;# 
  1462  0215                     	;# 
  1463  0216                     	;# 
  1464  0217                     	;# 
  1465  0291                     	;# 
  1466  0291                     	;# 
  1467  0292                     	;# 
  1468  0293                     	;# 
  1469  0294                     	;# 
  1470  0295                     	;# 
  1471  0295                     	;# 
  1472  0296                     	;# 
  1473  0298                     	;# 
  1474  0298                     	;# 
  1475  0299                     	;# 
  1476  029A                     	;# 
  1477  029B                     	;# 
  1478  029C                     	;# 
  1479  029C                     	;# 
  1480  029D                     	;# 
  1481  029E                     	;# 
  1482  029F                     	;# 
  1483  0311                     	;# 
  1484  0311                     	;# 
  1485  0312                     	;# 
  1486  0313                     	;# 
  1487  0314                     	;# 
  1488  0315                     	;# 
  1489  0315                     	;# 
  1490  0316                     	;# 
  1491  0318                     	;# 
  1492  0318                     	;# 
  1493  0319                     	;# 
  1494  031A                     	;# 
  1495  031C                     	;# 
  1496  031C                     	;# 
  1497  031D                     	;# 
  1498  031E                     	;# 
  1499  0394                     	;# 
  1500  0395                     	;# 
  1501  0396                     	;# 
  1502  0415                     	;# 
  1503  0416                     	;# 
  1504  0417                     	;# 
  1505  041C                     	;# 
  1506  041D                     	;# 
  1507  041E                     	;# 
  1508  0791                     	;# 
  1509  0792                     	;# 
  1510  0793                     	;# 
  1511  0794                     	;# 
  1512  0795                     	;# 
  1513  0798                     	;# 
  1514  0799                     	;# 
  1515  079A                     	;# 
  1516  07A0                     	;# 
  1517  07A1                     	;# 
  1518  07A2                     	;# 
  1519  07A3                     	;# 
  1520  07A4                     	;# 
  1521  07A5                     	;# 
  1522  07A6                     	;# 
  1523  07A7                     	;# 
  1524  07A8                     	;# 
  1525  07A9                     	;# 
  1526  07AA                     	;# 
  1527  07AB                     	;# 
  1528  0FE4                     	;# 
  1529  0FE5                     	;# 
  1530  0FE6                     	;# 
  1531  0FE7                     	;# 
  1532  0FE8                     	;# 
  1533  0FE9                     	;# 
  1534  0FEA                     	;# 
  1535  0FEB                     	;# 
  1536  0FED                     	;# 
  1537  0FEE                     	;# 
  1538  0FEF                     	;# 
  1539  0000                     	;# 
  1540  0001                     	;# 
  1541  0002                     	;# 
  1542  0003                     	;# 
  1543  0004                     	;# 
  1544  0005                     	;# 
  1545  0006                     	;# 
  1546  0007                     	;# 
  1547  0008                     	;# 
  1548  0009                     	;# 
  1549  000A                     	;# 
  1550  000B                     	;# 
  1551  000C                     	;# 
  1552  000D                     	;# 
  1553  000E                     	;# 
  1554  000F                     	;# 
  1555  0010                     	;# 
  1556  0011                     	;# 
  1557  0012                     	;# 
  1558  0013                     	;# 
  1559  0015                     	;# 
  1560  0016                     	;# 
  1561  0016                     	;# 
  1562  0017                     	;# 
  1563  0018                     	;# 
  1564  0019                     	;# 
  1565  001A                     	;# 
  1566  001B                     	;# 
  1567  001C                     	;# 
  1568  001E                     	;# 
  1569  001F                     	;# 
  1570  008C                     	;# 
  1571  008D                     	;# 
  1572  008E                     	;# 
  1573  008F                     	;# 
  1574  0090                     	;# 
  1575  0091                     	;# 
  1576  0092                     	;# 
  1577  0093                     	;# 
  1578  0095                     	;# 
  1579  0096                     	;# 
  1580  0097                     	;# 
  1581  0098                     	;# 
  1582  0099                     	;# 
  1583  009A                     	;# 
  1584  009B                     	;# 
  1585  009B                     	;# 
  1586  009C                     	;# 
  1587  009D                     	;# 
  1588  009E                     	;# 
  1589  010C                     	;# 
  1590  010D                     	;# 
  1591  010E                     	;# 
  1592  010F                     	;# 
  1593  0110                     	;# 
  1594  0111                     	;# 
  1595  0112                     	;# 
  1596  0113                     	;# 
  1597  0114                     	;# 
  1598  0115                     	;# 
  1599  0116                     	;# 
  1600  0117                     	;# 
  1601  0118                     	;# 
  1602  0119                     	;# 
  1603  011A                     	;# 
  1604  011B                     	;# 
  1605  011D                     	;# 
  1606  018C                     	;# 
  1607  018D                     	;# 
  1608  018F                     	;# 
  1609  0190                     	;# 
  1610  0191                     	;# 
  1611  0191                     	;# 
  1612  0192                     	;# 
  1613  0193                     	;# 
  1614  0193                     	;# 
  1615  0193                     	;# 
  1616  0194                     	;# 
  1617  0195                     	;# 
  1618  0196                     	;# 
  1619  0199                     	;# 
  1620  019A                     	;# 
  1621  019B                     	;# 
  1622  019B                     	;# 
  1623  019B                     	;# 
  1624  019B                     	;# 
  1625  019C                     	;# 
  1626  019C                     	;# 
  1627  019D                     	;# 
  1628  019E                     	;# 
  1629  019F                     	;# 
  1630  020D                     	;# 
  1631  0210                     	;# 
  1632  0211                     	;# 
  1633  0212                     	;# 
  1634  0213                     	;# 
  1635  0214                     	;# 
  1636  0215                     	;# 
  1637  0215                     	;# 
  1638  0216                     	;# 
  1639  0217                     	;# 
  1640  0291                     	;# 
  1641  0291                     	;# 
  1642  0292                     	;# 
  1643  0293                     	;# 
  1644  0294                     	;# 
  1645  0295                     	;# 
  1646  0295                     	;# 
  1647  0296                     	;# 
  1648  0298                     	;# 
  1649  0298                     	;# 
  1650  0299                     	;# 
  1651  029A                     	;# 
  1652  029B                     	;# 
  1653  029C                     	;# 
  1654  029C                     	;# 
  1655  029D                     	;# 
  1656  029E                     	;# 
  1657  029F                     	;# 
  1658  0311                     	;# 
  1659  0311                     	;# 
  1660  0312                     	;# 
  1661  0313                     	;# 
  1662  0314                     	;# 
  1663  0315                     	;# 
  1664  0315                     	;# 
  1665  0316                     	;# 
  1666  0318                     	;# 
  1667  0318                     	;# 
  1668  0319                     	;# 
  1669  031A                     	;# 
  1670  031C                     	;# 
  1671  031C                     	;# 
  1672  031D                     	;# 
  1673  031E                     	;# 
  1674  0394                     	;# 
  1675  0395                     	;# 
  1676  0396                     	;# 
  1677  0415                     	;# 
  1678  0416                     	;# 
  1679  0417                     	;# 
  1680  041C                     	;# 
  1681  041D                     	;# 
  1682  041E                     	;# 
  1683  0791                     	;# 
  1684  0792                     	;# 
  1685  0793                     	;# 
  1686  0794                     	;# 
  1687  0795                     	;# 
  1688  0798                     	;# 
  1689  0799                     	;# 
  1690  079A                     	;# 
  1691  07A0                     	;# 
  1692  07A1                     	;# 
  1693  07A2                     	;# 
  1694  07A3                     	;# 
  1695  07A4                     	;# 
  1696  07A5                     	;# 
  1697  07A6                     	;# 
  1698  07A7                     	;# 
  1699  07A8                     	;# 
  1700  07A9                     	;# 
  1701  07AA                     	;# 
  1702  07AB                     	;# 
  1703  0FE4                     	;# 
  1704  0FE5                     	;# 
  1705  0FE6                     	;# 
  1706  0FE7                     	;# 
  1707  0FE8                     	;# 
  1708  0FE9                     	;# 
  1709  0FEA                     	;# 
  1710  0FEB                     	;# 
  1711  0FED                     	;# 
  1712  0FEE                     	;# 
  1713  0FEF                     	;# 
  1714                           
  1715                           	psect	idataBANK0
  1716  0FD2                     __pidataBANK0:
  1717                           
  1718                           ;initializer for _BackLight_State
  1719  0FD2  3408               	retlw	8
  1720                           
  1721                           	psect	stringtext1
  1722  03C7                     __pstringtext1:
  1723  03C7                     _i2c_fsmStateTable:
  1724  03C7  34F7               	retlw	low _I2C_DO_IDLE
  1725  03C8  3407               	retlw	high _I2C_DO_IDLE
  1726  03C9  346A               	retlw	low _I2C_DO_SEND_ADR_READ
  1727  03CA  3407               	retlw	high _I2C_DO_SEND_ADR_READ
  1728  03CB  3483               	retlw	low _I2C_DO_SEND_ADR_WRITE
  1729  03CC  3407               	retlw	high _I2C_DO_SEND_ADR_WRITE
  1730  03CD  346C               	retlw	low _I2C_DO_TX
  1731  03CE  3402               	retlw	high _I2C_DO_TX
  1732  03CF  34C1               	retlw	low _I2C_DO_RX
  1733  03D0  3402               	retlw	high _I2C_DO_RX
  1734  03D1  3492               	retlw	low _I2C_DO_RCEN
  1735  03D2  3407               	retlw	high _I2C_DO_RCEN
  1736  03D3  3427               	retlw	low _I2C_DO_TX_EMPTY
  1737  03D4  3404               	retlw	high _I2C_DO_TX_EMPTY
  1738  03D5  34F2               	retlw	low _I2C_DO_SEND_RESTART_READ
  1739  03D6  3407               	retlw	high _I2C_DO_SEND_RESTART_READ
  1740  03D7  34ED               	retlw	low _I2C_DO_SEND_RESTART_WRITE
  1741  03D8  3407               	retlw	high _I2C_DO_SEND_RESTART_WRITE
  1742  03D9  34E8               	retlw	low _I2C_DO_SEND_RESTART
  1743  03DA  3407               	retlw	high _I2C_DO_SEND_RESTART
  1744  03DB  34E3               	retlw	low _I2C_DO_SEND_STOP
  1745  03DC  3407               	retlw	high _I2C_DO_SEND_STOP
  1746  03DD  34DE               	retlw	low _I2C_DO_RX_ACK
  1747  03DE  3407               	retlw	high _I2C_DO_RX_ACK
  1748  03DF  34D9               	retlw	low _I2C_DO_RX_NACK_STOP
  1749  03E0  3407               	retlw	high _I2C_DO_RX_NACK_STOP
  1750  03E1  34D4               	retlw	low _I2C_DO_RX_NACK_RESTART
  1751  03E2  3407               	retlw	high _I2C_DO_RX_NACK_RESTART
  1752  03E3  34CF               	retlw	low _I2C_DO_RESET
  1753  03E4  3407               	retlw	high _I2C_DO_RESET
  1754  03E5  3484               	retlw	low _I2C_DO_ADDRESS_NACK
  1755  03E6  3404               	retlw	high _I2C_DO_ADDRESS_NACK
  1756  03E7                     __end_of_i2c_fsmStateTable:
  1757  000F                     _PORTDbits	set	15
  1758  0012                     _PIR2bits	set	18
  1759  0011                     _PIR1bits	set	17
  1760  000B                     _INTCONbits	set	11
  1761  008B                     _SSPIF	set	139
  1762  0092                     _PIE2bits	set	146
  1763  0091                     _PIE1bits	set	145
  1764  009D                     _ADCON0bits	set	157
  1765  009D                     _ADCON0	set	157
  1766  009C                     _ADRESH	set	156
  1767  009B                     _ADRESL	set	155
  1768  009E                     _ADCON1	set	158
  1769  0097                     _WDTCON	set	151
  1770  0098                     _OSCTUNE	set	152
  1771  0099                     _OSCCON	set	153
  1772  0095                     _OPTION_REGbits	set	149
  1773  008F                     _TRISD	set	143
  1774  008E                     _TRISC	set	142
  1775  008D                     _TRISB	set	141
  1776  008C                     _TRISA	set	140
  1777  0090                     _TRISE	set	144
  1778  0474                     _TRISC4	set	1140
  1779  0473                     _TRISC3	set	1139
  1780  04D6                     _PLLR	set	1238
  1781  010C                     _LATAbits	set	268
  1782  0116                     _BORCON	set	278
  1783  011D                     _APFCON	set	285
  1784  010E                     _LATC	set	270
  1785  010D                     _LATB	set	269
  1786  010C                     _LATA	set	268
  1787  010F                     _LATD	set	271
  1788  0110                     _LATE	set	272
  1789  0199                     _RCREG	set	409
  1790  019D                     _RCSTAbits	set	413
  1791  019A                     _TXREG	set	410
  1792  019E                     _TXSTAbits	set	414
  1793  019C                     _SPBRGH	set	412
  1794  019B                     _SPBRGL	set	411
  1795  019E                     _TXSTA	set	414
  1796  019D                     _RCSTA	set	413
  1797  019F                     _BAUDCON	set	415
  1798  018C                     _ANSELA	set	396
  1799  0190                     _ANSELE	set	400
  1800  018D                     _ANSELB	set	397
  1801  018F                     _ANSELD	set	399
  1802  0215                     _SSPCON	set	533
  1803  0214                     _SSPSTATbits	set	532
  1804  0216                     _SSPCON2bits	set	534
  1805  0211                     _SSPBUF	set	529
  1806  0215                     _SSPCON1bits	set	533
  1807  0212                     _SSPADD	set	530
  1808  0216                     _SSPCON2	set	534
  1809  0215                     _SSPCON1	set	533
  1810  0214                     _SSPSTAT	set	532
  1811  020D                     _WPUB	set	525
  1812  0210                     _WPUE	set	528
  1813  10B3                     _RCEN	set	4275
  1814  10B6                     _ACKSTAT	set	4278
  1815  10B4                     _ACKEN	set	4276
  1816  10B5                     _ACKDT	set	4277
  1817  10B2                     _PEN	set	4274
  1818  10B1                     _RSEN	set	4273
  1819  10B0                     _SEN	set	4272
  1820  03E7                     STR_4:
  1821  03E7  3443               	retlw	67	;'C'
  1822  03E8  346F               	retlw	111	;'o'
  1823  03E9  3475               	retlw	117	;'u'
  1824  03EA  3463               	retlw	99	;'c'
  1825  03EB  346F               	retlw	111	;'o'
  1826  03EC  3475               	retlw	117	;'u'
  1827  03ED  3420               	retlw	32	;' '
  1828  03EE  346D               	retlw	109	;'m'
  1829  03EF  346F               	retlw	111	;'o'
  1830  03F0  346E               	retlw	110	;'n'
  1831  03F1  3420               	retlw	32	;' '
  1832  03F2  3466               	retlw	102	;'f'
  1833  03F3  3469               	retlw	105	;'i'
  1834  03F4  346C               	retlw	108	;'l'
  1835  03F5  3473               	retlw	115	;'s'
  1836  03F6  3421               	retlw	33	;'!'
  1837  03F7  3400               	retlw	0
  1838                           
  1839                           	psect	stringtext2
  1840  06CA                     __pstringtext2:
  1841  06CA                     STR_7:
  1842  06CA  3420               	retlw	32	;' '
  1843  06CB  342D               	retlw	45	;'-'
  1844  06CC  343E               	retlw	62	;'>'
  1845  06CD  3420               	retlw	32	;' '
  1846  06CE  344C               	retlw	76	;'L'
  1847  06CF  3445               	retlw	69	;'E'
  1848  06D0  3444               	retlw	68	;'D'
  1849  06D1  3420               	retlw	32	;' '
  1850  06D2  344F               	retlw	79	;'O'
  1851  06D3  3446               	retlw	70	;'F'
  1852  06D4  3446               	retlw	70	;'F'
  1853  06D5  3421               	retlw	33	;'!'
  1854  06D6  3421               	retlw	33	;'!'
  1855  06D7  340D               	retlw	13
  1856  06D8  340A               	retlw	10
  1857  06D9  3400               	retlw	0
  1858                           
  1859                           	psect	stringtext3
  1860  06DA                     __pstringtext3:
  1861  06DA                     STR_1:
  1862  06DA  3442               	retlw	66	;'B'
  1863  06DB  346F               	retlw	111	;'o'
  1864  06DC  346E               	retlw	110	;'n'
  1865  06DD  346A               	retlw	106	;'j'
  1866  06DE  346F               	retlw	111	;'o'
  1867  06DF  3475               	retlw	117	;'u'
  1868  06E0  3472               	retlw	114	;'r'
  1869  06E1  3420               	retlw	32	;' '
  1870  06E2  3445               	retlw	69	;'E'
  1871  06E3  3473               	retlw	115	;'s'
  1872  06E4  3474               	retlw	116	;'t'
  1873  06E5  3465               	retlw	101	;'e'
  1874  06E6  3462               	retlw	98	;'b'
  1875  06E7  3461               	retlw	97	;'a'
  1876  06E8  346E               	retlw	110	;'n'
  1877  06E9  3400               	retlw	0
  1878                           
  1879                           	psect	stringtext4
  1880  070A                     __pstringtext4:
  1881  070A                     STR_6:
  1882  070A  3420               	retlw	32	;' '
  1883  070B  342D               	retlw	45	;'-'
  1884  070C  343E               	retlw	62	;'>'
  1885  070D  3420               	retlw	32	;' '
  1886  070E  344C               	retlw	76	;'L'
  1887  070F  3445               	retlw	69	;'E'
  1888  0710  3444               	retlw	68	;'D'
  1889  0711  3420               	retlw	32	;' '
  1890  0712  344F               	retlw	79	;'O'
  1891  0713  344E               	retlw	78	;'N'
  1892  0714  3421               	retlw	33	;'!'
  1893  0715  3421               	retlw	33	;'!'
  1894  0716  340D               	retlw	13
  1895  0717  340A               	retlw	10
  1896  0718  3400               	retlw	0
  1897                           
  1898                           	psect	stringtext5
  1899  0719                     __pstringtext5:
  1900  0719                     STR_3:
  1901  0719  3453               	retlw	83	;'S'
  1902  071A  3461               	retlw	97	;'a'
  1903  071B  346C               	retlw	108	;'l'
  1904  071C  3475               	retlw	117	;'u'
  1905  071D  3474               	retlw	116	;'t'
  1906  071E  3420               	retlw	32	;' '
  1907  071F  3445               	retlw	69	;'E'
  1908  0720  3473               	retlw	115	;'s'
  1909  0721  3474               	retlw	116	;'t'
  1910  0722  3465               	retlw	101	;'e'
  1911  0723  3462               	retlw	98	;'b'
  1912  0724  3461               	retlw	97	;'a'
  1913  0725  346E               	retlw	110	;'n'
  1914  0726  3400               	retlw	0
  1915                           
  1916                           	psect	stringtext6
  1917  0761                     __pstringtext6:
  1918  0761                     STR_5:
  1919  0761  3448               	retlw	72	;'H'
  1920  0762  3465               	retlw	101	;'e'
  1921  0763  346C               	retlw	108	;'l'
  1922  0764  346C               	retlw	108	;'l'
  1923  0765  346F               	retlw	111	;'o'
  1924  0766  3421               	retlw	33	;'!'
  1925  0767  340D               	retlw	13
  1926  0768  340A               	retlw	10
  1927  0769  3400               	retlw	0
  1928                           
  1929                           	psect	stringtext7
  1930  0773                     __pstringtext7:
  1931  0773                     STR_2:
  1932  0773  3443               	retlw	67	;'C'
  1933  0774  346F               	retlw	111	;'o'
  1934  0775  3475               	retlw	117	;'u'
  1935  0776  3463               	retlw	99	;'c'
  1936  0777  346F               	retlw	111	;'o'
  1937  0778  3475               	retlw	117	;'u'
  1938  0779  3421               	retlw	33	;'!'
  1939  077A  3400               	retlw	0
  1940                           
  1941                           	psect	stringtext8
  1942  0000                     __pstringtext8:
  1943                           
  1944                           	psect	cinit
  1945  0049                     start_initialization:	
  1946                           ; #config settings
  1947                           
  1948  0049                     __initialization:
  1949                           
  1950                           ; Initialize objects allocated to BANK0
  1951  0049  318F  27D2  3180   	fcall	__pidataBANK0	;fetch initializer
  1952  004C  00EA               	movwf	__pdataBANK0& (0+127)
  1953                           
  1954                           ; Clear objects allocated to COMMON
  1955  004D  01FD               	clrf	__pbssCOMMON& (0+127)
  1956                           
  1957                           ; Clear objects allocated to BANK0
  1958  004E  3020               	movlw	low __pbssBANK0
  1959  004F  0084               	movwf	4
  1960  0050  3000               	movlw	high __pbssBANK0
  1961  0051  0085               	movwf	5
  1962  0052  3026               	movlw	38
  1963  0053  3187  2799  3180   	fcall	clear_ram0
  1964                           
  1965                           ; Clear objects allocated to BANK1
  1966  0056  30A0               	movlw	low __pbssBANK1
  1967  0057  0084               	movwf	4
  1968  0058  3000               	movlw	high __pbssBANK1
  1969  0059  0085               	movwf	5
  1970  005A  304D               	movlw	77
  1971  005B  3187  2799  3180   	fcall	clear_ram0
  1972  005E                     end_of_initialization:	
  1973                           ;End of C runtime variable initialization code
  1974                           
  1975  005E                     __end_of__initialization:
  1976  005E  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1977  005F  0020               	movlb	0
  1978  0060  3180  2862         	ljmp	_main	;jump to C main() function
  1979                           
  1980                           	psect	bssCOMMON
  1981  007D                     __pbssCOMMON:
  1982  007D                     _RS:
  1983  007D                     	ds	1
  1984                           
  1985                           	psect	bssBANK0
  1986  0020                     __pbssBANK0:
  1987  0020                     _eusartRxStatusBuffer:
  1988  0020                     	ds	8
  1989  0028                     _nout:
  1990  0028                     	ds	2
  1991  002A                     _width:
  1992  002A                     	ds	2
  1993  002C                     _prec:
  1994  002C                     	ds	2
  1995  002E                     _flags:
  1996  002E                     	ds	2
  1997  0030                     _EUSART_ErrorHandler:
  1998  0030                     	ds	2
  1999  0032                     _EUSART_OverrunErrorHandler:
  2000  0032                     	ds	2
  2001  0034                     _EUSART_FramingErrorHandler:
  2002  0034                     	ds	2
  2003  0036                     _EUSART_RxDefaultInterruptHandler:
  2004  0036                     	ds	2
  2005  0038                     _EUSART_TxDefaultInterruptHandler:
  2006  0038                     	ds	2
  2007  003A                     _ADC_InterruptHandler:
  2008  003A                     	ds	2
  2009  003C                     _MSSP_InterruptHandler:
  2010  003C                     	ds	2
  2011  003E                     _i2c_add:
  2012  003E                     	ds	1
  2013  003F                     _eusartRxLastError:
  2014  003F                     	ds	1
  2015  0040                     _eusartRxCount:
  2016  0040                     	ds	1
  2017  0041                     _eusartRxTail:
  2018  0041                     	ds	1
  2019  0042                     _eusartRxHead:
  2020  0042                     	ds	1
  2021  0043                     _eusartTxBufferRemaining:
  2022  0043                     	ds	1
  2023  0044                     _eusartTxTail:
  2024  0044                     	ds	1
  2025  0045                     _eusartTxHead:
  2026  0045                     	ds	1
  2027                           
  2028                           	psect	dataBANK0
  2029  006A                     __pdataBANK0:
  2030  006A                     _BackLight_State:
  2031  006A                     	ds	1
  2032                           
  2033                           	psect	bssBANK1
  2034  00A0                     __pbssBANK1:
  2035  00A0                     _dbuf:
  2036  00A0                     	ds	32
  2037  00C0                     _I2C_Status:
  2038  00C0                     	ds	29
  2039  00DD                     _eusartRxBuffer:
  2040  00DD                     	ds	8
  2041  00E5                     _eusartTxBuffer:
  2042  00E5                     	ds	8
  2043                           
  2044                           	psect	clrtext
  2045  0799                     clear_ram0:	
  2046                           ;	Called with FSR0 containing the base address, and
  2047                           ;	WREG with the size to clear
  2048                           
  2049  0799  0064               	clrwdt	;clear the watchdog before getting into this loop
  2050  079A                     clrloop0:
  2051  079A  0180               	clrf	0	;clear RAM location pointed to by FSR
  2052  079B  3101               	addfsr 0,1
  2053  079C  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2054  079D  2F9A               	goto	clrloop0	;have we reached the end yet?
  2055  079E  3400               	retlw	0	;all done for this memory range, return
  2056                           
  2057                           	psect	cstackBANK1
  2058  00ED                     __pcstackBANK1:
  2059  00ED                     main@lectureAN1:
  2060                           
  2061                           ; 2 bytes @ 0x0
  2062  00ED                     	ds	2
  2063  00EF                     main@reception:
  2064                           
  2065                           ; 1 bytes @ 0x2
  2066  00EF                     	ds	1
  2067                           
  2068                           	psect	cstackCOMMON
  2069  0070                     __pcstackCOMMON:
  2070  0070                     ?_I2C_SetBuffer:
  2071  0070                     ?_I2C_Initialize:	
  2072                           ; 1 bytes @ 0x0
  2073                           
  2074  0070                     ?_OSCILLATOR_Initialize:	
  2075                           ; 1 bytes @ 0x0
  2076                           
  2077  0070                     ?_WDT_Initialize:	
  2078                           ; 1 bytes @ 0x0
  2079                           
  2080  0070                     ?_ADC_Initialize:	
  2081                           ; 1 bytes @ 0x0
  2082                           
  2083  0070                     ?_EUSART_Initialize:	
  2084                           ; 1 bytes @ 0x0
  2085                           
  2086  0070                     ?_EUSART_Receive_ISR:	
  2087                           ; 1 bytes @ 0x0
  2088                           
  2089  0070                     ?_EUSART_Transmit_ISR:	
  2090                           ; 1 bytes @ 0x0
  2091                           
  2092  0070                     ??_EUSART_Transmit_ISR:	
  2093                           ; 1 bytes @ 0x0
  2094                           
  2095  0070                     ?_EUSART_DefaultFramingErrorHandler:	
  2096                           ; 1 bytes @ 0x0
  2097                           
  2098  0070                     ??_EUSART_DefaultFramingErrorHandler:	
  2099                           ; 1 bytes @ 0x0
  2100                           
  2101  0070                     ?_EUSART_DefaultOverrunErrorHandler:	
  2102                           ; 1 bytes @ 0x0
  2103                           
  2104  0070                     ??_EUSART_DefaultOverrunErrorHandler:	
  2105                           ; 1 bytes @ 0x0
  2106                           
  2107  0070                     ?_EUSART_DefaultErrorHandler:	
  2108                           ; 1 bytes @ 0x0
  2109                           
  2110  0070                     ?_EUSART_RxDataHandler:	
  2111                           ; 1 bytes @ 0x0
  2112                           
  2113  0070                     ??_EUSART_RxDataHandler:	
  2114                           ; 1 bytes @ 0x0
  2115                           
  2116  0070                     ?_I2C_DO_IDLE:	
  2117                           ; 1 bytes @ 0x0
  2118                           
  2119  0070                     ??_I2C_DO_IDLE:	
  2120                           ; 1 bytes @ 0x0
  2121                           
  2122  0070                     ?_I2C_DO_SEND_ADR_READ:	
  2123                           ; 1 bytes @ 0x0
  2124                           
  2125  0070                     ??_I2C_DO_SEND_ADR_READ:	
  2126                           ; 1 bytes @ 0x0
  2127                           
  2128  0070                     ?_I2C_DO_SEND_ADR_WRITE:	
  2129                           ; 1 bytes @ 0x0
  2130                           
  2131  0070                     ?_I2C_DO_TX:	
  2132                           ; 1 bytes @ 0x0
  2133                           
  2134  0070                     ?_I2C_DO_RX:	
  2135                           ; 1 bytes @ 0x0
  2136                           
  2137  0070                     ?_I2C_DO_RCEN:	
  2138                           ; 1 bytes @ 0x0
  2139                           
  2140  0070                     ??_I2C_DO_RCEN:	
  2141                           ; 1 bytes @ 0x0
  2142                           
  2143  0070                     ?_I2C_DO_TX_EMPTY:	
  2144                           ; 1 bytes @ 0x0
  2145                           
  2146  0070                     ?_I2C_DO_SEND_RESTART_READ:	
  2147                           ; 1 bytes @ 0x0
  2148                           
  2149  0070                     ??_I2C_DO_SEND_RESTART_READ:	
  2150                           ; 1 bytes @ 0x0
  2151                           
  2152  0070                     ?_I2C_DO_SEND_RESTART_WRITE:	
  2153                           ; 1 bytes @ 0x0
  2154                           
  2155  0070                     ??_I2C_DO_SEND_RESTART_WRITE:	
  2156                           ; 1 bytes @ 0x0
  2157                           
  2158  0070                     ?_I2C_DO_SEND_RESTART:	
  2159                           ; 1 bytes @ 0x0
  2160                           
  2161  0070                     ??_I2C_DO_SEND_RESTART:	
  2162                           ; 1 bytes @ 0x0
  2163                           
  2164  0070                     ?_I2C_DO_SEND_STOP:	
  2165                           ; 1 bytes @ 0x0
  2166                           
  2167  0070                     ??_I2C_DO_SEND_STOP:	
  2168                           ; 1 bytes @ 0x0
  2169                           
  2170  0070                     ?_I2C_DO_RX_ACK:	
  2171                           ; 1 bytes @ 0x0
  2172                           
  2173  0070                     ??_I2C_DO_RX_ACK:	
  2174                           ; 1 bytes @ 0x0
  2175                           
  2176  0070                     ?_I2C_DO_RX_NACK_STOP:	
  2177                           ; 1 bytes @ 0x0
  2178                           
  2179  0070                     ??_I2C_DO_RX_NACK_STOP:	
  2180                           ; 1 bytes @ 0x0
  2181                           
  2182  0070                     ?_I2C_DO_RX_NACK_RESTART:	
  2183                           ; 1 bytes @ 0x0
  2184                           
  2185  0070                     ??_I2C_DO_RX_NACK_RESTART:	
  2186                           ; 1 bytes @ 0x0
  2187                           
  2188  0070                     ?_I2C_DO_RESET:	
  2189                           ; 1 bytes @ 0x0
  2190                           
  2191  0070                     ??_I2C_DO_RESET:	
  2192                           ; 1 bytes @ 0x0
  2193                           
  2194  0070                     ?_I2C_DO_ADDRESS_NACK:	
  2195                           ; 1 bytes @ 0x0
  2196                           
  2197  0070                     ?_I2C_MasterIsr:	
  2198                           ; 1 bytes @ 0x0
  2199                           
  2200  0070                     ?_I2C_MasterClearIrq:	
  2201                           ; 1 bytes @ 0x0
  2202                           
  2203  0070                     ??_I2C_MasterClearIrq:	
  2204                           ; 1 bytes @ 0x0
  2205                           
  2206  0070                     ?_I2C_SetCallback:	
  2207                           ; 1 bytes @ 0x0
  2208                           
  2209  0070                     ?_I2C_MasterFsm:	
  2210                           ; 1 bytes @ 0x0
  2211                           
  2212  0070                     ?_I2C_MasterIsNack:	
  2213                           ; 1 bytes @ 0x0
  2214                           
  2215  0070                     ??_I2C_MasterIsNack:	
  2216                           ; 1 bytes @ 0x0
  2217                           
  2218  0070                     ?_I2C_MasterSendTxData:	
  2219                           ; 1 bytes @ 0x0
  2220                           
  2221  0070                     ??_I2C_MasterSendTxData:	
  2222                           ; 1 bytes @ 0x0
  2223                           
  2224  0070                     ?_I2C_MasterGetRxData:	
  2225                           ; 1 bytes @ 0x0
  2226                           
  2227  0070                     ??_I2C_MasterGetRxData:	
  2228                           ; 1 bytes @ 0x0
  2229                           
  2230  0070                     ?_I2C_MasterSendAck:	
  2231                           ; 1 bytes @ 0x0
  2232                           
  2233  0070                     ??_I2C_MasterSendAck:	
  2234                           ; 1 bytes @ 0x0
  2235                           
  2236  0070                     ?_I2C_MasterStartRx:	
  2237                           ; 1 bytes @ 0x0
  2238                           
  2239  0070                     ??_I2C_MasterStartRx:	
  2240                           ; 1 bytes @ 0x0
  2241                           
  2242  0070                     ?_I2C_MasterSetIrq:	
  2243                           ; 1 bytes @ 0x0
  2244                           
  2245  0070                     ??_I2C_MasterSetIrq:	
  2246                           ; 1 bytes @ 0x0
  2247                           
  2248  0070                     ?_I2C_MasterEnableRestart:	
  2249                           ; 1 bytes @ 0x0
  2250                           
  2251  0070                     ??_I2C_MasterEnableRestart:	
  2252                           ; 1 bytes @ 0x0
  2253                           
  2254  0070                     ?_I2C_MasterStop:	
  2255                           ; 1 bytes @ 0x0
  2256                           
  2257  0070                     ??_I2C_MasterStop:	
  2258                           ; 1 bytes @ 0x0
  2259                           
  2260  0070                     ?_I2C_MasterSendNack:	
  2261                           ; 1 bytes @ 0x0
  2262                           
  2263  0070                     ??_I2C_MasterSendNack:	
  2264                           ; 1 bytes @ 0x0
  2265                           
  2266  0070                     ?_I2C_Master_Init:	
  2267                           ; 1 bytes @ 0x0
  2268                           
  2269  0070                     ?_LCD_Init:	
  2270                           ; 1 bytes @ 0x0
  2271                           
  2272  0070                     ?_IO_Expander_Write:	
  2273                           ; 1 bytes @ 0x0
  2274                           
  2275  0070                     ?_LCD_CMD:	
  2276                           ; 1 bytes @ 0x0
  2277                           
  2278  0070                     ?_PIN_MANAGER_Initialize:	
  2279                           ; 1 bytes @ 0x0
  2280                           
  2281  0070                     ?_SYSTEM_Initialize:	
  2282                           ; 1 bytes @ 0x0
  2283                           
  2284  0070                     ?_EUSART_Read:	
  2285                           ; 1 bytes @ 0x0
  2286                           
  2287  0070                     ?_EUSART_Write:	
  2288                           ; 1 bytes @ 0x0
  2289                           
  2290  0070                     ?_putch:	
  2291                           ; 1 bytes @ 0x0
  2292                           
  2293  0070                     ?_INTERRUPT_InterruptManager:	
  2294                           ; 1 bytes @ 0x0
  2295                           
  2296  0070                     ?_main:	
  2297                           ; 1 bytes @ 0x0
  2298                           
  2299  0070                     ?_I2C_Master_Wait:	
  2300                           ; 1 bytes @ 0x0
  2301                           
  2302  0070                     ?_I2C_Master_Start:	
  2303                           ; 1 bytes @ 0x0
  2304                           
  2305  0070                     ?_I2C_Master_Stop:	
  2306                           ; 1 bytes @ 0x0
  2307                           
  2308  0070                     ?_I2C_Master_Write:	
  2309                           ; 1 bytes @ 0x0
  2310                           
  2311  0070                     ?_LCD_Write_4Bit:	
  2312                           ; 1 bytes @ 0x0
  2313                           
  2314  0070                     ?_LCD_Write_Char:	
  2315                           ; 1 bytes @ 0x0
  2316                           
  2317  0070                     I2C_MasterSendTxData@data:	
  2318                           ; 1 bytes @ 0x0
  2319                           
  2320  0070                     I2C_SetBuffer@bufferSize:	
  2321                           ; 1 bytes @ 0x0
  2322                           
  2323  0070                     I2C_SetCallback@cb:	
  2324                           ; 2 bytes @ 0x0
  2325                           
  2326                           
  2327                           ; 2 bytes @ 0x0
  2328  0070                     	ds	1
  2329  0071                     ??_EUSART_Receive_ISR:
  2330  0071                     ??_EUSART_DefaultErrorHandler:	
  2331                           ; 1 bytes @ 0x1
  2332                           
  2333  0071                     ??_I2C_DO_SEND_ADR_WRITE:	
  2334                           ; 1 bytes @ 0x1
  2335                           
  2336                           
  2337                           ; 1 bytes @ 0x1
  2338  0071                     	ds	1
  2339  0072                     ??_I2C_SetBuffer:
  2340  0072                     I2C_SetCallback@ptr:	
  2341                           ; 1 bytes @ 0x2
  2342                           
  2343                           
  2344                           ; 1 bytes @ 0x2
  2345  0072                     	ds	1
  2346  0073                     ??_I2C_SetCallback:
  2347  0073                     I2C_SetBuffer@buffer:	
  2348                           ; 1 bytes @ 0x3
  2349                           
  2350                           
  2351                           ; 1 bytes @ 0x3
  2352  0073                     	ds	1
  2353  0074                     I2C_SetCallback@idx:
  2354                           
  2355                           ; 1 bytes @ 0x4
  2356  0074                     	ds	1
  2357  0075                     ?_I2C_SetDataCompleteCallback:
  2358  0075                     I2C_SetDataCompleteCallback@cb:	
  2359                           ; 1 bytes @ 0x5
  2360                           
  2361                           
  2362                           ; 2 bytes @ 0x5
  2363  0075                     	ds	2
  2364  0077                     I2C_SetDataCompleteCallback@ptr:
  2365                           
  2366                           ; 1 bytes @ 0x7
  2367  0077                     	ds	1
  2368  0078                     ??_I2C_SetDataCompleteCallback:
  2369                           
  2370                           ; 1 bytes @ 0x8
  2371  0078                     	ds	1
  2372  0079                     ?_rd1RegCompleteHandler:
  2373  0079                     ?_rd2RegCompleteHandler:	
  2374                           ; 1 bytes @ 0x9
  2375                           
  2376  0079                     ?_wr1RegCompleteHandler:	
  2377                           ; 1 bytes @ 0x9
  2378                           
  2379  0079                     ?_wr2RegCompleteHandler:	
  2380                           ; 1 bytes @ 0x9
  2381                           
  2382  0079                     ?_rdBlkRegCompleteHandler:	
  2383                           ; 1 bytes @ 0x9
  2384                           
  2385  0079                     ?_I2C_CallbackReturnStop:	
  2386                           ; 1 bytes @ 0x9
  2387                           
  2388  0079                     ?_I2C_CallbackReturnReset:	
  2389                           ; 1 bytes @ 0x9
  2390                           
  2391  0079                     rd1RegCompleteHandler@ptr:	
  2392                           ; 1 bytes @ 0x9
  2393                           
  2394  0079                     rd2RegCompleteHandler@ptr:	
  2395                           ; 1 bytes @ 0x9
  2396                           
  2397  0079                     wr1RegCompleteHandler@ptr:	
  2398                           ; 1 bytes @ 0x9
  2399                           
  2400  0079                     wr2RegCompleteHandler@ptr:	
  2401                           ; 1 bytes @ 0x9
  2402                           
  2403  0079                     rdBlkRegCompleteHandler@ptr:	
  2404                           ; 1 bytes @ 0x9
  2405                           
  2406  0079                     I2C_CallbackReturnStop@funPtr:	
  2407                           ; 1 bytes @ 0x9
  2408                           
  2409  0079                     I2C_CallbackReturnReset@funPtr:	
  2410                           ; 1 bytes @ 0x9
  2411                           
  2412                           
  2413                           ; 1 bytes @ 0x9
  2414  0079                     	ds	1
  2415  007A                     ??_rd1RegCompleteHandler:
  2416  007A                     ??_rd2RegCompleteHandler:	
  2417                           ; 1 bytes @ 0xA
  2418                           
  2419  007A                     ??_wr1RegCompleteHandler:	
  2420                           ; 1 bytes @ 0xA
  2421                           
  2422  007A                     ??_wr2RegCompleteHandler:	
  2423                           ; 1 bytes @ 0xA
  2424                           
  2425  007A                     ??_rdBlkRegCompleteHandler:	
  2426                           ; 1 bytes @ 0xA
  2427                           
  2428  007A                     ??_I2C_DO_TX:	
  2429                           ; 1 bytes @ 0xA
  2430                           
  2431  007A                     ??_I2C_DO_RX:	
  2432                           ; 1 bytes @ 0xA
  2433                           
  2434  007A                     ??_I2C_DO_TX_EMPTY:	
  2435                           ; 1 bytes @ 0xA
  2436                           
  2437  007A                     ??_I2C_DO_ADDRESS_NACK:	
  2438                           ; 1 bytes @ 0xA
  2439                           
  2440  007A                     ??_I2C_CallbackReturnStop:	
  2441                           ; 1 bytes @ 0xA
  2442                           
  2443  007A                     ??_I2C_CallbackReturnReset:	
  2444                           ; 1 bytes @ 0xA
  2445                           
  2446                           
  2447                           ; 1 bytes @ 0xA
  2448  007A                     	ds	3
  2449  007D                     ??_I2C_MasterIsr:
  2450  007D                     ??_INTERRUPT_InterruptManager:	
  2451                           ; 1 bytes @ 0xD
  2452                           
  2453                           
  2454                           	psect	cstackBANK0
  2455  0046                     __pcstackBANK0:	
  2456                           ; 1 bytes @ 0xD
  2457                           
  2458  0046                     ??_I2C_MasterFsm:
  2459                           
  2460                           ; 1 bytes @ 0x0
  2461  0046                     	ds	3
  2462  0049                     ??_I2C_Initialize:
  2463  0049                     ??_OSCILLATOR_Initialize:	
  2464                           ; 1 bytes @ 0x3
  2465                           
  2466  0049                     ??_WDT_Initialize:	
  2467                           ; 1 bytes @ 0x3
  2468                           
  2469  0049                     ??_ADC_Initialize:	
  2470                           ; 1 bytes @ 0x3
  2471                           
  2472  0049                     ?_EUSART_SetRxInterruptHandler:	
  2473                           ; 1 bytes @ 0x3
  2474                           
  2475  0049                     ?_EUSART_SetTxInterruptHandler:	
  2476                           ; 1 bytes @ 0x3
  2477                           
  2478  0049                     ?_EUSART_SetFramingErrorHandler:	
  2479                           ; 1 bytes @ 0x3
  2480                           
  2481  0049                     ?_EUSART_SetOverrunErrorHandler:	
  2482                           ; 1 bytes @ 0x3
  2483                           
  2484  0049                     ?_EUSART_SetErrorHandler:	
  2485                           ; 1 bytes @ 0x3
  2486                           
  2487  0049                     ??_I2C_Master_Init:	
  2488                           ; 1 bytes @ 0x3
  2489                           
  2490  0049                     ??_PIN_MANAGER_Initialize:	
  2491                           ; 1 bytes @ 0x3
  2492                           
  2493  0049                     ??_EUSART_Read:	
  2494                           ; 1 bytes @ 0x3
  2495                           
  2496  0049                     ??_EUSART_Write:	
  2497                           ; 1 bytes @ 0x3
  2498                           
  2499  0049                     ??_I2C_Master_Wait:	
  2500                           ; 1 bytes @ 0x3
  2501                           
  2502  0049                     ??_I2C_Master_Start:	
  2503                           ; 1 bytes @ 0x3
  2504                           
  2505  0049                     ??_I2C_Master_Stop:	
  2506                           ; 1 bytes @ 0x3
  2507                           
  2508  0049                     ??_I2C_Master_Write:	
  2509                           ; 1 bytes @ 0x3
  2510                           
  2511  0049                     ?_ADC_GetConversion:	
  2512                           ; 1 bytes @ 0x3
  2513                           
  2514  0049                     I2C_Master_Write@data:	
  2515                           ; 2 bytes @ 0x3
  2516                           
  2517  0049                     EUSART_SetFramingErrorHandler@interruptHandler:	
  2518                           ; 1 bytes @ 0x3
  2519                           
  2520  0049                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  2521                           ; 2 bytes @ 0x3
  2522                           
  2523  0049                     EUSART_SetErrorHandler@interruptHandler:	
  2524                           ; 2 bytes @ 0x3
  2525                           
  2526  0049                     EUSART_SetTxInterruptHandler@interruptHandler:	
  2527                           ; 2 bytes @ 0x3
  2528                           
  2529  0049                     EUSART_SetRxInterruptHandler@interruptHandler:	
  2530                           ; 2 bytes @ 0x3
  2531                           
  2532                           
  2533                           ; 2 bytes @ 0x3
  2534  0049                     	ds	1
  2535  004A                     ??_IO_Expander_Write:
  2536  004A                     EUSART_Read@readValue:	
  2537                           ; 1 bytes @ 0x4
  2538                           
  2539  004A                     EUSART_Write@txData:	
  2540                           ; 1 bytes @ 0x4
  2541                           
  2542  004A                     IO_Expander_Write@Data:	
  2543                           ; 1 bytes @ 0x4
  2544                           
  2545                           
  2546                           ; 1 bytes @ 0x4
  2547  004A                     	ds	1
  2548  004B                     ??_EUSART_Initialize:
  2549  004B                     ??_EUSART_SetRxInterruptHandler:	
  2550                           ; 1 bytes @ 0x5
  2551                           
  2552  004B                     ??_EUSART_SetTxInterruptHandler:	
  2553                           ; 1 bytes @ 0x5
  2554                           
  2555  004B                     ??_EUSART_SetFramingErrorHandler:	
  2556                           ; 1 bytes @ 0x5
  2557                           
  2558  004B                     ??_EUSART_SetOverrunErrorHandler:	
  2559                           ; 1 bytes @ 0x5
  2560                           
  2561  004B                     ??_EUSART_SetErrorHandler:	
  2562                           ; 1 bytes @ 0x5
  2563                           
  2564  004B                     ??_ADC_GetConversion:	
  2565                           ; 1 bytes @ 0x5
  2566                           
  2567  004B                     ??_putch:	
  2568                           ; 1 bytes @ 0x5
  2569                           
  2570  004B                     ??_LCD_Write_4Bit:	
  2571                           ; 1 bytes @ 0x5
  2572                           
  2573  004B                     putch@txData:	
  2574                           ; 1 bytes @ 0x5
  2575                           
  2576                           
  2577                           ; 1 bytes @ 0x5
  2578  004B                     	ds	1
  2579  004C                     ??_SYSTEM_Initialize:
  2580  004C                     ?_fputc:	
  2581                           ; 1 bytes @ 0x6
  2582                           
  2583  004C                     ADC_GetConversion@channel:	
  2584                           ; 2 bytes @ 0x6
  2585                           
  2586  004C                     LCD_Write_4Bit@Nibble:	
  2587                           ; 1 bytes @ 0x6
  2588                           
  2589  004C                     fputc@c:	
  2590                           ; 1 bytes @ 0x6
  2591                           
  2592                           
  2593                           ; 2 bytes @ 0x6
  2594  004C                     	ds	1
  2595  004D                     ??_LCD_CMD:
  2596  004D                     ??_LCD_Write_Char:	
  2597                           ; 1 bytes @ 0x7
  2598                           
  2599                           
  2600                           ; 1 bytes @ 0x7
  2601  004D                     	ds	1
  2602  004E                     LCD_CMD@CMD:
  2603  004E                     LCD_Write_Char@Data:	
  2604                           ; 1 bytes @ 0x8
  2605                           
  2606  004E                     fputc@fp:	
  2607                           ; 1 bytes @ 0x8
  2608                           
  2609                           
  2610                           ; 1 bytes @ 0x8
  2611  004E                     	ds	1
  2612  004F                     ??_LCD_Init:
  2613  004F                     ?_LCD_Set_Cursor:	
  2614                           ; 1 bytes @ 0x9
  2615                           
  2616  004F                     ?_LCD_Write_String:	
  2617                           ; 1 bytes @ 0x9
  2618                           
  2619  004F                     ??_fputc:	
  2620                           ; 1 bytes @ 0x9
  2621                           
  2622  004F                     LCD_Set_Cursor@COL:	
  2623                           ; 1 bytes @ 0x9
  2624                           
  2625  004F                     LCD_Write_String@Str:	
  2626                           ; 1 bytes @ 0x9
  2627                           
  2628                           
  2629                           ; 2 bytes @ 0x9
  2630  004F                     	ds	1
  2631  0050                     ??_LCD_Set_Cursor:
  2632                           
  2633                           ; 1 bytes @ 0xA
  2634  0050                     	ds	1
  2635  0051                     ??_LCD_Write_String:
  2636  0051                     LCD_Init@I2C_Add:	
  2637                           ; 1 bytes @ 0xB
  2638                           
  2639                           
  2640                           ; 1 bytes @ 0xB
  2641  0051                     	ds	1
  2642  0052                     LCD_Set_Cursor@ROW:
  2643  0052                     LCD_Write_String@i:	
  2644                           ; 1 bytes @ 0xC
  2645                           
  2646                           
  2647                           ; 2 bytes @ 0xC
  2648  0052                     	ds	2
  2649  0054                     ?_vfpfcnvrt:
  2650  0054                     vfpfcnvrt@fmt:	
  2651                           ; 2 bytes @ 0xE
  2652                           
  2653                           
  2654                           ; 1 bytes @ 0xE
  2655  0054                     	ds	1
  2656  0055                     vfpfcnvrt@ap:
  2657                           
  2658                           ; 1 bytes @ 0xF
  2659  0055                     	ds	1
  2660  0056                     ??_vfpfcnvrt:
  2661                           
  2662                           ; 1 bytes @ 0x10
  2663  0056                     	ds	5
  2664  005B                     vfpfcnvrt@fp:
  2665                           
  2666                           ; 1 bytes @ 0x15
  2667  005B                     	ds	1
  2668  005C                     ?_vfprintf:
  2669  005C                     vfprintf@fmt:	
  2670                           ; 2 bytes @ 0x16
  2671                           
  2672                           
  2673                           ; 2 bytes @ 0x16
  2674  005C                     	ds	2
  2675  005E                     vfprintf@ap:
  2676                           
  2677                           ; 1 bytes @ 0x18
  2678  005E                     	ds	1
  2679  005F                     ??_vfprintf:
  2680                           
  2681                           ; 1 bytes @ 0x19
  2682  005F                     	ds	2
  2683  0061                     vfprintf@fp:
  2684                           
  2685                           ; 1 bytes @ 0x1B
  2686  0061                     	ds	1
  2687  0062                     vfprintf@cfmt:
  2688                           
  2689                           ; 2 bytes @ 0x1C
  2690  0062                     	ds	2
  2691  0064                     ?_printf:
  2692  0064                     printf@fmt:	
  2693                           ; 2 bytes @ 0x1E
  2694                           
  2695                           
  2696                           ; 2 bytes @ 0x1E
  2697  0064                     	ds	2
  2698  0066                     ??_printf:
  2699                           
  2700                           ; 1 bytes @ 0x20
  2701  0066                     	ds	1
  2702  0067                     printf@ap:
  2703                           
  2704                           ; 1 bytes @ 0x21
  2705  0067                     	ds	1
  2706  0068                     ??_main:
  2707                           
  2708                           ; 1 bytes @ 0x22
  2709  0068                     	ds	2
  2710                           
  2711                           	psect	maintext
  2712  0062                     __pmaintext:	
  2713 ;;
  2714 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  2715 ;;
  2716 ;; *************** function _main *****************
  2717 ;; Defined at:
  2718 ;;		line 51 in file "main.c"
  2719 ;; Parameters:    Size  Location     Type
  2720 ;;		None
  2721 ;; Auto vars:     Size  Location     Type
  2722 ;;  lectureAN1      2    0[BANK1 ] int 
  2723 ;;  reception       1    2[BANK1 ] unsigned char 
  2724 ;; Return value:  Size  Location     Type
  2725 ;;                  1    wreg      void 
  2726 ;; Registers used:
  2727 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2728 ;; Tracked objects:
  2729 ;;		On entry : B1F/0
  2730 ;;		On exit  : 0/0
  2731 ;;		Unchanged: 0/0
  2732 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2733 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2734 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  2735 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2736 ;;      Totals:         0       2       3       0       0       0       0       0       0       0       0       0       
      +0       0
  2737 ;;Total ram usage:        5 bytes
  2738 ;; Hardware stack levels required when called: 13
  2739 ;; This function calls:
  2740 ;;		_ADC_GetConversion
  2741 ;;		_EUSART_Read
  2742 ;;		_I2C_Master_Init
  2743 ;;		_LCD_Init
  2744 ;;		_LCD_Set_Cursor
  2745 ;;		_LCD_Write_String
  2746 ;;		_SYSTEM_Initialize
  2747 ;;		_printf
  2748 ;; This function is called by:
  2749 ;;		Startup code after reset
  2750 ;; This function uses a non-reentrant model
  2751 ;;
  2752                           
  2753                           
  2754                           ;psect for function _main
  2755  0062                     _main:
  2756  0062                     l4271:	
  2757                           ;incstack = 0
  2758                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2759                           
  2760                           
  2761                           ;main.c: 53:     SYSTEM_Initialize();
  2762  0062  3186  2661  3180   	fcall	_SYSTEM_Initialize
  2763  0065                     l4273:
  2764                           
  2765                           ;main.c: 59:     (INTCONbits.GIE = 1);
  2766  0065  178B               	bsf	11,7	;volatile
  2767  0066                     l4275:
  2768                           
  2769                           ;main.c: 62:     (INTCONbits.PEIE = 1);
  2770  0066  170B               	bsf	11,6	;volatile
  2771                           
  2772                           ;main.c: 71:     int lectureAN1;;main.c: 72:     unsigned char reception;;main.c: 75:   
      +                            I2C_Master_Init();
  2773  0067  3187  274C  3180   	fcall	_I2C_Master_Init
  2774                           
  2775                           ;main.c: 76:     LCD_Init(0x4E);
  2776  006A  304E               	movlw	78
  2777  006B  3181  2165  3180   	fcall	_LCD_Init
  2778  006E                     l4277:
  2779                           
  2780                           ;main.c: 78:     LCD_Set_Cursor(1, 1);
  2781  006E  0020               	movlb	0	; select bank0
  2782  006F  01CF               	clrf	LCD_Set_Cursor@COL
  2783  0070  0ACF               	incf	LCD_Set_Cursor@COL,f
  2784  0071  3001               	movlw	1
  2785  0072  3183  23F8  3180   	fcall	_LCD_Set_Cursor
  2786  0075                     l4279:
  2787                           
  2788                           ;main.c: 79:     LCD_Write_String("Bonjour Esteban");
  2789  0075  30DA               	movlw	low (STR_1| (0+32768))
  2790  0076  0020               	movlb	0	; select bank0
  2791  0077  00CF               	movwf	LCD_Write_String@Str
  2792  0078  3086               	movlw	high (STR_1| (0+32768))
  2793  0079  00D0               	movwf	LCD_Write_String@Str+1
  2794  007A  3185  25B9  3180   	fcall	_LCD_Write_String
  2795  007D                     l4281:
  2796                           
  2797                           ;main.c: 80:     LCD_Set_Cursor(2, 1);
  2798  007D  0020               	movlb	0	; select bank0
  2799  007E  01CF               	clrf	LCD_Set_Cursor@COL
  2800  007F  0ACF               	incf	LCD_Set_Cursor@COL,f
  2801  0080  3002               	movlw	2
  2802  0081  3183  23F8  3180   	fcall	_LCD_Set_Cursor
  2803  0084                     l4283:
  2804                           
  2805                           ;main.c: 81:     LCD_Write_String("Coucou!");
  2806  0084  3073               	movlw	low (STR_2| (0+32768))
  2807  0085  0020               	movlb	0	; select bank0
  2808  0086  00CF               	movwf	LCD_Write_String@Str
  2809  0087  3087               	movlw	high (STR_2| (0+32768))
  2810  0088  00D0               	movwf	LCD_Write_String@Str+1
  2811  0089  3185  25B9  3180   	fcall	_LCD_Write_String
  2812  008C                     l4285:
  2813                           
  2814                           ;main.c: 82:     _delay((unsigned long)((200)*(16000000/4000.0)));
  2815  008C  3005               	movlw	5
  2816  008D  0020               	movlb	0	; select bank0
  2817  008E  00E9               	movwf	??_main+1
  2818  008F  300F               	movlw	15
  2819  0090  00E8               	movwf	??_main
  2820  0091  30F1               	movlw	241
  2821  0092                     u1647:
  2822  0092  0B89               	decfsz	9,f
  2823  0093  2892               	goto	u1647
  2824  0094  0BE8               	decfsz	??_main,f
  2825  0095  2892               	goto	u1647
  2826  0096  0BE9               	decfsz	??_main+1,f
  2827  0097  2892               	goto	u1647
  2828  0098                     l4287:
  2829                           
  2830                           ;main.c: 87:         _delay((unsigned long)((5000)*(16000000/4000.0)));
  2831  0098  3066               	movlw	102
  2832  0099  0020               	movlb	0	; select bank0
  2833  009A  00E9               	movwf	??_main+1
  2834  009B  3076               	movlw	118
  2835  009C  00E8               	movwf	??_main
  2836  009D  30C1               	movlw	193
  2837  009E                     u1657:
  2838  009E  0B89               	decfsz	9,f
  2839  009F  289E               	goto	u1657
  2840  00A0  0BE8               	decfsz	??_main,f
  2841  00A1  289E               	goto	u1657
  2842  00A2  0BE9               	decfsz	??_main+1,f
  2843  00A3  289E               	goto	u1657
  2844                           
  2845                           ;main.c: 89:         I2C_Master_Init();
  2846  00A4  3187  274C  3180   	fcall	_I2C_Master_Init
  2847                           
  2848                           ;main.c: 90:         LCD_Init(0x4E);
  2849  00A7  304E               	movlw	78
  2850  00A8  3181  2165  3180   	fcall	_LCD_Init
  2851  00AB                     l4289:
  2852                           
  2853                           ;main.c: 92:         LCD_Set_Cursor(1, 1);
  2854  00AB  0020               	movlb	0	; select bank0
  2855  00AC  01CF               	clrf	LCD_Set_Cursor@COL
  2856  00AD  0ACF               	incf	LCD_Set_Cursor@COL,f
  2857  00AE  3001               	movlw	1
  2858  00AF  3183  23F8  3180   	fcall	_LCD_Set_Cursor
  2859  00B2                     l4291:
  2860                           
  2861                           ;main.c: 93:         LCD_Write_String("Salut Esteban");
  2862  00B2  3019               	movlw	low (STR_3| (0+32768))
  2863  00B3  0020               	movlb	0	; select bank0
  2864  00B4  00CF               	movwf	LCD_Write_String@Str
  2865  00B5  3087               	movlw	high (STR_3| (0+32768))
  2866  00B6  00D0               	movwf	LCD_Write_String@Str+1
  2867  00B7  3185  25B9  3180   	fcall	_LCD_Write_String
  2868  00BA                     l4293:
  2869                           
  2870                           ;main.c: 94:         LCD_Set_Cursor(2, 1);
  2871  00BA  0020               	movlb	0	; select bank0
  2872  00BB  01CF               	clrf	LCD_Set_Cursor@COL
  2873  00BC  0ACF               	incf	LCD_Set_Cursor@COL,f
  2874  00BD  3002               	movlw	2
  2875  00BE  3183  23F8  3180   	fcall	_LCD_Set_Cursor
  2876  00C1                     l4295:
  2877                           
  2878                           ;main.c: 95:         LCD_Write_String("Coucou mon fils!");
  2879  00C1  30E7               	movlw	low (STR_4| (0+32768))
  2880  00C2  0020               	movlb	0	; select bank0
  2881  00C3  00CF               	movwf	LCD_Write_String@Str
  2882  00C4  3083               	movlw	high (STR_4| (0+32768))
  2883  00C5  00D0               	movwf	LCD_Write_String@Str+1
  2884  00C6  3185  25B9  3180   	fcall	_LCD_Write_String
  2885  00C9                     l4297:
  2886                           
  2887                           ;main.c: 96:         _delay((unsigned long)((200)*(16000000/4000.0)));
  2888  00C9  3005               	movlw	5
  2889  00CA  0020               	movlb	0	; select bank0
  2890  00CB  00E9               	movwf	??_main+1
  2891  00CC  300F               	movlw	15
  2892  00CD  00E8               	movwf	??_main
  2893  00CE  30F1               	movlw	241
  2894  00CF                     u1667:
  2895  00CF  0B89               	decfsz	9,f
  2896  00D0  28CF               	goto	u1667
  2897  00D1  0BE8               	decfsz	??_main,f
  2898  00D2  28CF               	goto	u1667
  2899  00D3  0BE9               	decfsz	??_main+1,f
  2900  00D4  28CF               	goto	u1667
  2901  00D5                     l4299:
  2902                           
  2903                           ;main.c: 98:         if (PORTDbits.RD0 == 0) {
  2904  00D5  0020               	movlb	0	; select bank0
  2905  00D6  180F               	btfsc	15,0	;volatile
  2906  00D7  28D9               	goto	u1581
  2907  00D8  28DA               	goto	u1580
  2908  00D9                     u1581:
  2909  00D9  28EB               	goto	l4305
  2910  00DA                     u1580:
  2911  00DA                     l775:	
  2912                           ;main.c: 100:             do { LATAbits.LATA0 = 1; } while(0);
  2913                           
  2914  00DA  0022               	movlb	2	; select bank2
  2915  00DB  140C               	bsf	12,0	;volatile
  2916  00DC                     l4301:
  2917                           
  2918                           ;main.c: 101:             _delay((unsigned long)((1000)*(16000000/4000.0)));
  2919  00DC  3015               	movlw	21
  2920  00DD  0020               	movlb	0	; select bank0
  2921  00DE  00E9               	movwf	??_main+1
  2922  00DF  304B               	movlw	75
  2923  00E0  00E8               	movwf	??_main
  2924  00E1  30BE               	movlw	190
  2925  00E2                     u1677:
  2926  00E2  0B89               	decfsz	9,f
  2927  00E3  28E2               	goto	u1677
  2928  00E4  0BE8               	decfsz	??_main,f
  2929  00E5  28E2               	goto	u1677
  2930  00E6  0BE9               	decfsz	??_main+1,f
  2931  00E7  28E2               	goto	u1677
  2932  00E8  0000               	nop
  2933  00E9                     l4303:
  2934  00E9  0022               	movlb	2	; select bank2
  2935  00EA  100C               	bcf	12,0	;volatile
  2936  00EB                     l4305:
  2937                           
  2938                           ;main.c: 108:         lectureAN1 = ADC_GetConversion(VIN1);
  2939  00EB  300C               	movlw	12
  2940  00EC  3185  2598  3180   	fcall	_ADC_GetConversion
  2941  00EF  0020               	movlb	0	; select bank0
  2942  00F0  084A               	movf	?_ADC_GetConversion+1,w
  2943  00F1  0021               	movlb	1	; select bank1
  2944  00F2  00EE               	movwf	(main@lectureAN1+1)^(0+128)
  2945  00F3  0020               	movlb	0	; select bank0
  2946  00F4  0849               	movf	?_ADC_GetConversion,w
  2947  00F5  0021               	movlb	1	; select bank1
  2948  00F6  00ED               	movwf	main@lectureAN1^(0+128)
  2949  00F7                     l4307:
  2950                           
  2951                           ;main.c: 109:         if (lectureAN1 < 500) {
  2952  00F7  086E               	movf	(main@lectureAN1+1)^(0+128),w
  2953  00F8  3A80               	xorlw	128
  2954  00F9  0020               	movlb	0	; select bank0
  2955  00FA  00E8               	movwf	??_main
  2956  00FB  3081               	movlw	129
  2957  00FC  0268               	subwf	??_main,w
  2958  00FD  1D03               	skipz
  2959  00FE  2902               	goto	u1595
  2960  00FF  30F4               	movlw	244
  2961  0100  0021               	movlb	1	; select bank1
  2962  0101  026D               	subwf	main@lectureAN1^(0+128),w
  2963  0102                     u1595:
  2964  0102  1803               	skipnc
  2965  0103  2905               	goto	u1591
  2966  0104  2906               	goto	u1590
  2967  0105                     u1591:
  2968  0105  2909               	goto	l783
  2969  0106                     u1590:
  2970  0106                     l780:	
  2971                           ;main.c: 112:             do { LATAbits.LATA0 = 1; } while(0);
  2972                           
  2973  0106  0022               	movlb	2	; select bank2
  2974  0107  140C               	bsf	12,0	;volatile
  2975  0108  290B               	goto	l782
  2976  0109                     l783:	
  2977                           ;main.c: 116:             do { LATAbits.LATA0 = 0; } while(0);
  2978                           
  2979  0109  0022               	movlb	2	; select bank2
  2980  010A  100C               	bcf	12,0	;volatile
  2981  010B                     l782:	
  2982                           ;main.c: 118:         }
  2983                           
  2984                           
  2985                           ;main.c: 122:         if (PORTDbits.RD2 == 0) {
  2986  010B  0020               	movlb	0	; select bank0
  2987  010C  190F               	btfsc	15,2	;volatile
  2988  010D  290F               	goto	u1601
  2989  010E  2910               	goto	u1600
  2990  010F                     u1601:
  2991  010F  292E               	goto	l4315
  2992  0110                     u1600:
  2993  0110                     l786:	
  2994                           ;main.c: 124:             do { LATAbits.LATA1 = 1; } while(0);
  2995                           
  2996  0110  0022               	movlb	2	; select bank2
  2997  0111  148C               	bsf	12,1	;volatile
  2998  0112                     l4309:
  2999                           
  3000                           ;main.c: 126:             printf("Hello!\r\n");
  3001  0112  3061               	movlw	low (STR_5| (0+32768))
  3002  0113  0020               	movlb	0	; select bank0
  3003  0114  00E4               	movwf	printf@fmt
  3004  0115  3087               	movlw	high (STR_5| (0+32768))
  3005  0116  00E5               	movwf	printf@fmt+1
  3006  0117  3186  2674  3180   	fcall	_printf
  3007  011A                     l4311:
  3008                           
  3009                           ;main.c: 127:             _delay((unsigned long)((1000)*(16000000/4000.0)));
  3010  011A  3015               	movlw	21
  3011  011B  0020               	movlb	0	; select bank0
  3012  011C  00E9               	movwf	??_main+1
  3013  011D  304B               	movlw	75
  3014  011E  00E8               	movwf	??_main
  3015  011F  30BE               	movlw	190
  3016  0120                     u1687:
  3017  0120  0B89               	decfsz	9,f
  3018  0121  2920               	goto	u1687
  3019  0122  0BE8               	decfsz	??_main,f
  3020  0123  2920               	goto	u1687
  3021  0124  0BE9               	decfsz	??_main+1,f
  3022  0125  2920               	goto	u1687
  3023  0126  0000               	nop
  3024  0127                     l4313:
  3025  0127  0022               	movlb	2	; select bank2
  3026  0128  108C               	bcf	12,1	;volatile
  3027  0129                     l790:	
  3028                           ;main.c: 131:             }
  3029                           
  3030                           
  3031                           ;main.c: 130:             while (PORTDbits.RD2 == 0) {
  3032  0129  0020               	movlb	0	; select bank0
  3033  012A  1D0F               	btfss	15,2	;volatile
  3034  012B  292D               	goto	u1611
  3035  012C  292E               	goto	u1610
  3036  012D                     u1611:
  3037  012D  2929               	goto	l790
  3038  012E                     u1610:
  3039  012E                     l4315:
  3040                           
  3041                           ;main.c: 137:         if (eusartRxCount != 0) {
  3042  012E  0840               	movf	_eusartRxCount,w	;volatile
  3043  012F  1903               	btfsc	3,2
  3044  0130  2932               	goto	u1621
  3045  0131  2933               	goto	u1620
  3046  0132                     u1621:
  3047  0132  2898               	goto	l4287
  3048  0133                     u1620:
  3049  0133                     l4317:
  3050                           
  3051                           ;main.c: 138:             reception = EUSART_Read();
  3052  0133  3184  24DB  3180   	fcall	_EUSART_Read
  3053  0136  0020               	movlb	0	; select bank0
  3054  0137  00E8               	movwf	??_main
  3055  0138  0868               	movf	??_main,w
  3056  0139  0021               	movlb	1	; select bank1
  3057  013A  00EF               	movwf	main@reception^(0+128)
  3058                           
  3059                           ;main.c: 140:             switch (reception)
  3060  013B  2952               	goto	l4325
  3061  013C                     l796:	
  3062                           ;main.c: 143:                 {;main.c: 145:                     do { LATAbits.LATA1 = 1
      +                          ; } while(0);
  3063                           
  3064  013C  0022               	movlb	2	; select bank2
  3065  013D  148C               	bsf	12,1	;volatile
  3066  013E                     l4319:
  3067                           
  3068                           ;main.c: 146:                     printf(" -> LED ON!!\r\n");
  3069  013E  300A               	movlw	low (STR_6| (0+32768))
  3070  013F  0020               	movlb	0	; select bank0
  3071  0140  00E4               	movwf	printf@fmt
  3072  0141  3087               	movlw	high (STR_6| (0+32768))
  3073  0142  00E5               	movwf	printf@fmt+1
  3074  0143  3186  2674  3180   	fcall	_printf
  3075                           
  3076                           ;main.c: 147:                     break;
  3077  0146  2898               	goto	l4287
  3078  0147                     l800:	
  3079                           ;main.c: 151:                 {;main.c: 153:                     do { LATAbits.LATA1 = 0
      +                          ; } while(0);
  3080                           
  3081  0147  0022               	movlb	2	; select bank2
  3082  0148  108C               	bcf	12,1	;volatile
  3083  0149                     l4321:
  3084                           
  3085                           ;main.c: 154:                     printf(" -> LED OFF!!\r\n");
  3086  0149  30CA               	movlw	low (STR_7| (0+32768))
  3087  014A  0020               	movlb	0	; select bank0
  3088  014B  00E4               	movwf	printf@fmt
  3089  014C  3086               	movlw	high (STR_7| (0+32768))
  3090  014D  00E5               	movwf	printf@fmt+1
  3091  014E  3186  2674  3180   	fcall	_printf
  3092                           
  3093                           ;main.c: 155:                     break;
  3094  0151  2898               	goto	l4287
  3095  0152                     l4325:
  3096  0152  086F               	movf	main@reception^(0+128),w
  3097  0153  0020               	movlb	0	; select bank0
  3098  0154  00E8               	movwf	??_main
  3099  0155  01E9               	clrf	??_main+1
  3100                           
  3101                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3102                           ; Switch size 1, requested type "simple"
  3103                           ; Number of cases is 1, Range of values is 0 to 0
  3104                           ; switch strategies available:
  3105                           ; Name         Instructions Cycles
  3106                           ; simple_byte            4     3 (average)
  3107                           ; direct_byte            8     6 (fixed)
  3108                           ; jumptable            260     6 (fixed)
  3109                           ;	Chosen strategy is simple_byte
  3110  0156  0869               	movf	??_main+1,w
  3111  0157  3A00               	xorlw	0	; case 0
  3112  0158  1903               	skipnz
  3113  0159  295B               	goto	l4537
  3114  015A  2898               	goto	l4287
  3115  015B                     l4537:
  3116                           
  3117                           ; Switch size 1, requested type "simple"
  3118                           ; Number of cases is 2, Range of values is 48 to 49
  3119                           ; switch strategies available:
  3120                           ; Name         Instructions Cycles
  3121                           ; simple_byte            7     4 (average)
  3122                           ; direct_byte           13     9 (fixed)
  3123                           ; jumptable            263     9 (fixed)
  3124                           ;	Chosen strategy is simple_byte
  3125  015B  0868               	movf	??_main,w
  3126  015C  3A30               	xorlw	48	; case 48
  3127  015D  1903               	skipnz
  3128  015E  2947               	goto	l800
  3129  015F  3A01               	xorlw	1	; case 49
  3130  0160  1903               	skipnz
  3131  0161  293C               	goto	l796
  3132  0162  2898               	goto	l4287
  3133  0163  3180  2847         	ljmp	start
  3134  0165                     __end_of_main:
  3135                           
  3136                           	psect	text1
  3137  0674                     __ptext1:	
  3138 ;; *************** function _printf *****************
  3139 ;; Defined at:
  3140 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\printf.c"
  3141 ;; Parameters:    Size  Location     Type
  3142 ;;  fmt             2   30[BANK0 ] PTR const unsigned char 
  3143 ;;		 -> STR_7(16), STR_6(15), STR_5(9), 
  3144 ;; Auto vars:     Size  Location     Type
  3145 ;;  ret             2    0        int 
  3146 ;;  ap              1   33[BANK0 ] PTR void [1]
  3147 ;;		 -> ?_printf(2), 
  3148 ;; Return value:  Size  Location     Type
  3149 ;;                  2   30[BANK0 ] int 
  3150 ;; Registers used:
  3151 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3152 ;; Tracked objects:
  3153 ;;		On entry : 0/0
  3154 ;;		On exit  : 0/0
  3155 ;;		Unchanged: 0/0
  3156 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3157 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3158 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3159 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3160 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3161 ;;Total ram usage:        4 bytes
  3162 ;; Hardware stack levels used: 1
  3163 ;; Hardware stack levels required when called: 12
  3164 ;; This function calls:
  3165 ;;		_vfprintf
  3166 ;; This function is called by:
  3167 ;;		_main
  3168 ;; This function uses a non-reentrant model
  3169 ;;
  3170                           
  3171                           
  3172                           ;psect for function _printf
  3173  0674                     _printf:
  3174  0674                     l4261:	
  3175                           ;incstack = 0
  3176                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3177                           
  3178  0674  3066               	movlw	(low ((?_printf| 0+2)))& (0+255)
  3179  0675  0020               	movlb	0	; select bank0
  3180  0676  00E6               	movwf	??_printf
  3181  0677  0866               	movf	??_printf,w
  3182  0678  00E7               	movwf	printf@ap
  3183  0679                     l4263:
  3184  0679  0865               	movf	printf@fmt+1,w
  3185  067A  00DD               	movwf	vfprintf@fmt+1
  3186  067B  0864               	movf	printf@fmt,w
  3187  067C  00DC               	movwf	vfprintf@fmt
  3188  067D  3067               	movlw	(low (printf@ap| 0))& (0+255)
  3189  067E  00E6               	movwf	??_printf
  3190  067F  0866               	movf	??_printf,w
  3191  0680  00DE               	movwf	vfprintf@ap
  3192  0681  3000               	movlw	0
  3193  0682  3185  2506  3186   	fcall	_vfprintf
  3194  0685                     l1540:
  3195  0685  0008               	return
  3196  0686                     __end_of_printf:
  3197                           
  3198                           	psect	text2
  3199  0506                     __ptext2:	
  3200 ;; *************** function _vfprintf *****************
  3201 ;; Defined at:
  3202 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  3203 ;; Parameters:    Size  Location     Type
  3204 ;;  fp              1    wreg     PTR struct _IO_FILE
  3205 ;;		 -> NULL(0), 
  3206 ;;  fmt             2   22[BANK0 ] PTR const unsigned char 
  3207 ;;		 -> STR_7(16), STR_6(15), STR_5(9), 
  3208 ;;  ap              1   24[BANK0 ] PTR PTR void 
  3209 ;;		 -> printf@ap(1), 
  3210 ;; Auto vars:     Size  Location     Type
  3211 ;;  fp              1   27[BANK0 ] PTR struct _IO_FILE
  3212 ;;		 -> NULL(0), 
  3213 ;;  cfmt            2   28[BANK0 ] PTR unsigned char 
  3214 ;;		 -> STR_7(16), STR_6(15), STR_5(9), 
  3215 ;; Return value:  Size  Location     Type
  3216 ;;                  2   22[BANK0 ] int 
  3217 ;; Registers used:
  3218 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3219 ;; Tracked objects:
  3220 ;;		On entry : 0/0
  3221 ;;		On exit  : 0/0
  3222 ;;		Unchanged: 0/0
  3223 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3224 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3225 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3226 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3227 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3228 ;;Total ram usage:        8 bytes
  3229 ;; Hardware stack levels used: 1
  3230 ;; Hardware stack levels required when called: 11
  3231 ;; This function calls:
  3232 ;;		_vfpfcnvrt
  3233 ;; This function is called by:
  3234 ;;		_printf
  3235 ;; This function uses a non-reentrant model
  3236 ;;
  3237                           
  3238                           
  3239                           ;psect for function _vfprintf
  3240  0506                     _vfprintf:
  3241                           
  3242                           ;incstack = 0
  3243                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3244                           ;vfprintf@fp stored from wreg
  3245  0506  0020               	movlb	0	; select bank0
  3246  0507  00E1               	movwf	vfprintf@fp
  3247  0508                     l4151:
  3248                           
  3249                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  3250  0508  085D               	movf	vfprintf@fmt+1,w
  3251  0509  00E3               	movwf	vfprintf@cfmt+1
  3252  050A  085C               	movf	vfprintf@fmt,w
  3253  050B  00E2               	movwf	vfprintf@cfmt
  3254  050C                     l4153:
  3255                           
  3256                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  3257  050C  01A8               	clrf	_nout
  3258  050D  01A9               	clrf	_nout+1
  3259                           
  3260                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  3261  050E  2D20               	goto	l4157
  3262  050F                     l4155:
  3263                           
  3264                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  3265  050F  3062               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  3266  0510  00DF               	movwf	??_vfprintf
  3267  0511  085F               	movf	??_vfprintf,w
  3268  0512  00D4               	movwf	vfpfcnvrt@fmt
  3269  0513  085E               	movf	vfprintf@ap,w
  3270  0514  00E0               	movwf	??_vfprintf+1
  3271  0515  0860               	movf	??_vfprintf+1,w
  3272  0516  00D5               	movwf	vfpfcnvrt@ap
  3273  0517  0861               	movf	vfprintf@fp,w
  3274  0518  3181  21F0  3185   	fcall	_vfpfcnvrt
  3275  051B  0020               	movlb	0	; select bank0
  3276  051C  0854               	movf	?_vfpfcnvrt,w
  3277  051D  07A8               	addwf	_nout,f
  3278  051E  0855               	movf	?_vfpfcnvrt+1,w
  3279  051F  3DA9               	addwfc	_nout+1,f
  3280  0520                     l4157:
  3281                           
  3282                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  3283  0520  0862               	movf	vfprintf@cfmt,w
  3284  0521  0084               	movwf	4
  3285  0522  0863               	movf	vfprintf@cfmt+1,w
  3286  0523  0085               	movwf	5
  3287  0524  0012               	moviw fsr0++
  3288  0525  1D03               	btfss	3,2
  3289  0526  2D28               	goto	u1531
  3290  0527  2D29               	goto	u1530
  3291  0528                     u1531:
  3292  0528  2D0F               	goto	l4155
  3293  0529                     u1530:
  3294  0529                     l4159:
  3295                           
  3296                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  3297  0529  0829               	movf	_nout+1,w
  3298  052A  00DD               	movwf	?_vfprintf+1
  3299  052B  0828               	movf	_nout,w
  3300  052C  00DC               	movwf	?_vfprintf
  3301  052D                     l1579:
  3302  052D  0008               	return
  3303  052E                     __end_of_vfprintf:
  3304                           
  3305                           	psect	text3
  3306  01F0                     __ptext3:	
  3307 ;; *************** function _vfpfcnvrt *****************
  3308 ;; Defined at:
  3309 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  3310 ;; Parameters:    Size  Location     Type
  3311 ;;  fp              1    wreg     PTR struct _IO_FILE
  3312 ;;		 -> NULL(0), 
  3313 ;;  fmt             1   14[BANK0 ] PTR PTR unsigned char 
  3314 ;;		 -> vfprintf@cfmt(2), 
  3315 ;;  ap              1   15[BANK0 ] PTR PTR void 
  3316 ;;		 -> printf@ap(1), 
  3317 ;; Auto vars:     Size  Location     Type
  3318 ;;  fp              1   21[BANK0 ] PTR struct _IO_FILE
  3319 ;;		 -> NULL(0), 
  3320 ;;  llu             8    0        unsigned long long 
  3321 ;;  ll              8    0        long long 
  3322 ;;  f               4    0        long long 
  3323 ;;  ct              3    0        unsigned char [3]
  3324 ;;  vp              2    0        PTR void 
  3325 ;;  i               2    0        int 
  3326 ;;  done            2    0        int 
  3327 ;;  cp              2    0        PTR unsigned char 
  3328 ;;  c               1    0        unsigned char 
  3329 ;; Return value:  Size  Location     Type
  3330 ;;                  2   14[BANK0 ] int 
  3331 ;; Registers used:
  3332 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3333 ;; Tracked objects:
  3334 ;;		On entry : 0/0
  3335 ;;		On exit  : 0/0
  3336 ;;		Unchanged: 0/0
  3337 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3338 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3339 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3340 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3341 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3342 ;;Total ram usage:        8 bytes
  3343 ;; Hardware stack levels used: 1
  3344 ;; Hardware stack levels required when called: 10
  3345 ;; This function calls:
  3346 ;;		_fputc
  3347 ;; This function is called by:
  3348 ;;		_vfprintf
  3349 ;; This function uses a non-reentrant model
  3350 ;;
  3351                           
  3352                           
  3353                           ;psect for function _vfpfcnvrt
  3354  01F0                     _vfpfcnvrt:
  3355                           
  3356                           ;incstack = 0
  3357                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3358                           ;vfpfcnvrt@fp stored from wreg
  3359  01F0  0020               	movlb	0	; select bank0
  3360  01F1  00DB               	movwf	vfpfcnvrt@fp
  3361  01F2                     l4027:
  3362                           
  3363                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  3364  01F2  0854               	movf	vfpfcnvrt@fmt,w
  3365  01F3  0086               	movwf	6
  3366  01F4  0187               	clrf	7
  3367  01F5  3F40               	moviw [0]fsr1
  3368  01F6  00D6               	movwf	??_vfpfcnvrt
  3369  01F7  3F41               	moviw [1]fsr1
  3370  01F8  00D7               	movwf	??_vfpfcnvrt+1
  3371  01F9  0856               	movf	??_vfpfcnvrt,w
  3372  01FA  0084               	movwf	4
  3373  01FB  0857               	movf	??_vfpfcnvrt+1,w
  3374  01FC  0085               	movwf	5
  3375  01FD  0012               	moviw fsr0++
  3376  01FE  3A25               	xorlw	37
  3377  01FF  1D03               	btfss	3,2
  3378  0200  2A02               	goto	u1481
  3379  0201  2A03               	goto	u1480
  3380  0202                     u1481:
  3381  0202  2A48               	goto	l4051
  3382  0203                     u1480:
  3383  0203                     l4029:
  3384                           
  3385                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  3386  0203  0854               	movf	vfpfcnvrt@fmt,w
  3387  0204  0086               	movwf	6
  3388  0205  0187               	clrf	7
  3389  0206  3001               	movlw	1
  3390  0207  0781               	addwf	1,f
  3391  0208  3141               	addfsr 1,1
  3392  0209  1803               	skipnc
  3393  020A  0A81               	incf	1,f
  3394  020B                     l4031:
  3395                           
  3396                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  3397  020B  01AA               	clrf	_width
  3398  020C  01AB               	clrf	_width+1
  3399  020D  01AE               	clrf	_flags
  3400  020E  01AF               	clrf	_flags+1
  3401  020F                     l4033:
  3402                           
  3403                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  3404  020F  30FF               	movlw	255
  3405  0210  00AC               	movwf	_prec
  3406  0211  30FF               	movlw	255
  3407  0212  00AD               	movwf	_prec+1
  3408  0213                     l4035:
  3409                           
  3410                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  3411  0213  0854               	movf	vfpfcnvrt@fmt,w
  3412  0214  0086               	movwf	6
  3413  0215  0187               	clrf	7
  3414  0216  3F40               	moviw [0]fsr1
  3415  0217  00D6               	movwf	??_vfpfcnvrt
  3416  0218  3F41               	moviw [1]fsr1
  3417  0219  00D7               	movwf	??_vfpfcnvrt+1
  3418  021A  0856               	movf	??_vfpfcnvrt,w
  3419  021B  0084               	movwf	4
  3420  021C  0857               	movf	??_vfpfcnvrt+1,w
  3421  021D  0085               	movwf	5
  3422  021E  0012               	moviw fsr0++
  3423  021F  3A25               	xorlw	37
  3424  0220  1D03               	btfss	3,2
  3425  0221  2A23               	goto	u1491
  3426  0222  2A24               	goto	u1490
  3427  0223                     u1491:
  3428  0223  2A3D               	goto	l4045
  3429  0224                     u1490:
  3430  0224                     l4037:
  3431                           
  3432                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  3433  0224  0854               	movf	vfpfcnvrt@fmt,w
  3434  0225  0086               	movwf	6
  3435  0226  0187               	clrf	7
  3436  0227  3001               	movlw	1
  3437  0228  0781               	addwf	1,f
  3438  0229  3141               	addfsr 1,1
  3439  022A  1803               	skipnc
  3440  022B  0A81               	incf	1,f
  3441  022C                     l4039:
  3442                           
  3443                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  3444  022C  3025               	movlw	37
  3445  022D  00CC               	movwf	fputc@c
  3446  022E  3000               	movlw	0
  3447  022F  00CD               	movwf	fputc@c+1
  3448  0230  085B               	movf	vfpfcnvrt@fp,w
  3449  0231  00D6               	movwf	??_vfpfcnvrt
  3450  0232  0856               	movf	??_vfpfcnvrt,w
  3451  0233  00CE               	movwf	fputc@fp
  3452  0234  3183  234C  3181   	fcall	_fputc
  3453  0237                     l4041:
  3454                           
  3455                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  3456  0237  3001               	movlw	1
  3457  0238  0020               	movlb	0	; select bank0
  3458  0239  00D4               	movwf	?_vfpfcnvrt
  3459  023A  3000               	movlw	0
  3460  023B  00D5               	movwf	?_vfpfcnvrt+1
  3461  023C  2A6B               	goto	l1573
  3462  023D                     l4045:
  3463                           
  3464                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  3465  023D  0854               	movf	vfpfcnvrt@fmt,w
  3466  023E  0086               	movwf	6
  3467  023F  0187               	clrf	7
  3468  0240  3001               	movlw	1
  3469  0241  0781               	addwf	1,f
  3470  0242  3141               	addfsr 1,1
  3471  0243  1803               	skipnc
  3472  0244  0A81               	incf	1,f
  3473  0245                     l4047:
  3474                           
  3475                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  3476  0245  01D4               	clrf	?_vfpfcnvrt
  3477  0246  01D5               	clrf	?_vfpfcnvrt+1
  3478  0247  2A6B               	goto	l1573
  3479  0248                     l4051:
  3480                           
  3481                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  3482  0248  0854               	movf	vfpfcnvrt@fmt,w
  3483  0249  0086               	movwf	6
  3484  024A  0187               	clrf	7
  3485  024B  3F40               	moviw [0]fsr1
  3486  024C  00D6               	movwf	??_vfpfcnvrt
  3487  024D  3F41               	moviw [1]fsr1
  3488  024E  00D7               	movwf	??_vfpfcnvrt+1
  3489  024F  0856               	movf	??_vfpfcnvrt,w
  3490  0250  0084               	movwf	4
  3491  0251  0857               	movf	??_vfpfcnvrt+1,w
  3492  0252  0085               	movwf	5
  3493  0253  0800               	movf	0,w	;code access
  3494  0254  00D8               	movwf	??_vfpfcnvrt+2
  3495  0255  01D9               	clrf	??_vfpfcnvrt+3
  3496  0256  0858               	movf	??_vfpfcnvrt+2,w
  3497  0257  00CC               	movwf	fputc@c
  3498  0258  0859               	movf	??_vfpfcnvrt+3,w
  3499  0259  00CD               	movwf	fputc@c+1
  3500  025A  085B               	movf	vfpfcnvrt@fp,w
  3501  025B  00DA               	movwf	??_vfpfcnvrt+4
  3502  025C  085A               	movf	??_vfpfcnvrt+4,w
  3503  025D  00CE               	movwf	fputc@fp
  3504  025E  3183  234C  3181   	fcall	_fputc
  3505  0261                     l4053:
  3506                           
  3507                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  3508  0261  0020               	movlb	0	; select bank0
  3509  0262  0854               	movf	vfpfcnvrt@fmt,w
  3510  0263  0086               	movwf	6
  3511  0264  0187               	clrf	7
  3512  0265  3001               	movlw	1
  3513  0266  0781               	addwf	1,f
  3514  0267  3141               	addfsr 1,1
  3515  0268  1803               	skipnc
  3516  0269  0A81               	incf	1,f
  3517  026A  2A37               	goto	l4041
  3518  026B                     l1573:
  3519  026B  0008               	return
  3520  026C                     __end_of_vfpfcnvrt:
  3521                           
  3522                           	psect	text4
  3523  034C                     __ptext4:	
  3524 ;; *************** function _fputc *****************
  3525 ;; Defined at:
  3526 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
  3527 ;; Parameters:    Size  Location     Type
  3528 ;;  c               2    6[BANK0 ] int 
  3529 ;;  fp              1    8[BANK0 ] PTR struct _IO_FILE
  3530 ;;		 -> NULL(0), 
  3531 ;; Auto vars:     Size  Location     Type
  3532 ;;		None
  3533 ;; Return value:  Size  Location     Type
  3534 ;;                  2    6[BANK0 ] int 
  3535 ;; Registers used:
  3536 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3537 ;; Tracked objects:
  3538 ;;		On entry : 0/0
  3539 ;;		On exit  : 0/0
  3540 ;;		Unchanged: 0/0
  3541 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3542 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3543 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3544 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3545 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3546 ;;Total ram usage:        8 bytes
  3547 ;; Hardware stack levels used: 1
  3548 ;; Hardware stack levels required when called: 9
  3549 ;; This function calls:
  3550 ;;		_putch
  3551 ;; This function is called by:
  3552 ;;		_vfpfcnvrt
  3553 ;; This function uses a non-reentrant model
  3554 ;;
  3555                           
  3556                           
  3557                           ;psect for function _fputc
  3558  034C                     _fputc:
  3559  034C                     l3997:	
  3560                           ;incstack = 0
  3561                           ; Regs used in _fputc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3562                           
  3563  034C  0020               	movlb	0	; select bank0
  3564  034D  084E               	movf	fputc@fp,w
  3565  034E  1903               	btfsc	3,2
  3566  034F  2B51               	goto	u1441
  3567  0350  2B52               	goto	u1440
  3568  0351                     u1441:
  3569  0351  2B57               	goto	l4001
  3570  0352                     u1440:
  3571  0352                     l3999:
  3572  0352  084E               	movf	fputc@fp,w
  3573  0353  1D03               	btfss	3,2
  3574  0354  2B56               	goto	u1451
  3575  0355  2B57               	goto	u1450
  3576  0356                     u1451:
  3577  0356  2B5C               	goto	l4003
  3578  0357                     u1450:
  3579  0357                     l4001:
  3580  0357  084C               	movf	fputc@c,w
  3581  0358  3187  278B  3183   	fcall	_putch
  3582  035B  2B8C               	goto	l1591
  3583  035C                     l4003:
  3584  035C  084E               	movf	fputc@fp,w
  3585  035D  3E03               	addlw	3
  3586  035E  0086               	movwf	6
  3587  035F  0187               	clrf	7
  3588  0360  0016               	moviw fsr1++
  3589  0361  0401               	iorwf	1,w
  3590  0362  1903               	btfsc	3,2
  3591  0363  2B65               	goto	u1461
  3592  0364  2B66               	goto	u1460
  3593  0365                     u1461:
  3594  0365  2B83               	goto	l4007
  3595  0366                     u1460:
  3596  0366                     l4005:
  3597  0366  084E               	movf	fputc@fp,w
  3598  0367  3E03               	addlw	3
  3599  0368  0086               	movwf	6
  3600  0369  0187               	clrf	7
  3601  036A  3F40               	moviw [0]fsr1
  3602  036B  00CF               	movwf	??_fputc
  3603  036C  3F41               	moviw [1]fsr1
  3604  036D  00D0               	movwf	??_fputc+1
  3605  036E  0A4E               	incf	fputc@fp,w
  3606  036F  0086               	movwf	6
  3607  0370  0187               	clrf	7
  3608  0371  3F40               	moviw [0]fsr1
  3609  0372  00D1               	movwf	??_fputc+2
  3610  0373  3F41               	moviw [1]fsr1
  3611  0374  00D2               	movwf	??_fputc+3
  3612  0375  0852               	movf	??_fputc+3,w
  3613  0376  3A80               	xorlw	128
  3614  0377  00D3               	movwf	??_fputc+4
  3615  0378  0850               	movf	??_fputc+1,w
  3616  0379  3A80               	xorlw	128
  3617  037A  0253               	subwf	??_fputc+4,w
  3618  037B  1D03               	skipz
  3619  037C  2B7F               	goto	u1475
  3620  037D  084F               	movf	??_fputc,w
  3621  037E  0251               	subwf	??_fputc+2,w
  3622  037F                     u1475:
  3623  037F  1803               	skipnc
  3624  0380  2B82               	goto	u1471
  3625  0381  2B83               	goto	u1470
  3626  0382                     u1471:
  3627  0382  2B8C               	goto	l1591
  3628  0383                     u1470:
  3629  0383                     l4007:
  3630  0383  0020               	movlb	0	; select bank0
  3631  0384  0A4E               	incf	fputc@fp,w
  3632  0385  0086               	movwf	6
  3633  0386  0187               	clrf	7
  3634  0387  3001               	movlw	1
  3635  0388  0781               	addwf	1,f
  3636  0389  3141               	addfsr 1,1
  3637  038A  1803               	skipnc
  3638  038B  0A81               	incf	1,f
  3639  038C                     l1591:
  3640  038C  0008               	return
  3641  038D                     __end_of_fputc:
  3642                           
  3643                           	psect	text5
  3644  078B                     __ptext5:	
  3645 ;; *************** function _putch *****************
  3646 ;; Defined at:
  3647 ;;		line 201 in file "mcc_generated_files/eusart.c"
  3648 ;; Parameters:    Size  Location     Type
  3649 ;;  txData          1    wreg     unsigned char 
  3650 ;; Auto vars:     Size  Location     Type
  3651 ;;  txData          1    5[BANK0 ] unsigned char 
  3652 ;; Return value:  Size  Location     Type
  3653 ;;                  1    wreg      void 
  3654 ;; Registers used:
  3655 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3656 ;; Tracked objects:
  3657 ;;		On entry : 0/0
  3658 ;;		On exit  : 0/0
  3659 ;;		Unchanged: 0/0
  3660 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3661 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3662 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3663 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3664 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3665 ;;Total ram usage:        1 bytes
  3666 ;; Hardware stack levels used: 1
  3667 ;; Hardware stack levels required when called: 8
  3668 ;; This function calls:
  3669 ;;		_EUSART_Write
  3670 ;; This function is called by:
  3671 ;;		_fputc
  3672 ;; This function uses a non-reentrant model
  3673 ;;
  3674                           
  3675                           
  3676                           ;psect for function _putch
  3677  078B                     _putch:
  3678                           
  3679                           ;incstack = 0
  3680                           ; Regs used in _putch: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3681                           ;putch@txData stored from wreg
  3682  078B  0020               	movlb	0	; select bank0
  3683  078C  00CB               	movwf	putch@txData
  3684  078D                     l3981:
  3685                           
  3686                           ;mcc_generated_files/eusart.c: 201: void putch(char txData);mcc_generated_files/eusart.c
      +                          : 202: {;mcc_generated_files/eusart.c: 203:     EUSART_Write(txData);
  3687  078D  084B               	movf	putch@txData,w
  3688  078E  3184  24B0  3187   	fcall	_EUSART_Write
  3689  0791                     l329:
  3690  0791  0008               	return
  3691  0792                     __end_of_putch:
  3692                           
  3693                           	psect	text6
  3694  04B0                     __ptext6:	
  3695 ;; *************** function _EUSART_Write *****************
  3696 ;; Defined at:
  3697 ;;		line 173 in file "mcc_generated_files/eusart.c"
  3698 ;; Parameters:    Size  Location     Type
  3699 ;;  txData          1    wreg     unsigned char 
  3700 ;; Auto vars:     Size  Location     Type
  3701 ;;  txData          1    4[BANK0 ] unsigned char 
  3702 ;; Return value:  Size  Location     Type
  3703 ;;                  1    wreg      void 
  3704 ;; Registers used:
  3705 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3706 ;; Tracked objects:
  3707 ;;		On entry : 0/0
  3708 ;;		On exit  : 0/0
  3709 ;;		Unchanged: 0/0
  3710 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3711 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3712 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3713 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3714 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3715 ;;Total ram usage:        2 bytes
  3716 ;; Hardware stack levels used: 1
  3717 ;; Hardware stack levels required when called: 7
  3718 ;; This function calls:
  3719 ;;		Nothing
  3720 ;; This function is called by:
  3721 ;;		_putch
  3722 ;; This function uses a non-reentrant model
  3723 ;;
  3724                           
  3725                           
  3726                           ;psect for function _EUSART_Write
  3727  04B0                     _EUSART_Write:
  3728                           
  3729                           ;incstack = 0
  3730                           ; Regs used in _EUSART_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
  3731                           ;EUSART_Write@txData stored from wreg
  3732  04B0  0020               	movlb	0	; select bank0
  3733  04B1  00CA               	movwf	EUSART_Write@txData
  3734  04B2                     l3959:
  3735  04B2                     l3961:	
  3736                           ;mcc_generated_files/eusart.c: 173: void EUSART_Write(uint8_t txData);mcc_generated_file
      +                          s/eusart.c: 174: {;mcc_generated_files/eusart.c: 175:     while(0 == eusartTxBufferRemai
      +                          ning)
  3737                           
  3738                           
  3739                           ;mcc_generated_files/eusart.c: 175:     while(0 == eusartTxBufferRemaining)
  3740  04B2  0843               	movf	_eusartTxBufferRemaining,w	;volatile
  3741  04B3  1903               	btfsc	3,2
  3742  04B4  2CB6               	goto	u1381
  3743  04B5  2CB7               	goto	u1380
  3744  04B6                     u1381:
  3745  04B6  2CB2               	goto	l3961
  3746  04B7                     u1380:
  3747  04B7                     l319:
  3748                           
  3749                           ;mcc_generated_files/eusart.c: 179:     if(0 == PIE1bits.TXIE)
  3750  04B7  0021               	movlb	1	; select bank1
  3751  04B8  1A11               	btfsc	17,4	;volatile
  3752  04B9  2CBB               	goto	u1391
  3753  04BA  2CBC               	goto	u1390
  3754  04BB                     u1391:
  3755  04BB  2CC1               	goto	l320
  3756  04BC                     u1390:
  3757  04BC                     l3963:
  3758                           
  3759                           ;mcc_generated_files/eusart.c: 180:     {;mcc_generated_files/eusart.c: 181:         TXR
      +                          EG = txData;
  3760  04BC  0020               	movlb	0	; select bank0
  3761  04BD  084A               	movf	EUSART_Write@txData,w
  3762  04BE  0023               	movlb	3	; select bank3
  3763  04BF  009A               	movwf	26	;volatile
  3764                           
  3765                           ;mcc_generated_files/eusart.c: 182:     }
  3766  04C0  2CD8               	goto	l3975
  3767  04C1                     l320:	
  3768                           ;mcc_generated_files/eusart.c: 183:     else
  3769                           
  3770                           
  3771                           ;mcc_generated_files/eusart.c: 184:     {;mcc_generated_files/eusart.c: 185:         PIE
      +                          1bits.TXIE = 0;
  3772  04C1  1211               	bcf	17,4	;volatile
  3773  04C2                     l3965:
  3774                           
  3775                           ;mcc_generated_files/eusart.c: 186:         eusartTxBuffer[eusartTxHead++] = txData;
  3776  04C2  0020               	movlb	0	; select bank0
  3777  04C3  084A               	movf	EUSART_Write@txData,w
  3778  04C4  00C9               	movwf	??_EUSART_Write
  3779  04C5  0845               	movf	_eusartTxHead,w
  3780  04C6  3EE5               	addlw	(low (_eusartTxBuffer| 0))& (0+255)
  3781  04C7  0086               	movwf	6
  3782  04C8  0187               	clrf	7
  3783  04C9  0849               	movf	??_EUSART_Write,w
  3784  04CA  0081               	movwf	1
  3785  04CB                     l3967:
  3786  04CB  3001               	movlw	1
  3787  04CC  00C9               	movwf	??_EUSART_Write
  3788  04CD  0849               	movf	??_EUSART_Write,w
  3789  04CE  07C5               	addwf	_eusartTxHead,f	;volatile
  3790  04CF                     l3969:
  3791                           
  3792                           ;mcc_generated_files/eusart.c: 187:         if(sizeof(eusartTxBuffer) <= eusartTxHead)
  3793  04CF  3008               	movlw	8
  3794  04D0  0245               	subwf	_eusartTxHead,w	;volatile
  3795  04D1  1C03               	skipc
  3796  04D2  2CD4               	goto	u1401
  3797  04D3  2CD5               	goto	u1400
  3798  04D4                     u1401:
  3799  04D4  2CD6               	goto	l3973
  3800  04D5                     u1400:
  3801  04D5                     l3971:
  3802                           
  3803                           ;mcc_generated_files/eusart.c: 188:         {;mcc_generated_files/eusart.c: 189:        
      +                               eusartTxHead = 0;
  3804  04D5  01C5               	clrf	_eusartTxHead	;volatile
  3805  04D6                     l3973:
  3806                           
  3807                           ;mcc_generated_files/eusart.c: 191:         eusartTxBufferRemaining--;
  3808  04D6  3001               	movlw	1
  3809  04D7  02C3               	subwf	_eusartTxBufferRemaining,f	;volatile
  3810  04D8                     l3975:
  3811                           
  3812                           ;mcc_generated_files/eusart.c: 193:     PIE1bits.TXIE = 1;
  3813  04D8  0021               	movlb	1	; select bank1
  3814  04D9  1611               	bsf	17,4	;volatile
  3815  04DA                     l323:
  3816  04DA  0008               	return
  3817  04DB                     __end_of_EUSART_Write:
  3818                           
  3819                           	psect	text7
  3820  0661                     __ptext7:	
  3821 ;; *************** function _SYSTEM_Initialize *****************
  3822 ;; Defined at:
  3823 ;;		line 50 in file "mcc_generated_files/mcc.c"
  3824 ;; Parameters:    Size  Location     Type
  3825 ;;		None
  3826 ;; Auto vars:     Size  Location     Type
  3827 ;;		None
  3828 ;; Return value:  Size  Location     Type
  3829 ;;                  1    wreg      void 
  3830 ;; Registers used:
  3831 ;;		wreg, status,2, status,0, pclath, cstack
  3832 ;; Tracked objects:
  3833 ;;		On entry : 0/0
  3834 ;;		On exit  : 0/0
  3835 ;;		Unchanged: 0/0
  3836 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3837 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3838 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3839 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3840 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3841 ;;Total ram usage:        0 bytes
  3842 ;; Hardware stack levels used: 1
  3843 ;; Hardware stack levels required when called: 9
  3844 ;; This function calls:
  3845 ;;		_ADC_Initialize
  3846 ;;		_EUSART_Initialize
  3847 ;;		_I2C_Initialize
  3848 ;;		_OSCILLATOR_Initialize
  3849 ;;		_PIN_MANAGER_Initialize
  3850 ;;		_WDT_Initialize
  3851 ;; This function is called by:
  3852 ;;		_main
  3853 ;; This function uses a non-reentrant model
  3854 ;;
  3855                           
  3856                           
  3857                           ;psect for function _SYSTEM_Initialize
  3858  0661                     _SYSTEM_Initialize:
  3859  0661                     l4163:	
  3860                           ;incstack = 0
  3861                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3862                           
  3863                           
  3864                           ;mcc_generated_files/mcc.c: 53:     I2C_Initialize();
  3865  0661  3187  2757  3186   	fcall	_I2C_Initialize
  3866                           
  3867                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  3868  0664  3185  2554  3186   	fcall	_PIN_MANAGER_Initialize
  3869                           
  3870                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  3871  0667  3187  2734  3186   	fcall	_OSCILLATOR_Initialize
  3872                           
  3873                           ;mcc_generated_files/mcc.c: 56:     WDT_Initialize();
  3874  066A  3187  27FC  3186   	fcall	_WDT_Initialize
  3875                           
  3876                           ;mcc_generated_files/mcc.c: 57:     ADC_Initialize();
  3877  066D  3187  277B  3186   	fcall	_ADC_Initialize
  3878                           
  3879                           ;mcc_generated_files/mcc.c: 58:     EUSART_Initialize();
  3880  0670  3183  2307  3186   	fcall	_EUSART_Initialize
  3881  0673                     l173:
  3882  0673  0008               	return
  3883  0674                     __end_of_SYSTEM_Initialize:
  3884                           
  3885                           	psect	text8
  3886  07FC                     __ptext8:	
  3887 ;; *************** function _WDT_Initialize *****************
  3888 ;; Defined at:
  3889 ;;		line 75 in file "mcc_generated_files/mcc.c"
  3890 ;; Parameters:    Size  Location     Type
  3891 ;;		None
  3892 ;; Auto vars:     Size  Location     Type
  3893 ;;		None
  3894 ;; Return value:  Size  Location     Type
  3895 ;;                  1    wreg      void 
  3896 ;; Registers used:
  3897 ;;		wreg
  3898 ;; Tracked objects:
  3899 ;;		On entry : 0/0
  3900 ;;		On exit  : 0/0
  3901 ;;		Unchanged: 0/0
  3902 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3903 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3904 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3905 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3906 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3907 ;;Total ram usage:        0 bytes
  3908 ;; Hardware stack levels used: 1
  3909 ;; Hardware stack levels required when called: 7
  3910 ;; This function calls:
  3911 ;;		Nothing
  3912 ;; This function is called by:
  3913 ;;		_SYSTEM_Initialize
  3914 ;; This function uses a non-reentrant model
  3915 ;;
  3916                           
  3917                           
  3918                           ;psect for function _WDT_Initialize
  3919  07FC                     _WDT_Initialize:
  3920  07FC                     l4101:	
  3921                           ;incstack = 0
  3922                           ; Regs used in _WDT_Initialize: [wreg]
  3923                           
  3924                           
  3925                           ;mcc_generated_files/mcc.c: 78:     WDTCON = 0x16;
  3926  07FC  3016               	movlw	22
  3927  07FD  0021               	movlb	1	; select bank1
  3928  07FE  0097               	movwf	23	;volatile
  3929  07FF                     l182:
  3930  07FF  0008               	return
  3931  0800                     __end_of_WDT_Initialize:
  3932                           
  3933                           	psect	text9
  3934  0554                     __ptext9:	
  3935 ;; *************** function _PIN_MANAGER_Initialize *****************
  3936 ;; Defined at:
  3937 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  3938 ;; Parameters:    Size  Location     Type
  3939 ;;		None
  3940 ;; Auto vars:     Size  Location     Type
  3941 ;;		None
  3942 ;; Return value:  Size  Location     Type
  3943 ;;                  1    wreg      void 
  3944 ;; Registers used:
  3945 ;;		wreg, status,2
  3946 ;; Tracked objects:
  3947 ;;		On entry : 0/0
  3948 ;;		On exit  : 0/0
  3949 ;;		Unchanged: 0/0
  3950 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3951 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3952 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3953 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3954 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3955 ;;Total ram usage:        0 bytes
  3956 ;; Hardware stack levels used: 1
  3957 ;; Hardware stack levels required when called: 7
  3958 ;; This function calls:
  3959 ;;		Nothing
  3960 ;; This function is called by:
  3961 ;;		_SYSTEM_Initialize
  3962 ;; This function uses a non-reentrant model
  3963 ;;
  3964                           
  3965                           
  3966                           ;psect for function _PIN_MANAGER_Initialize
  3967  0554                     _PIN_MANAGER_Initialize:
  3968  0554                     l4059:	
  3969                           ;incstack = 0
  3970                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  3971                           
  3972                           
  3973                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
  3974  0554  0022               	movlb	2	; select bank2
  3975  0555  0190               	clrf	16	;volatile
  3976                           
  3977                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
  3978  0556  018F               	clrf	15	;volatile
  3979                           
  3980                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
  3981  0557  018C               	clrf	12	;volatile
  3982                           
  3983                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
  3984  0558  018D               	clrf	13	;volatile
  3985                           
  3986                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
  3987  0559  018E               	clrf	14	;volatile
  3988  055A                     l4061:
  3989                           
  3990                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x0F;
  3991  055A  300F               	movlw	15
  3992  055B  0021               	movlb	1	; select bank1
  3993  055C  0090               	movwf	16	;volatile
  3994  055D                     l4063:
  3995                           
  3996                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0xFC;
  3997  055D  30FC               	movlw	252
  3998  055E  008C               	movwf	12	;volatile
  3999  055F                     l4065:
  4000                           
  4001                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xFF;
  4002  055F  30FF               	movlw	255
  4003  0560  008D               	movwf	13	;volatile
  4004  0561                     l4067:
  4005                           
  4006                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xBF;
  4007  0561  30BF               	movlw	191
  4008  0562  008E               	movwf	14	;volatile
  4009  0563                     l4069:
  4010                           
  4011                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFF;
  4012  0563  30FF               	movlw	255
  4013  0564  008F               	movwf	15	;volatile
  4014  0565                     l4071:
  4015                           
  4016                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0xFA;
  4017  0565  30FA               	movlw	250
  4018  0566  0023               	movlb	3	; select bank3
  4019  0567  008F               	movwf	15	;volatile
  4020  0568                     l4073:
  4021                           
  4022                           ;mcc_generated_files/pin_manager.c: 79:     ANSELB = 0x3F;
  4023  0568  303F               	movlw	63
  4024  0569  008D               	movwf	13	;volatile
  4025  056A                     l4075:
  4026                           
  4027                           ;mcc_generated_files/pin_manager.c: 80:     ANSELE = 0x07;
  4028  056A  3007               	movlw	7
  4029  056B  0090               	movwf	16	;volatile
  4030  056C                     l4077:
  4031                           
  4032                           ;mcc_generated_files/pin_manager.c: 81:     ANSELA = 0x3C;
  4033  056C  303C               	movlw	60
  4034  056D  008C               	movwf	12	;volatile
  4035  056E                     l4079:
  4036                           
  4037                           ;mcc_generated_files/pin_manager.c: 86:     WPUE = 0x00;
  4038  056E  0024               	movlb	4	; select bank4
  4039  056F  0190               	clrf	16	;volatile
  4040  0570                     l4081:
  4041                           
  4042                           ;mcc_generated_files/pin_manager.c: 87:     WPUB = 0x00;
  4043  0570  018D               	clrf	13	;volatile
  4044  0571                     l4083:
  4045                           
  4046                           ;mcc_generated_files/pin_manager.c: 88:     OPTION_REGbits.nWPUEN = 1;
  4047  0571  0021               	movlb	1	; select bank1
  4048  0572  1795               	bsf	21,7	;volatile
  4049  0573                     l4085:
  4050                           
  4051                           ;mcc_generated_files/pin_manager.c: 94:     APFCON = 0x00;
  4052  0573  0022               	movlb	2	; select bank2
  4053  0574  019D               	clrf	29	;volatile
  4054  0575                     l143:
  4055  0575  0008               	return
  4056  0576                     __end_of_PIN_MANAGER_Initialize:
  4057                           
  4058                           	psect	text10
  4059  0734                     __ptext10:	
  4060 ;; *************** function _OSCILLATOR_Initialize *****************
  4061 ;; Defined at:
  4062 ;;		line 61 in file "mcc_generated_files/mcc.c"
  4063 ;; Parameters:    Size  Location     Type
  4064 ;;		None
  4065 ;; Auto vars:     Size  Location     Type
  4066 ;;		None
  4067 ;; Return value:  Size  Location     Type
  4068 ;;                  1    wreg      void 
  4069 ;; Registers used:
  4070 ;;		wreg, status,2
  4071 ;; Tracked objects:
  4072 ;;		On entry : 0/0
  4073 ;;		On exit  : 0/0
  4074 ;;		Unchanged: 0/0
  4075 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4076 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4077 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4078 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4079 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4080 ;;Total ram usage:        0 bytes
  4081 ;; Hardware stack levels used: 1
  4082 ;; Hardware stack levels required when called: 7
  4083 ;; This function calls:
  4084 ;;		Nothing
  4085 ;; This function is called by:
  4086 ;;		_SYSTEM_Initialize
  4087 ;; This function uses a non-reentrant model
  4088 ;;
  4089                           
  4090                           
  4091                           ;psect for function _OSCILLATOR_Initialize
  4092  0734                     _OSCILLATOR_Initialize:
  4093  0734                     l4095:	
  4094                           ;incstack = 0
  4095                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  4096                           
  4097                           
  4098                           ;mcc_generated_files/mcc.c: 64:     OSCCON = 0x70;
  4099  0734  3070               	movlw	112
  4100  0735  0021               	movlb	1	; select bank1
  4101  0736  0099               	movwf	25	;volatile
  4102  0737                     l4097:
  4103                           
  4104                           ;mcc_generated_files/mcc.c: 66:     OSCTUNE = 0x00;
  4105  0737  0198               	clrf	24	;volatile
  4106  0738                     l4099:
  4107                           
  4108                           ;mcc_generated_files/mcc.c: 68:     BORCON = 0x00;
  4109  0738  0022               	movlb	2	; select bank2
  4110  0739  0196               	clrf	22	;volatile
  4111  073A                     l176:	
  4112                           ;mcc_generated_files/mcc.c: 71:     {;mcc_generated_files/mcc.c: 72:     }
  4113                           
  4114                           
  4115                           ;mcc_generated_files/mcc.c: 70:     while(PLLR == 0)
  4116  073A  0021               	movlb	1	; select bank1
  4117  073B  1F1A               	btfss	26,6	;volatile
  4118  073C  2F3E               	goto	u1501
  4119  073D  2F3F               	goto	u1500
  4120  073E                     u1501:
  4121  073E  2F3A               	goto	l176
  4122  073F                     u1500:
  4123  073F                     l179:
  4124  073F  0008               	return
  4125  0740                     __end_of_OSCILLATOR_Initialize:
  4126                           
  4127                           	psect	text11
  4128  0757                     __ptext11:	
  4129 ;; *************** function _I2C_Initialize *****************
  4130 ;; Defined at:
  4131 ;;		line 167 in file "mcc_generated_files/i2c_master.c"
  4132 ;; Parameters:    Size  Location     Type
  4133 ;;		None
  4134 ;; Auto vars:     Size  Location     Type
  4135 ;;		None
  4136 ;; Return value:  Size  Location     Type
  4137 ;;                  1    wreg      void 
  4138 ;; Registers used:
  4139 ;;		wreg, status,2
  4140 ;; Tracked objects:
  4141 ;;		On entry : 0/0
  4142 ;;		On exit  : 0/0
  4143 ;;		Unchanged: 0/0
  4144 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4145 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4146 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4147 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4148 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4149 ;;Total ram usage:        0 bytes
  4150 ;; Hardware stack levels used: 1
  4151 ;; Hardware stack levels required when called: 7
  4152 ;; This function calls:
  4153 ;;		Nothing
  4154 ;; This function is called by:
  4155 ;;		_SYSTEM_Initialize
  4156 ;; This function uses a non-reentrant model
  4157 ;;
  4158                           
  4159                           
  4160                           ;psect for function _I2C_Initialize
  4161  0757                     _I2C_Initialize:
  4162  0757                     l4087:	
  4163                           ;incstack = 0
  4164                           ; Regs used in _I2C_Initialize: [wreg+status,2]
  4165                           
  4166                           
  4167                           ;mcc_generated_files/i2c_master.c: 169:     SSPSTAT = 0xC0;
  4168  0757  30C0               	movlw	192
  4169  0758  0024               	movlb	4	; select bank4
  4170  0759  0094               	movwf	20	;volatile
  4171                           
  4172                           ;mcc_generated_files/i2c_master.c: 170:     SSPCON1 = 0x08;
  4173  075A  3008               	movlw	8
  4174  075B  0095               	movwf	21	;volatile
  4175  075C                     l4089:
  4176                           
  4177                           ;mcc_generated_files/i2c_master.c: 171:     SSPCON2 = 0x00;
  4178  075C  0196               	clrf	22	;volatile
  4179  075D                     l4091:
  4180                           
  4181                           ;mcc_generated_files/i2c_master.c: 172:     SSPADD = 0x4F;
  4182  075D  304F               	movlw	79
  4183  075E  0092               	movwf	18	;volatile
  4184  075F                     l4093:
  4185                           
  4186                           ;mcc_generated_files/i2c_master.c: 173:     SSPCON1bits.SSPEN = 0;
  4187  075F  1295               	bcf	21,5	;volatile
  4188  0760                     l510:
  4189  0760  0008               	return
  4190  0761                     __end_of_I2C_Initialize:
  4191                           
  4192                           	psect	text12
  4193  0307                     __ptext12:	
  4194 ;; *************** function _EUSART_Initialize *****************
  4195 ;; Defined at:
  4196 ;;		line 88 in file "mcc_generated_files/eusart.c"
  4197 ;; Parameters:    Size  Location     Type
  4198 ;;		None
  4199 ;; Auto vars:     Size  Location     Type
  4200 ;;		None
  4201 ;; Return value:  Size  Location     Type
  4202 ;;                  1    wreg      void 
  4203 ;; Registers used:
  4204 ;;		wreg, status,2, status,0, pclath, cstack
  4205 ;; Tracked objects:
  4206 ;;		On entry : 0/0
  4207 ;;		On exit  : 0/0
  4208 ;;		Unchanged: 0/0
  4209 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4210 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4211 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4212 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4213 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4214 ;;Total ram usage:        1 bytes
  4215 ;; Hardware stack levels used: 1
  4216 ;; Hardware stack levels required when called: 8
  4217 ;; This function calls:
  4218 ;;		_EUSART_SetErrorHandler
  4219 ;;		_EUSART_SetFramingErrorHandler
  4220 ;;		_EUSART_SetOverrunErrorHandler
  4221 ;;		_EUSART_SetRxInterruptHandler
  4222 ;;		_EUSART_SetTxInterruptHandler
  4223 ;; This function is called by:
  4224 ;;		_SYSTEM_Initialize
  4225 ;; This function uses a non-reentrant model
  4226 ;;
  4227                           
  4228                           
  4229                           ;psect for function _EUSART_Initialize
  4230  0307                     _EUSART_Initialize:
  4231  0307                     l4109:	
  4232                           ;incstack = 0
  4233                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4234                           
  4235                           
  4236                           ;mcc_generated_files/eusart.c: 91:     PIE1bits.RCIE = 0;
  4237  0307  0021               	movlb	1	; select bank1
  4238  0308  1291               	bcf	17,5	;volatile
  4239  0309                     l4111:
  4240                           
  4241                           ;mcc_generated_files/eusart.c: 92:     EUSART_SetRxInterruptHandler(EUSART_Receive_ISR);
  4242  0309  308D               	movlw	low _EUSART_Receive_ISR
  4243  030A  0020               	movlb	0	; select bank0
  4244  030B  00C9               	movwf	EUSART_SetRxInterruptHandler@interruptHandler
  4245  030C  3003               	movlw	high _EUSART_Receive_ISR
  4246  030D  00CA               	movwf	EUSART_SetRxInterruptHandler@interruptHandler+1
  4247  030E  3187  27A5  3183   	fcall	_EUSART_SetRxInterruptHandler
  4248  0311                     l4113:
  4249                           
  4250                           ;mcc_generated_files/eusart.c: 93:     PIE1bits.TXIE = 0;
  4251  0311  0021               	movlb	1	; select bank1
  4252  0312  1211               	bcf	17,4	;volatile
  4253                           
  4254                           ;mcc_generated_files/eusart.c: 94:     EUSART_SetTxInterruptHandler(EUSART_Transmit_ISR)
      +                          ;
  4255  0313  3076               	movlw	low _EUSART_Transmit_ISR
  4256  0314  0020               	movlb	0	; select bank0
  4257  0315  00C9               	movwf	EUSART_SetTxInterruptHandler@interruptHandler
  4258  0316  3005               	movlw	high _EUSART_Transmit_ISR
  4259  0317  00CA               	movwf	EUSART_SetTxInterruptHandler@interruptHandler+1
  4260  0318  3187  279F  3183   	fcall	_EUSART_SetTxInterruptHandler
  4261  031B                     l4115:
  4262                           
  4263                           ;mcc_generated_files/eusart.c: 98:     BAUDCON = 0x08;
  4264  031B  3008               	movlw	8
  4265  031C  0023               	movlb	3	; select bank3
  4266  031D  009F               	movwf	31	;volatile
  4267  031E                     l4117:
  4268                           
  4269                           ;mcc_generated_files/eusart.c: 101:     RCSTA = 0x90;
  4270  031E  3090               	movlw	144
  4271  031F  009D               	movwf	29	;volatile
  4272  0320                     l4119:
  4273                           
  4274                           ;mcc_generated_files/eusart.c: 104:     TXSTA = 0x24;
  4275  0320  3024               	movlw	36
  4276  0321  009E               	movwf	30	;volatile
  4277  0322                     l4121:
  4278                           
  4279                           ;mcc_generated_files/eusart.c: 107:     SPBRGL = 0x40;
  4280  0322  3040               	movlw	64
  4281  0323  009B               	movwf	27	;volatile
  4282  0324                     l4123:
  4283                           
  4284                           ;mcc_generated_files/eusart.c: 110:     SPBRGH = 0x03;
  4285  0324  3003               	movlw	3
  4286  0325  009C               	movwf	28	;volatile
  4287  0326                     l4125:
  4288                           
  4289                           ;mcc_generated_files/eusart.c: 113:     EUSART_SetFramingErrorHandler(EUSART_DefaultFram
      +                          ingErrorHandler);
  4290  0326  30D1               	movlw	low _EUSART_DefaultFramingErrorHandler
  4291  0327  0020               	movlb	0	; select bank0
  4292  0328  00C9               	movwf	EUSART_SetFramingErrorHandler@interruptHandler
  4293  0329  300F               	movlw	high _EUSART_DefaultFramingErrorHandler
  4294  032A  00CA               	movwf	EUSART_SetFramingErrorHandler@interruptHandler+1
  4295  032B  3187  27B1  3183   	fcall	_EUSART_SetFramingErrorHandler
  4296  032E                     l4127:
  4297                           
  4298                           ;mcc_generated_files/eusart.c: 114:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOver
      +                          runErrorHandler);
  4299  032E  30EB               	movlw	low _EUSART_DefaultOverrunErrorHandler
  4300  032F  0020               	movlb	0	; select bank0
  4301  0330  00C9               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler
  4302  0331  300F               	movlw	high _EUSART_DefaultOverrunErrorHandler
  4303  0332  00CA               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler+1
  4304  0333  3187  27AB  3183   	fcall	_EUSART_SetOverrunErrorHandler
  4305  0336                     l4129:
  4306                           
  4307                           ;mcc_generated_files/eusart.c: 115:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandle
      +                          r);
  4308  0336  30E7               	movlw	low _EUSART_DefaultErrorHandler
  4309  0337  0020               	movlb	0	; select bank0
  4310  0338  00C9               	movwf	EUSART_SetErrorHandler@interruptHandler
  4311  0339  300F               	movlw	high _EUSART_DefaultErrorHandler
  4312  033A  00CA               	movwf	EUSART_SetErrorHandler@interruptHandler+1
  4313  033B  3187  27B7  3183   	fcall	_EUSART_SetErrorHandler
  4314  033E                     l4131:
  4315                           
  4316                           ;mcc_generated_files/eusart.c: 117:     eusartRxLastError.status = 0;
  4317  033E  0020               	movlb	0	; select bank0
  4318  033F  01BF               	clrf	_eusartRxLastError	;volatile
  4319  0340                     l4133:
  4320                           
  4321                           ;mcc_generated_files/eusart.c: 120:     eusartTxHead = 0;
  4322  0340  01C5               	clrf	_eusartTxHead	;volatile
  4323  0341                     l4135:
  4324                           
  4325                           ;mcc_generated_files/eusart.c: 121:     eusartTxTail = 0;
  4326  0341  01C4               	clrf	_eusartTxTail	;volatile
  4327  0342                     l4137:
  4328                           
  4329                           ;mcc_generated_files/eusart.c: 122:     eusartTxBufferRemaining = sizeof(eusartTxBuffer)
      +                          ;
  4330  0342  3008               	movlw	8
  4331  0343  00CB               	movwf	??_EUSART_Initialize
  4332  0344  084B               	movf	??_EUSART_Initialize,w
  4333  0345  00C3               	movwf	_eusartTxBufferRemaining	;volatile
  4334                           
  4335                           ;mcc_generated_files/eusart.c: 124:     eusartRxHead = 0;
  4336  0346  01C2               	clrf	_eusartRxHead	;volatile
  4337                           
  4338                           ;mcc_generated_files/eusart.c: 125:     eusartRxTail = 0;
  4339  0347  01C1               	clrf	_eusartRxTail	;volatile
  4340                           
  4341                           ;mcc_generated_files/eusart.c: 126:     eusartRxCount = 0;
  4342  0348  01C0               	clrf	_eusartRxCount	;volatile
  4343  0349                     l4139:
  4344                           
  4345                           ;mcc_generated_files/eusart.c: 129:     PIE1bits.RCIE = 1;
  4346  0349  0021               	movlb	1	; select bank1
  4347  034A  1691               	bsf	17,5	;volatile
  4348  034B                     l295:
  4349  034B  0008               	return
  4350  034C                     __end_of_EUSART_Initialize:
  4351                           
  4352                           	psect	text13
  4353  079F                     __ptext13:	
  4354 ;; *************** function _EUSART_SetTxInterruptHandler *****************
  4355 ;; Defined at:
  4356 ;;		line 285 in file "mcc_generated_files/eusart.c"
  4357 ;; Parameters:    Size  Location     Type
  4358 ;;  interruptHan    2    3[BANK0 ] PTR FTN()void 
  4359 ;;		 -> EUSART_Transmit_ISR(1), 
  4360 ;; Auto vars:     Size  Location     Type
  4361 ;;		None
  4362 ;; Return value:  Size  Location     Type
  4363 ;;                  1    wreg      void 
  4364 ;; Registers used:
  4365 ;;		wreg
  4366 ;; Tracked objects:
  4367 ;;		On entry : 0/0
  4368 ;;		On exit  : 0/0
  4369 ;;		Unchanged: 0/0
  4370 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4371 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4372 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4373 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4374 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4375 ;;Total ram usage:        2 bytes
  4376 ;; Hardware stack levels used: 1
  4377 ;; Hardware stack levels required when called: 7
  4378 ;; This function calls:
  4379 ;;		Nothing
  4380 ;; This function is called by:
  4381 ;;		_EUSART_Initialize
  4382 ;; This function uses a non-reentrant model
  4383 ;;
  4384                           
  4385                           
  4386                           ;psect for function _EUSART_SetTxInterruptHandler
  4387  079F                     _EUSART_SetTxInterruptHandler:
  4388  079F                     l4013:	
  4389                           ;incstack = 0
  4390                           ; Regs used in _EUSART_SetTxInterruptHandler: [wreg]
  4391                           
  4392                           
  4393                           ;mcc_generated_files/eusart.c: 286:     EUSART_TxDefaultInterruptHandler = interruptHand
      +                          ler;
  4394  079F  0020               	movlb	0	; select bank0
  4395  07A0  084A               	movf	EUSART_SetTxInterruptHandler@interruptHandler+1,w
  4396  07A1  00B9               	movwf	_EUSART_TxDefaultInterruptHandler+1
  4397  07A2  0849               	movf	EUSART_SetTxInterruptHandler@interruptHandler,w
  4398  07A3  00B8               	movwf	_EUSART_TxDefaultInterruptHandler
  4399  07A4                     l367:
  4400  07A4  0008               	return
  4401  07A5                     __end_of_EUSART_SetTxInterruptHandler:
  4402                           
  4403                           	psect	text14
  4404  07A5                     __ptext14:	
  4405 ;; *************** function _EUSART_SetRxInterruptHandler *****************
  4406 ;; Defined at:
  4407 ;;		line 289 in file "mcc_generated_files/eusart.c"
  4408 ;; Parameters:    Size  Location     Type
  4409 ;;  interruptHan    2    3[BANK0 ] PTR FTN()void 
  4410 ;;		 -> EUSART_Receive_ISR(1), 
  4411 ;; Auto vars:     Size  Location     Type
  4412 ;;		None
  4413 ;; Return value:  Size  Location     Type
  4414 ;;                  1    wreg      void 
  4415 ;; Registers used:
  4416 ;;		wreg
  4417 ;; Tracked objects:
  4418 ;;		On entry : 0/0
  4419 ;;		On exit  : 0/0
  4420 ;;		Unchanged: 0/0
  4421 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4422 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4423 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4424 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4425 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4426 ;;Total ram usage:        2 bytes
  4427 ;; Hardware stack levels used: 1
  4428 ;; Hardware stack levels required when called: 7
  4429 ;; This function calls:
  4430 ;;		Nothing
  4431 ;; This function is called by:
  4432 ;;		_EUSART_Initialize
  4433 ;; This function uses a non-reentrant model
  4434 ;;
  4435                           
  4436                           
  4437                           ;psect for function _EUSART_SetRxInterruptHandler
  4438  07A5                     _EUSART_SetRxInterruptHandler:
  4439  07A5                     l4011:	
  4440                           ;incstack = 0
  4441                           ; Regs used in _EUSART_SetRxInterruptHandler: [wreg]
  4442                           
  4443                           
  4444                           ;mcc_generated_files/eusart.c: 290:     EUSART_RxDefaultInterruptHandler = interruptHand
      +                          ler;
  4445  07A5  0020               	movlb	0	; select bank0
  4446  07A6  084A               	movf	EUSART_SetRxInterruptHandler@interruptHandler+1,w
  4447  07A7  00B7               	movwf	_EUSART_RxDefaultInterruptHandler+1
  4448  07A8  0849               	movf	EUSART_SetRxInterruptHandler@interruptHandler,w
  4449  07A9  00B6               	movwf	_EUSART_RxDefaultInterruptHandler
  4450  07AA                     l370:
  4451  07AA  0008               	return
  4452  07AB                     __end_of_EUSART_SetRxInterruptHandler:
  4453                           
  4454                           	psect	text15
  4455  07AB                     __ptext15:	
  4456 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  4457 ;; Defined at:
  4458 ;;		line 277 in file "mcc_generated_files/eusart.c"
  4459 ;; Parameters:    Size  Location     Type
  4460 ;;  interruptHan    2    3[BANK0 ] PTR FTN()void 
  4461 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  4462 ;; Auto vars:     Size  Location     Type
  4463 ;;		None
  4464 ;; Return value:  Size  Location     Type
  4465 ;;                  1    wreg      void 
  4466 ;; Registers used:
  4467 ;;		wreg
  4468 ;; Tracked objects:
  4469 ;;		On entry : 0/0
  4470 ;;		On exit  : 0/0
  4471 ;;		Unchanged: 0/0
  4472 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4473 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4474 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4475 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4476 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4477 ;;Total ram usage:        2 bytes
  4478 ;; Hardware stack levels used: 1
  4479 ;; Hardware stack levels required when called: 7
  4480 ;; This function calls:
  4481 ;;		Nothing
  4482 ;; This function is called by:
  4483 ;;		_EUSART_Initialize
  4484 ;; This function uses a non-reentrant model
  4485 ;;
  4486                           
  4487                           
  4488                           ;psect for function _EUSART_SetOverrunErrorHandler
  4489  07AB                     _EUSART_SetOverrunErrorHandler:
  4490  07AB                     l4017:	
  4491                           ;incstack = 0
  4492                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  4493                           
  4494                           
  4495                           ;mcc_generated_files/eusart.c: 278:     EUSART_OverrunErrorHandler = interruptHandler;
  4496  07AB  0020               	movlb	0	; select bank0
  4497  07AC  084A               	movf	EUSART_SetOverrunErrorHandler@interruptHandler+1,w
  4498  07AD  00B3               	movwf	_EUSART_OverrunErrorHandler+1
  4499  07AE  0849               	movf	EUSART_SetOverrunErrorHandler@interruptHandler,w
  4500  07AF  00B2               	movwf	_EUSART_OverrunErrorHandler
  4501  07B0                     l361:
  4502  07B0  0008               	return
  4503  07B1                     __end_of_EUSART_SetOverrunErrorHandler:
  4504                           
  4505                           	psect	text16
  4506  07B1                     __ptext16:	
  4507 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  4508 ;; Defined at:
  4509 ;;		line 273 in file "mcc_generated_files/eusart.c"
  4510 ;; Parameters:    Size  Location     Type
  4511 ;;  interruptHan    2    3[BANK0 ] PTR FTN()void 
  4512 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  4513 ;; Auto vars:     Size  Location     Type
  4514 ;;		None
  4515 ;; Return value:  Size  Location     Type
  4516 ;;                  1    wreg      void 
  4517 ;; Registers used:
  4518 ;;		wreg
  4519 ;; Tracked objects:
  4520 ;;		On entry : 0/0
  4521 ;;		On exit  : 0/0
  4522 ;;		Unchanged: 0/0
  4523 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4524 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4525 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4526 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4527 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4528 ;;Total ram usage:        2 bytes
  4529 ;; Hardware stack levels used: 1
  4530 ;; Hardware stack levels required when called: 7
  4531 ;; This function calls:
  4532 ;;		Nothing
  4533 ;; This function is called by:
  4534 ;;		_EUSART_Initialize
  4535 ;; This function uses a non-reentrant model
  4536 ;;
  4537                           
  4538                           
  4539                           ;psect for function _EUSART_SetFramingErrorHandler
  4540  07B1                     _EUSART_SetFramingErrorHandler:
  4541  07B1                     l4015:	
  4542                           ;incstack = 0
  4543                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  4544                           
  4545                           
  4546                           ;mcc_generated_files/eusart.c: 274:     EUSART_FramingErrorHandler = interruptHandler;
  4547  07B1  0020               	movlb	0	; select bank0
  4548  07B2  084A               	movf	EUSART_SetFramingErrorHandler@interruptHandler+1,w
  4549  07B3  00B5               	movwf	_EUSART_FramingErrorHandler+1
  4550  07B4  0849               	movf	EUSART_SetFramingErrorHandler@interruptHandler,w
  4551  07B5  00B4               	movwf	_EUSART_FramingErrorHandler
  4552  07B6                     l358:
  4553  07B6  0008               	return
  4554  07B7                     __end_of_EUSART_SetFramingErrorHandler:
  4555                           
  4556                           	psect	text17
  4557  07B7                     __ptext17:	
  4558 ;; *************** function _EUSART_SetErrorHandler *****************
  4559 ;; Defined at:
  4560 ;;		line 281 in file "mcc_generated_files/eusart.c"
  4561 ;; Parameters:    Size  Location     Type
  4562 ;;  interruptHan    2    3[BANK0 ] PTR FTN()void 
  4563 ;;		 -> EUSART_DefaultErrorHandler(1), 
  4564 ;; Auto vars:     Size  Location     Type
  4565 ;;		None
  4566 ;; Return value:  Size  Location     Type
  4567 ;;                  1    wreg      void 
  4568 ;; Registers used:
  4569 ;;		wreg
  4570 ;; Tracked objects:
  4571 ;;		On entry : 0/0
  4572 ;;		On exit  : 0/0
  4573 ;;		Unchanged: 0/0
  4574 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4575 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4576 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4577 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4578 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4579 ;;Total ram usage:        2 bytes
  4580 ;; Hardware stack levels used: 1
  4581 ;; Hardware stack levels required when called: 7
  4582 ;; This function calls:
  4583 ;;		Nothing
  4584 ;; This function is called by:
  4585 ;;		_EUSART_Initialize
  4586 ;; This function uses a non-reentrant model
  4587 ;;
  4588                           
  4589                           
  4590                           ;psect for function _EUSART_SetErrorHandler
  4591  07B7                     _EUSART_SetErrorHandler:
  4592  07B7                     l4019:	
  4593                           ;incstack = 0
  4594                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  4595                           
  4596                           
  4597                           ;mcc_generated_files/eusart.c: 282:     EUSART_ErrorHandler = interruptHandler;
  4598  07B7  0020               	movlb	0	; select bank0
  4599  07B8  084A               	movf	EUSART_SetErrorHandler@interruptHandler+1,w
  4600  07B9  00B1               	movwf	_EUSART_ErrorHandler+1
  4601  07BA  0849               	movf	EUSART_SetErrorHandler@interruptHandler,w
  4602  07BB  00B0               	movwf	_EUSART_ErrorHandler
  4603  07BC                     l364:
  4604  07BC  0008               	return
  4605  07BD                     __end_of_EUSART_SetErrorHandler:
  4606                           
  4607                           	psect	text18
  4608  077B                     __ptext18:	
  4609 ;; *************** function _ADC_Initialize *****************
  4610 ;; Defined at:
  4611 ;;		line 67 in file "mcc_generated_files/adc.c"
  4612 ;; Parameters:    Size  Location     Type
  4613 ;;		None
  4614 ;; Auto vars:     Size  Location     Type
  4615 ;;		None
  4616 ;; Return value:  Size  Location     Type
  4617 ;;                  1    wreg      void 
  4618 ;; Registers used:
  4619 ;;		wreg, status,2
  4620 ;; Tracked objects:
  4621 ;;		On entry : 0/0
  4622 ;;		On exit  : 0/0
  4623 ;;		Unchanged: 0/0
  4624 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4625 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4626 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4627 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4628 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4629 ;;Total ram usage:        0 bytes
  4630 ;; Hardware stack levels used: 1
  4631 ;; Hardware stack levels required when called: 7
  4632 ;; This function calls:
  4633 ;;		Nothing
  4634 ;; This function is called by:
  4635 ;;		_SYSTEM_Initialize
  4636 ;; This function uses a non-reentrant model
  4637 ;;
  4638                           
  4639                           
  4640                           ;psect for function _ADC_Initialize
  4641  077B                     _ADC_Initialize:
  4642  077B                     l4103:	
  4643                           ;incstack = 0
  4644                           ; Regs used in _ADC_Initialize: [wreg+status,2]
  4645                           
  4646                           
  4647                           ;mcc_generated_files/adc.c: 72:     ADCON1 = 0xF0;
  4648  077B  30F0               	movlw	240
  4649  077C  0021               	movlb	1	; select bank1
  4650  077D  009E               	movwf	30	;volatile
  4651  077E                     l4105:
  4652                           
  4653                           ;mcc_generated_files/adc.c: 75:     ADRESL = 0x00;
  4654  077E  019B               	clrf	27	;volatile
  4655  077F                     l4107:
  4656                           
  4657                           ;mcc_generated_files/adc.c: 78:     ADRESH = 0x00;
  4658  077F  019C               	clrf	28	;volatile
  4659                           
  4660                           ;mcc_generated_files/adc.c: 81:     ADCON0 = 0x01;
  4661  0780  3001               	movlw	1
  4662  0781  009D               	movwf	29	;volatile
  4663  0782                     l199:
  4664  0782  0008               	return
  4665  0783                     __end_of_ADC_Initialize:
  4666                           
  4667                           	psect	text19
  4668  05B9                     __ptext19:	
  4669 ;; *************** function _LCD_Write_String *****************
  4670 ;; Defined at:
  4671 ;;		line 134 in file "I2C_LCD.c"
  4672 ;; Parameters:    Size  Location     Type
  4673 ;;  Str             2    9[BANK0 ] PTR unsigned char 
  4674 ;;		 -> STR_4(17), STR_3(14), STR_2(8), STR_1(16), 
  4675 ;; Auto vars:     Size  Location     Type
  4676 ;;  i               2   12[BANK0 ] int 
  4677 ;; Return value:  Size  Location     Type
  4678 ;;                  1    wreg      void 
  4679 ;; Registers used:
  4680 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4681 ;; Tracked objects:
  4682 ;;		On entry : 0/0
  4683 ;;		On exit  : 0/0
  4684 ;;		Unchanged: 0/0
  4685 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4686 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4687 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4688 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4689 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4690 ;;Total ram usage:        5 bytes
  4691 ;; Hardware stack levels used: 1
  4692 ;; Hardware stack levels required when called: 12
  4693 ;; This function calls:
  4694 ;;		_LCD_Write_Char
  4695 ;; This function is called by:
  4696 ;;		_main
  4697 ;; This function uses a non-reentrant model
  4698 ;;
  4699                           
  4700                           
  4701                           ;psect for function _LCD_Write_String
  4702  05B9                     _LCD_Write_String:
  4703  05B9                     l4253:	
  4704                           ;incstack = 0
  4705                           ; Regs used in _LCD_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4706                           
  4707                           
  4708                           ;I2C_LCD.c: 134: void LCD_Write_String(char* Str);I2C_LCD.c: 135: {;I2C_LCD.c: 136:     
      +                          for(int i=0; Str[i]!='\0'; i++)
  4709  05B9  0020               	movlb	0	; select bank0
  4710  05BA  01D2               	clrf	LCD_Write_String@i
  4711  05BB  01D3               	clrf	LCD_Write_String@i+1
  4712  05BC  2DCC               	goto	l4259
  4713  05BD                     l4255:
  4714                           
  4715                           ;I2C_LCD.c: 137:        LCD_Write_Char(Str[i]);
  4716  05BD  084F               	movf	LCD_Write_String@Str,w
  4717  05BE  0752               	addwf	LCD_Write_String@i,w
  4718  05BF  0084               	movwf	4
  4719  05C0  0850               	movf	LCD_Write_String@Str+1,w
  4720  05C1  3D53               	addwfc	LCD_Write_String@i+1,w
  4721  05C2  0085               	movwf	5
  4722  05C3  0800               	movf	0,w	;code access
  4723  05C4  3186  260A  3185   	fcall	_LCD_Write_Char
  4724  05C7                     l4257:
  4725  05C7  3001               	movlw	1
  4726  05C8  0020               	movlb	0	; select bank0
  4727  05C9  07D2               	addwf	LCD_Write_String@i,f
  4728  05CA  3000               	movlw	0
  4729  05CB  3DD3               	addwfc	LCD_Write_String@i+1,f
  4730  05CC                     l4259:
  4731  05CC  084F               	movf	LCD_Write_String@Str,w
  4732  05CD  0752               	addwf	LCD_Write_String@i,w
  4733  05CE  0084               	movwf	4
  4734  05CF  0850               	movf	LCD_Write_String@Str+1,w
  4735  05D0  3D53               	addwfc	LCD_Write_String@i+1,w
  4736  05D1  0085               	movwf	5
  4737  05D2  0012               	moviw fsr0++
  4738  05D3  1D03               	btfss	3,2
  4739  05D4  2DD6               	goto	u1571
  4740  05D5  2DD7               	goto	u1570
  4741  05D6                     u1571:
  4742  05D6  2DBD               	goto	l4255
  4743  05D7                     u1570:
  4744  05D7                     l903:
  4745  05D7  0008               	return
  4746  05D8                     __end_of_LCD_Write_String:
  4747                           
  4748                           	psect	text20
  4749  060A                     __ptext20:	
  4750 ;; *************** function _LCD_Write_Char *****************
  4751 ;; Defined at:
  4752 ;;		line 127 in file "I2C_LCD.c"
  4753 ;; Parameters:    Size  Location     Type
  4754 ;;  Data            1    wreg     unsigned char 
  4755 ;; Auto vars:     Size  Location     Type
  4756 ;;  Data            1    8[BANK0 ] unsigned char 
  4757 ;; Return value:  Size  Location     Type
  4758 ;;                  1    wreg      void 
  4759 ;; Registers used:
  4760 ;;		wreg, status,2, status,0, pclath, cstack
  4761 ;; Tracked objects:
  4762 ;;		On entry : 0/0
  4763 ;;		On exit  : 0/0
  4764 ;;		Unchanged: 0/0
  4765 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4766 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4767 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4768 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4769 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4770 ;;Total ram usage:        2 bytes
  4771 ;; Hardware stack levels used: 1
  4772 ;; Hardware stack levels required when called: 11
  4773 ;; This function calls:
  4774 ;;		_LCD_Write_4Bit
  4775 ;; This function is called by:
  4776 ;;		_LCD_Write_String
  4777 ;; This function uses a non-reentrant model
  4778 ;;
  4779                           
  4780                           
  4781                           ;psect for function _LCD_Write_Char
  4782  060A                     _LCD_Write_Char:
  4783                           
  4784                           ;incstack = 0
  4785                           ; Regs used in _LCD_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  4786                           ;LCD_Write_Char@Data stored from wreg
  4787  060A  0020               	movlb	0	; select bank0
  4788  060B  00CE               	movwf	LCD_Write_Char@Data
  4789  060C                     l4147:
  4790                           
  4791                           ;I2C_LCD.c: 127: void LCD_Write_Char(char Data);I2C_LCD.c: 128: {;I2C_LCD.c: 129:   RS =
      +                           1;
  4792  060C  01FD               	clrf	_RS
  4793  060D  0AFD               	incf	_RS,f
  4794  060E                     l4149:
  4795                           
  4796                           ;I2C_LCD.c: 130:   LCD_Write_4Bit(Data & 0xF0);
  4797  060E  084E               	movf	LCD_Write_Char@Data,w
  4798  060F  39F0               	andlw	240
  4799  0610  3186  2637  3186   	fcall	_LCD_Write_4Bit
  4800                           
  4801                           ;I2C_LCD.c: 131:   LCD_Write_4Bit((Data << 4) & 0xF0);
  4802  0613  0020               	movlb	0	; select bank0
  4803  0614  084E               	movf	LCD_Write_Char@Data,w
  4804  0615  00CD               	movwf	??_LCD_Write_Char
  4805  0616  3003               	movlw	3
  4806  0617                     u1525:
  4807  0617  35CD               	lslf	??_LCD_Write_Char,f
  4808  0618  3EFF               	addlw	-1
  4809  0619  1D03               	skipz
  4810  061A  2E17               	goto	u1525
  4811  061B  354D               	lslf	??_LCD_Write_Char,w
  4812  061C  39F0               	andlw	240
  4813  061D  3186  2637  3186   	fcall	_LCD_Write_4Bit
  4814  0620                     l897:
  4815  0620  0008               	return
  4816  0621                     __end_of_LCD_Write_Char:
  4817                           
  4818                           	psect	text21
  4819  03F8                     __ptext21:	
  4820 ;; *************** function _LCD_Set_Cursor *****************
  4821 ;; Defined at:
  4822 ;;		line 140 in file "I2C_LCD.c"
  4823 ;; Parameters:    Size  Location     Type
  4824 ;;  ROW             1    wreg     unsigned char 
  4825 ;;  COL             1    9[BANK0 ] unsigned char 
  4826 ;; Auto vars:     Size  Location     Type
  4827 ;;  ROW             1   12[BANK0 ] unsigned char 
  4828 ;; Return value:  Size  Location     Type
  4829 ;;                  1    wreg      void 
  4830 ;; Registers used:
  4831 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4832 ;; Tracked objects:
  4833 ;;		On entry : 0/0
  4834 ;;		On exit  : 0/0
  4835 ;;		Unchanged: 0/0
  4836 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4837 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4838 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4839 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4840 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4841 ;;Total ram usage:        4 bytes
  4842 ;; Hardware stack levels used: 1
  4843 ;; Hardware stack levels required when called: 12
  4844 ;; This function calls:
  4845 ;;		_LCD_CMD
  4846 ;; This function is called by:
  4847 ;;		_main
  4848 ;; This function uses a non-reentrant model
  4849 ;;
  4850                           
  4851                           
  4852                           ;psect for function _LCD_Set_Cursor
  4853  03F8                     _LCD_Set_Cursor:
  4854                           
  4855                           ;incstack = 0
  4856                           ; Regs used in _LCD_Set_Cursor: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4857                           ;LCD_Set_Cursor@ROW stored from wreg
  4858  03F8  0020               	movlb	0	; select bank0
  4859  03F9  00D2               	movwf	LCD_Set_Cursor@ROW
  4860  03FA                     l4235:
  4861                           
  4862                           ;I2C_LCD.c: 140: void LCD_Set_Cursor(unsigned char ROW, unsigned char COL);I2C_LCD.c: 14
      +                          1: {;I2C_LCD.c: 142:   switch(ROW)
  4863  03FA  2C13               	goto	l4245
  4864  03FB                     l4237:
  4865                           
  4866                           ;I2C_LCD.c: 145:       LCD_CMD(0xC0 + COL-1);
  4867  03FB  084F               	movf	LCD_Set_Cursor@COL,w
  4868  03FC  3EBF               	addlw	191
  4869  03FD  3186  2621  3183   	fcall	_LCD_CMD
  4870                           
  4871                           ;I2C_LCD.c: 146:       break;
  4872  0400  2C26               	goto	l912
  4873  0401                     l4239:
  4874                           
  4875                           ;I2C_LCD.c: 148:       LCD_CMD(0x94 + COL-1);
  4876  0401  084F               	movf	LCD_Set_Cursor@COL,w
  4877  0402  3E93               	addlw	147
  4878  0403  3186  2621  3183   	fcall	_LCD_CMD
  4879                           
  4880                           ;I2C_LCD.c: 149:       break;
  4881  0406  2C26               	goto	l912
  4882  0407                     l4241:
  4883                           
  4884                           ;I2C_LCD.c: 151:       LCD_CMD(0xD4 + COL-1);
  4885  0407  084F               	movf	LCD_Set_Cursor@COL,w
  4886  0408  3ED3               	addlw	211
  4887  0409  3186  2621  3183   	fcall	_LCD_CMD
  4888                           
  4889                           ;I2C_LCD.c: 152:       break;
  4890  040C  2C26               	goto	l912
  4891  040D                     l4243:
  4892                           
  4893                           ;I2C_LCD.c: 155:       LCD_CMD(0x80 + COL-1);
  4894  040D  084F               	movf	LCD_Set_Cursor@COL,w
  4895  040E  3E7F               	addlw	127
  4896  040F  3186  2621  3183   	fcall	_LCD_CMD
  4897                           
  4898                           ;I2C_LCD.c: 156:   }
  4899  0412  2C26               	goto	l912
  4900  0413                     l4245:
  4901  0413  0852               	movf	LCD_Set_Cursor@ROW,w
  4902  0414  00D0               	movwf	??_LCD_Set_Cursor
  4903  0415  01D1               	clrf	??_LCD_Set_Cursor+1
  4904                           
  4905                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4906                           ; Switch size 1, requested type "simple"
  4907                           ; Number of cases is 1, Range of values is 0 to 0
  4908                           ; switch strategies available:
  4909                           ; Name         Instructions Cycles
  4910                           ; simple_byte            4     3 (average)
  4911                           ; direct_byte            8     6 (fixed)
  4912                           ; jumptable            260     6 (fixed)
  4913                           ;	Chosen strategy is simple_byte
  4914  0416  0851               	movf	??_LCD_Set_Cursor+1,w
  4915  0417  3A00               	xorlw	0	; case 0
  4916  0418  1903               	skipnz
  4917  0419  2C1B               	goto	l4539
  4918  041A  2C0D               	goto	l4243
  4919  041B                     l4539:
  4920                           
  4921                           ; Switch size 1, requested type "simple"
  4922                           ; Number of cases is 3, Range of values is 2 to 4
  4923                           ; switch strategies available:
  4924                           ; Name         Instructions Cycles
  4925                           ; simple_byte           10     6 (average)
  4926                           ; direct_byte           15     9 (fixed)
  4927                           ; jumptable            263     9 (fixed)
  4928                           ;	Chosen strategy is simple_byte
  4929  041B  0850               	movf	??_LCD_Set_Cursor,w
  4930  041C  3A02               	xorlw	2	; case 2
  4931  041D  1903               	skipnz
  4932  041E  2BFB               	goto	l4237
  4933  041F  3A01               	xorlw	1	; case 3
  4934  0420  1903               	skipnz
  4935  0421  2C01               	goto	l4239
  4936  0422  3A07               	xorlw	7	; case 4
  4937  0423  1903               	skipnz
  4938  0424  2C07               	goto	l4241
  4939  0425  2C0D               	goto	l4243
  4940  0426                     l912:
  4941  0426  0008               	return
  4942  0427                     __end_of_LCD_Set_Cursor:
  4943                           
  4944                           	psect	text22
  4945  0165                     __ptext22:	
  4946 ;; *************** function _LCD_Init *****************
  4947 ;; Defined at:
  4948 ;;		line 80 in file "I2C_LCD.c"
  4949 ;; Parameters:    Size  Location     Type
  4950 ;;  I2C_Add         1    wreg     unsigned char 
  4951 ;; Auto vars:     Size  Location     Type
  4952 ;;  I2C_Add         1   11[BANK0 ] unsigned char 
  4953 ;; Return value:  Size  Location     Type
  4954 ;;                  1    wreg      void 
  4955 ;; Registers used:
  4956 ;;		wreg, status,2, status,0, pclath, cstack
  4957 ;; Tracked objects:
  4958 ;;		On entry : 0/0
  4959 ;;		On exit  : 0/0
  4960 ;;		Unchanged: 0/0
  4961 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4962 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4963 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4964 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4965 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4966 ;;Total ram usage:        3 bytes
  4967 ;; Hardware stack levels used: 1
  4968 ;; Hardware stack levels required when called: 12
  4969 ;; This function calls:
  4970 ;;		_IO_Expander_Write
  4971 ;;		_LCD_CMD
  4972 ;; This function is called by:
  4973 ;;		_main
  4974 ;; This function uses a non-reentrant model
  4975 ;;
  4976                           
  4977                           
  4978                           ;psect for function _LCD_Init
  4979  0165                     _LCD_Init:
  4980                           
  4981                           ;incstack = 0
  4982                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  4983                           ;LCD_Init@I2C_Add stored from wreg
  4984  0165  0020               	movlb	0	; select bank0
  4985  0166  00D1               	movwf	LCD_Init@I2C_Add
  4986  0167                     l4209:
  4987                           
  4988                           ;I2C_LCD.c: 80: void LCD_Init(unsigned char I2C_Add);I2C_LCD.c: 81: {;I2C_LCD.c: 82:   i
      +                          2c_add = I2C_Add;
  4989  0167  0851               	movf	LCD_Init@I2C_Add,w
  4990  0168  00CF               	movwf	??_LCD_Init
  4991  0169  084F               	movf	??_LCD_Init,w
  4992  016A  00BE               	movwf	_i2c_add
  4993  016B                     l4211:
  4994                           
  4995                           ;I2C_LCD.c: 83:   IO_Expander_Write(0x00);
  4996  016B  3000               	movlw	0
  4997  016C  3186  264D  3181   	fcall	_IO_Expander_Write
  4998  016F                     l4213:
  4999                           
  5000                           ;I2C_LCD.c: 84:   _delay((unsigned long)((30)*(16000000/4000.0)));
  5001  016F  309C               	movlw	156
  5002  0170  0020               	movlb	0	; select bank0
  5003  0171  00CF               	movwf	??_LCD_Init
  5004  0172  30D7               	movlw	215
  5005  0173                     u1697:
  5006  0173  0B89               	decfsz	9,f
  5007  0174  2973               	goto	u1697
  5008  0175  0BCF               	decfsz	??_LCD_Init,f
  5009  0176  2973               	goto	u1697
  5010                           
  5011                           ;I2C_LCD.c: 85:   LCD_CMD(0x03);
  5012  0177  3003               	movlw	3
  5013  0178  3186  2621  3181   	fcall	_LCD_CMD
  5014  017B                     l4215:
  5015                           
  5016                           ;I2C_LCD.c: 86:   _delay((unsigned long)((5)*(16000000/4000.0)));
  5017  017B  301A               	movlw	26
  5018  017C  0020               	movlb	0	; select bank0
  5019  017D  00CF               	movwf	??_LCD_Init
  5020  017E  30F8               	movlw	248
  5021  017F                     u1707:
  5022  017F  0B89               	decfsz	9,f
  5023  0180  297F               	goto	u1707
  5024  0181  0BCF               	decfsz	??_LCD_Init,f
  5025  0182  297F               	goto	u1707
  5026  0183  0000               	nop
  5027  0184                     l4217:
  5028                           
  5029                           ;I2C_LCD.c: 87:   LCD_CMD(0x03);
  5030  0184  3003               	movlw	3
  5031  0185  3186  2621  3181   	fcall	_LCD_CMD
  5032                           
  5033                           ;I2C_LCD.c: 88:   _delay((unsigned long)((5)*(16000000/4000.0)));
  5034  0188  301A               	movlw	26
  5035  0189  0020               	movlb	0	; select bank0
  5036  018A  00CF               	movwf	??_LCD_Init
  5037  018B  30F8               	movlw	248
  5038  018C                     u1717:
  5039  018C  0B89               	decfsz	9,f
  5040  018D  298C               	goto	u1717
  5041  018E  0BCF               	decfsz	??_LCD_Init,f
  5042  018F  298C               	goto	u1717
  5043  0190  0000               	nop
  5044  0191                     l4219:
  5045                           
  5046                           ;I2C_LCD.c: 89:   LCD_CMD(0x03);
  5047  0191  3003               	movlw	3
  5048  0192  3186  2621  3181   	fcall	_LCD_CMD
  5049  0195                     l4221:
  5050                           
  5051                           ;I2C_LCD.c: 90:   _delay((unsigned long)((5)*(16000000/4000.0)));
  5052  0195  301A               	movlw	26
  5053  0196  0020               	movlb	0	; select bank0
  5054  0197  00CF               	movwf	??_LCD_Init
  5055  0198  30F8               	movlw	248
  5056  0199                     u1727:
  5057  0199  0B89               	decfsz	9,f
  5058  019A  2999               	goto	u1727
  5059  019B  0BCF               	decfsz	??_LCD_Init,f
  5060  019C  2999               	goto	u1727
  5061  019D  0000               	nop
  5062                           
  5063                           ;I2C_LCD.c: 91:   LCD_CMD(0x02);
  5064  019E  3002               	movlw	2
  5065  019F  3186  2621  3181   	fcall	_LCD_CMD
  5066  01A2                     l4223:
  5067                           
  5068                           ;I2C_LCD.c: 92:   _delay((unsigned long)((5)*(16000000/4000.0)));
  5069  01A2  301A               	movlw	26
  5070  01A3  0020               	movlb	0	; select bank0
  5071  01A4  00CF               	movwf	??_LCD_Init
  5072  01A5  30F8               	movlw	248
  5073  01A6                     u1737:
  5074  01A6  0B89               	decfsz	9,f
  5075  01A7  29A6               	goto	u1737
  5076  01A8  0BCF               	decfsz	??_LCD_Init,f
  5077  01A9  29A6               	goto	u1737
  5078  01AA  0000               	nop
  5079  01AB                     l4225:
  5080                           
  5081                           ;I2C_LCD.c: 93:   LCD_CMD(0x20 | (2 << 2));
  5082  01AB  3028               	movlw	40
  5083  01AC  3186  2621  3181   	fcall	_LCD_CMD
  5084                           
  5085                           ;I2C_LCD.c: 94:   _delay((unsigned long)((50)*(16000000/4000.0)));
  5086  01AF  3002               	movlw	2
  5087  01B0  0020               	movlb	0	; select bank0
  5088  01B1  00D0               	movwf	??_LCD_Init+1
  5089  01B2  3004               	movlw	4
  5090  01B3  00CF               	movwf	??_LCD_Init
  5091  01B4  30BA               	movlw	186
  5092  01B5                     u1747:
  5093  01B5  0B89               	decfsz	9,f
  5094  01B6  29B5               	goto	u1747
  5095  01B7  0BCF               	decfsz	??_LCD_Init,f
  5096  01B8  29B5               	goto	u1747
  5097  01B9  0BD0               	decfsz	??_LCD_Init+1,f
  5098  01BA  29B5               	goto	u1747
  5099  01BB  0000               	nop
  5100  01BC                     l4227:
  5101                           
  5102                           ;I2C_LCD.c: 95:   LCD_CMD(0x0C);
  5103  01BC  300C               	movlw	12
  5104  01BD  3186  2621  3181   	fcall	_LCD_CMD
  5105  01C0                     l4229:
  5106                           
  5107                           ;I2C_LCD.c: 96:   _delay((unsigned long)((50)*(16000000/4000.0)));
  5108  01C0  3002               	movlw	2
  5109  01C1  0020               	movlb	0	; select bank0
  5110  01C2  00D0               	movwf	??_LCD_Init+1
  5111  01C3  3004               	movlw	4
  5112  01C4  00CF               	movwf	??_LCD_Init
  5113  01C5  30BA               	movlw	186
  5114  01C6                     u1757:
  5115  01C6  0B89               	decfsz	9,f
  5116  01C7  29C6               	goto	u1757
  5117  01C8  0BCF               	decfsz	??_LCD_Init,f
  5118  01C9  29C6               	goto	u1757
  5119  01CA  0BD0               	decfsz	??_LCD_Init+1,f
  5120  01CB  29C6               	goto	u1757
  5121  01CC  0000               	nop
  5122                           
  5123                           ;I2C_LCD.c: 97:   LCD_CMD(0x01);
  5124  01CD  3001               	movlw	1
  5125  01CE  3186  2621  3181   	fcall	_LCD_CMD
  5126  01D1                     l4231:
  5127                           
  5128                           ;I2C_LCD.c: 98:   _delay((unsigned long)((50)*(16000000/4000.0)));
  5129  01D1  3002               	movlw	2
  5130  01D2  0020               	movlb	0	; select bank0
  5131  01D3  00D0               	movwf	??_LCD_Init+1
  5132  01D4  3004               	movlw	4
  5133  01D5  00CF               	movwf	??_LCD_Init
  5134  01D6  30BA               	movlw	186
  5135  01D7                     u1767:
  5136  01D7  0B89               	decfsz	9,f
  5137  01D8  29D7               	goto	u1767
  5138  01D9  0BCF               	decfsz	??_LCD_Init,f
  5139  01DA  29D7               	goto	u1767
  5140  01DB  0BD0               	decfsz	??_LCD_Init+1,f
  5141  01DC  29D7               	goto	u1767
  5142  01DD  0000               	nop
  5143  01DE                     l4233:
  5144                           
  5145                           ;I2C_LCD.c: 99:   LCD_CMD(0x04 | 0x02);
  5146  01DE  3006               	movlw	6
  5147  01DF  3186  2621  3181   	fcall	_LCD_CMD
  5148                           
  5149                           ;I2C_LCD.c: 100:   _delay((unsigned long)((50)*(16000000/4000.0)));
  5150  01E2  3002               	movlw	2
  5151  01E3  0020               	movlb	0	; select bank0
  5152  01E4  00D0               	movwf	??_LCD_Init+1
  5153  01E5  3004               	movlw	4
  5154  01E6  00CF               	movwf	??_LCD_Init
  5155  01E7  30BA               	movlw	186
  5156  01E8                     u1777:
  5157  01E8  0B89               	decfsz	9,f
  5158  01E9  29E8               	goto	u1777
  5159  01EA  0BCF               	decfsz	??_LCD_Init,f
  5160  01EB  29E8               	goto	u1777
  5161  01EC  0BD0               	decfsz	??_LCD_Init+1,f
  5162  01ED  29E8               	goto	u1777
  5163  01EE  0000               	nop
  5164  01EF                     l885:
  5165  01EF  0008               	return
  5166  01F0                     __end_of_LCD_Init:
  5167                           
  5168                           	psect	text23
  5169  0621                     __ptext23:	
  5170 ;; *************** function _LCD_CMD *****************
  5171 ;; Defined at:
  5172 ;;		line 120 in file "I2C_LCD.c"
  5173 ;; Parameters:    Size  Location     Type
  5174 ;;  CMD             1    wreg     unsigned char 
  5175 ;; Auto vars:     Size  Location     Type
  5176 ;;  CMD             1    8[BANK0 ] unsigned char 
  5177 ;; Return value:  Size  Location     Type
  5178 ;;                  1    wreg      void 
  5179 ;; Registers used:
  5180 ;;		wreg, status,2, status,0, pclath, cstack
  5181 ;; Tracked objects:
  5182 ;;		On entry : 0/0
  5183 ;;		On exit  : 0/0
  5184 ;;		Unchanged: 0/0
  5185 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5186 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5187 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5188 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5189 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5190 ;;Total ram usage:        2 bytes
  5191 ;; Hardware stack levels used: 1
  5192 ;; Hardware stack levels required when called: 11
  5193 ;; This function calls:
  5194 ;;		_LCD_Write_4Bit
  5195 ;; This function is called by:
  5196 ;;		_LCD_Init
  5197 ;;		_LCD_Set_Cursor
  5198 ;;		_LCD_SL
  5199 ;;		_LCD_SR
  5200 ;;		_LCD_Clear
  5201 ;; This function uses a non-reentrant model
  5202 ;;
  5203                           
  5204                           
  5205                           ;psect for function _LCD_CMD
  5206  0621                     _LCD_CMD:
  5207                           
  5208                           ;incstack = 0
  5209                           ; Regs used in _LCD_CMD: [wreg+status,2+status,0+pclath+cstack]
  5210                           ;LCD_CMD@CMD stored from wreg
  5211  0621  0020               	movlb	0	; select bank0
  5212  0622  00CE               	movwf	LCD_CMD@CMD
  5213  0623                     l4141:
  5214                           
  5215                           ;I2C_LCD.c: 120: void LCD_CMD(unsigned char CMD);I2C_LCD.c: 121: {;I2C_LCD.c: 122:   RS 
      +                          = 0;
  5216  0623  01FD               	clrf	_RS
  5217  0624                     l4143:
  5218                           
  5219                           ;I2C_LCD.c: 123:   LCD_Write_4Bit(CMD & 0xF0);
  5220  0624  084E               	movf	LCD_CMD@CMD,w
  5221  0625  39F0               	andlw	240
  5222  0626  3186  2637  3186   	fcall	_LCD_Write_4Bit
  5223  0629                     l4145:
  5224                           
  5225                           ;I2C_LCD.c: 124:   LCD_Write_4Bit((CMD << 4) & 0xF0);
  5226  0629  0020               	movlb	0	; select bank0
  5227  062A  084E               	movf	LCD_CMD@CMD,w
  5228  062B  00CD               	movwf	??_LCD_CMD
  5229  062C  3003               	movlw	3
  5230  062D                     u1515:
  5231  062D  35CD               	lslf	??_LCD_CMD,f
  5232  062E  3EFF               	addlw	-1
  5233  062F  1D03               	skipz
  5234  0630  2E2D               	goto	u1515
  5235  0631  354D               	lslf	??_LCD_CMD,w
  5236  0632  39F0               	andlw	240
  5237  0633  3186  2637  3186   	fcall	_LCD_Write_4Bit
  5238  0636                     l894:
  5239  0636  0008               	return
  5240  0637                     __end_of_LCD_CMD:
  5241                           
  5242                           	psect	text24
  5243  0637                     __ptext24:	
  5244 ;; *************** function _LCD_Write_4Bit *****************
  5245 ;; Defined at:
  5246 ;;		line 111 in file "I2C_LCD.c"
  5247 ;; Parameters:    Size  Location     Type
  5248 ;;  Nibble          1    wreg     unsigned char 
  5249 ;; Auto vars:     Size  Location     Type
  5250 ;;  Nibble          1    6[BANK0 ] unsigned char 
  5251 ;; Return value:  Size  Location     Type
  5252 ;;                  1    wreg      void 
  5253 ;; Registers used:
  5254 ;;		wreg, status,2, status,0, pclath, cstack
  5255 ;; Tracked objects:
  5256 ;;		On entry : 0/0
  5257 ;;		On exit  : 0/0
  5258 ;;		Unchanged: 0/0
  5259 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5260 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5261 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5262 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5263 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5264 ;;Total ram usage:        2 bytes
  5265 ;; Hardware stack levels used: 1
  5266 ;; Hardware stack levels required when called: 10
  5267 ;; This function calls:
  5268 ;;		_IO_Expander_Write
  5269 ;; This function is called by:
  5270 ;;		_LCD_CMD
  5271 ;;		_LCD_Write_Char
  5272 ;; This function uses a non-reentrant model
  5273 ;;
  5274                           
  5275                           
  5276                           ;psect for function _LCD_Write_4Bit
  5277  0637                     _LCD_Write_4Bit:
  5278                           
  5279                           ;incstack = 0
  5280                           ; Regs used in _LCD_Write_4Bit: [wreg+status,2+status,0+pclath+cstack]
  5281                           ;LCD_Write_4Bit@Nibble stored from wreg
  5282  0637  0020               	movlb	0	; select bank0
  5283  0638  00CC               	movwf	LCD_Write_4Bit@Nibble
  5284  0639                     l4021:
  5285                           
  5286                           ;I2C_LCD.c: 111: void LCD_Write_4Bit(unsigned char Nibble);I2C_LCD.c: 112: {;I2C_LCD.c: 
      +                          114:   Nibble |= RS;
  5287  0639  087D               	movf	_RS,w
  5288  063A  00CB               	movwf	??_LCD_Write_4Bit
  5289  063B  084B               	movf	??_LCD_Write_4Bit,w
  5290  063C  04CC               	iorwf	LCD_Write_4Bit@Nibble,f
  5291  063D                     l4023:
  5292                           
  5293                           ;I2C_LCD.c: 115:   IO_Expander_Write(Nibble | 0x04);
  5294  063D  084C               	movf	LCD_Write_4Bit@Nibble,w
  5295  063E  3804               	iorlw	4
  5296  063F  3186  264D  3186   	fcall	_IO_Expander_Write
  5297  0642                     l4025:
  5298                           
  5299                           ;I2C_LCD.c: 116:   IO_Expander_Write(Nibble & 0xFB);
  5300  0642  0020               	movlb	0	; select bank0
  5301  0643  084C               	movf	LCD_Write_4Bit@Nibble,w
  5302  0644  39FB               	andlw	251
  5303  0645  3186  264D  3186   	fcall	_IO_Expander_Write
  5304                           
  5305                           ;I2C_LCD.c: 117:   _delay((unsigned long)((50)*(16000000/4000000.0)));
  5306  0648  3042               	movlw	66
  5307  0649                     u1787:
  5308  0649  0B89               	decfsz	9,f
  5309  064A  2E49               	goto	u1787
  5310  064B  3200               	nop2
  5311  064C                     l891:
  5312  064C  0008               	return
  5313  064D                     __end_of_LCD_Write_4Bit:
  5314                           
  5315                           	psect	text25
  5316  064D                     __ptext25:	
  5317 ;; *************** function _IO_Expander_Write *****************
  5318 ;; Defined at:
  5319 ;;		line 103 in file "I2C_LCD.c"
  5320 ;; Parameters:    Size  Location     Type
  5321 ;;  Data            1    wreg     unsigned char 
  5322 ;; Auto vars:     Size  Location     Type
  5323 ;;  Data            1    4[BANK0 ] unsigned char 
  5324 ;; Return value:  Size  Location     Type
  5325 ;;                  1    wreg      void 
  5326 ;; Registers used:
  5327 ;;		wreg, status,2, status,0, pclath, cstack
  5328 ;; Tracked objects:
  5329 ;;		On entry : 0/0
  5330 ;;		On exit  : 0/0
  5331 ;;		Unchanged: 0/0
  5332 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5333 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5334 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5335 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5336 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5337 ;;Total ram usage:        1 bytes
  5338 ;; Hardware stack levels used: 1
  5339 ;; Hardware stack levels required when called: 9
  5340 ;; This function calls:
  5341 ;;		_I2C_Master_Start
  5342 ;;		_I2C_Master_Stop
  5343 ;;		_I2C_Master_Write
  5344 ;; This function is called by:
  5345 ;;		_LCD_Init
  5346 ;;		_LCD_Write_4Bit
  5347 ;;		_Backlight
  5348 ;;		_noBacklight
  5349 ;; This function uses a non-reentrant model
  5350 ;;
  5351                           
  5352                           
  5353                           ;psect for function _IO_Expander_Write
  5354  064D                     _IO_Expander_Write:
  5355                           
  5356                           ;incstack = 0
  5357                           ; Regs used in _IO_Expander_Write: [wreg+status,2+status,0+pclath+cstack]
  5358                           ;IO_Expander_Write@Data stored from wreg
  5359  064D  0020               	movlb	0	; select bank0
  5360  064E  00CA               	movwf	IO_Expander_Write@Data
  5361  064F                     l3995:
  5362                           
  5363                           ;I2C_LCD.c: 103: void IO_Expander_Write(unsigned char Data);I2C_LCD.c: 104: {;I2C_LCD.c:
      +                           105:   I2C_Master_Start();
  5364  064F  3187  27C3  3186   	fcall	_I2C_Master_Start
  5365                           
  5366                           ;I2C_LCD.c: 106:   I2C_Master_Write(i2c_add);
  5367  0652  0020               	movlb	0	; select bank0
  5368  0653  083E               	movf	_i2c_add,w
  5369  0654  3186  26EA  3186   	fcall	_I2C_Master_Write
  5370                           
  5371                           ;I2C_LCD.c: 107:   I2C_Master_Write(Data | BackLight_State);
  5372  0657  0020               	movlb	0	; select bank0
  5373  0658  084A               	movf	IO_Expander_Write@Data,w
  5374  0659  046A               	iorwf	_BackLight_State,w
  5375  065A  3186  26EA  3186   	fcall	_I2C_Master_Write
  5376                           
  5377                           ;I2C_LCD.c: 108:   I2C_Master_Stop();
  5378  065D  3187  27BD  3186   	fcall	_I2C_Master_Stop
  5379  0660                     l888:
  5380  0660  0008               	return
  5381  0661                     __end_of_IO_Expander_Write:
  5382                           
  5383                           	psect	text26
  5384  06EA                     __ptext26:	
  5385 ;; *************** function _I2C_Master_Write *****************
  5386 ;; Defined at:
  5387 ;;		line 56 in file "I2C_LCD.c"
  5388 ;; Parameters:    Size  Location     Type
  5389 ;;  data            1    wreg     unsigned char 
  5390 ;; Auto vars:     Size  Location     Type
  5391 ;;  data            1    3[BANK0 ] unsigned char 
  5392 ;; Return value:  Size  Location     Type
  5393 ;;                  1    wreg      unsigned char 
  5394 ;; Registers used:
  5395 ;;		wreg, status,2, status,0, pclath, cstack
  5396 ;; Tracked objects:
  5397 ;;		On entry : 0/0
  5398 ;;		On exit  : 0/0
  5399 ;;		Unchanged: 0/0
  5400 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5401 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5402 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5403 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5404 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5405 ;;Total ram usage:        1 bytes
  5406 ;; Hardware stack levels used: 1
  5407 ;; Hardware stack levels required when called: 8
  5408 ;; This function calls:
  5409 ;;		_I2C_Master_Wait
  5410 ;; This function is called by:
  5411 ;;		_IO_Expander_Write
  5412 ;; This function uses a non-reentrant model
  5413 ;;
  5414                           
  5415                           
  5416                           ;psect for function _I2C_Master_Write
  5417  06EA                     _I2C_Master_Write:
  5418                           
  5419                           ;incstack = 0
  5420                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  5421                           ;I2C_Master_Write@data stored from wreg
  5422  06EA  0020               	movlb	0	; select bank0
  5423  06EB  00C9               	movwf	I2C_Master_Write@data
  5424  06EC                     l3991:
  5425                           
  5426                           ;I2C_LCD.c: 56: unsigned char I2C_Master_Write(unsigned char data);I2C_LCD.c: 57: {;I2C_
      +                          LCD.c: 58:     I2C_Master_Wait();
  5427  06EC  3187  2740  3186   	fcall	_I2C_Master_Wait
  5428  06EF                     l3993:
  5429                           
  5430                           ;I2C_LCD.c: 59:     SSPBUF = data;
  5431  06EF  0020               	movlb	0	; select bank0
  5432  06F0  0849               	movf	I2C_Master_Write@data,w
  5433  06F1  0024               	movlb	4	; select bank4
  5434  06F2  0091               	movwf	17	;volatile
  5435  06F3                     l873:	
  5436                           ;I2C_LCD.c: 60:     while(!SSPIF);
  5437                           
  5438  06F3  0020               	movlb	0	; select bank0
  5439  06F4  1D91               	btfss	17,3	;volatile
  5440  06F5  2EF7               	goto	u1431
  5441  06F6  2EF8               	goto	u1430
  5442  06F7                     u1431:
  5443  06F7  2EF3               	goto	l873
  5444  06F8                     u1430:
  5445  06F8                     l875:
  5446                           
  5447                           ;I2C_LCD.c: 61:  SSPIF = 0;
  5448  06F8  1191               	bcf	17,3	;volatile
  5449  06F9                     l876:	
  5450                           ;I2C_LCD.c: 62:     return ACKSTAT;;	Return value of _I2C_Master_Write is never used
  5451                           
  5452  06F9  0008               	return
  5453  06FA                     __end_of_I2C_Master_Write:
  5454                           
  5455                           	psect	text27
  5456  07BD                     __ptext27:	
  5457 ;; *************** function _I2C_Master_Stop *****************
  5458 ;; Defined at:
  5459 ;;		line 36 in file "I2C_LCD.c"
  5460 ;; Parameters:    Size  Location     Type
  5461 ;;		None
  5462 ;; Auto vars:     Size  Location     Type
  5463 ;;		None
  5464 ;; Return value:  Size  Location     Type
  5465 ;;                  1    wreg      void 
  5466 ;; Registers used:
  5467 ;;		wreg, status,2, status,0, pclath, cstack
  5468 ;; Tracked objects:
  5469 ;;		On entry : 0/0
  5470 ;;		On exit  : 0/0
  5471 ;;		Unchanged: 0/0
  5472 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5473 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5474 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5475 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5476 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5477 ;;Total ram usage:        0 bytes
  5478 ;; Hardware stack levels used: 1
  5479 ;; Hardware stack levels required when called: 8
  5480 ;; This function calls:
  5481 ;;		_I2C_Master_Wait
  5482 ;; This function is called by:
  5483 ;;		_IO_Expander_Write
  5484 ;; This function uses a non-reentrant model
  5485 ;;
  5486                           
  5487                           
  5488                           ;psect for function _I2C_Master_Stop
  5489  07BD                     _I2C_Master_Stop:
  5490  07BD                     l3987:	
  5491                           ;incstack = 0
  5492                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  5493                           
  5494                           
  5495                           ;I2C_LCD.c: 38:     I2C_Master_Wait();
  5496  07BD  3187  2740  3187   	fcall	_I2C_Master_Wait
  5497  07C0                     l3989:
  5498                           
  5499                           ;I2C_LCD.c: 39:     PEN = 1;
  5500  07C0  0024               	movlb	4	; select bank4
  5501  07C1  1516               	bsf	22,2	;volatile
  5502  07C2                     l864:
  5503  07C2  0008               	return
  5504  07C3                     __end_of_I2C_Master_Stop:
  5505                           
  5506                           	psect	text28
  5507  07C3                     __ptext28:	
  5508 ;; *************** function _I2C_Master_Start *****************
  5509 ;; Defined at:
  5510 ;;		line 24 in file "I2C_LCD.c"
  5511 ;; Parameters:    Size  Location     Type
  5512 ;;		None
  5513 ;; Auto vars:     Size  Location     Type
  5514 ;;		None
  5515 ;; Return value:  Size  Location     Type
  5516 ;;                  1    wreg      void 
  5517 ;; Registers used:
  5518 ;;		wreg, status,2, status,0, pclath, cstack
  5519 ;; Tracked objects:
  5520 ;;		On entry : 0/0
  5521 ;;		On exit  : 0/0
  5522 ;;		Unchanged: 0/0
  5523 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5524 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5525 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5526 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5527 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5528 ;;Total ram usage:        0 bytes
  5529 ;; Hardware stack levels used: 1
  5530 ;; Hardware stack levels required when called: 8
  5531 ;; This function calls:
  5532 ;;		_I2C_Master_Wait
  5533 ;; This function is called by:
  5534 ;;		_IO_Expander_Write
  5535 ;; This function uses a non-reentrant model
  5536 ;;
  5537                           
  5538                           
  5539                           ;psect for function _I2C_Master_Start
  5540  07C3                     _I2C_Master_Start:
  5541  07C3                     l3983:	
  5542                           ;incstack = 0
  5543                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  5544                           
  5545                           
  5546                           ;I2C_LCD.c: 26:     I2C_Master_Wait();
  5547  07C3  3187  2740  3187   	fcall	_I2C_Master_Wait
  5548  07C6                     l3985:
  5549                           
  5550                           ;I2C_LCD.c: 27:     SEN = 1;
  5551  07C6  0024               	movlb	4	; select bank4
  5552  07C7  1416               	bsf	22,0	;volatile
  5553  07C8                     l858:
  5554  07C8  0008               	return
  5555  07C9                     __end_of_I2C_Master_Start:
  5556                           
  5557                           	psect	text29
  5558  0740                     __ptext29:	
  5559 ;; *************** function _I2C_Master_Wait *****************
  5560 ;; Defined at:
  5561 ;;		line 19 in file "I2C_LCD.c"
  5562 ;; Parameters:    Size  Location     Type
  5563 ;;		None
  5564 ;; Auto vars:     Size  Location     Type
  5565 ;;		None
  5566 ;; Return value:  Size  Location     Type
  5567 ;;                  1    wreg      void 
  5568 ;; Registers used:
  5569 ;;		wreg, status,2
  5570 ;; Tracked objects:
  5571 ;;		On entry : 0/0
  5572 ;;		On exit  : 0/0
  5573 ;;		Unchanged: 0/0
  5574 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5575 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5576 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5577 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5578 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5579 ;;Total ram usage:        0 bytes
  5580 ;; Hardware stack levels used: 1
  5581 ;; Hardware stack levels required when called: 7
  5582 ;; This function calls:
  5583 ;;		Nothing
  5584 ;; This function is called by:
  5585 ;;		_I2C_Master_Start
  5586 ;;		_I2C_Master_Stop
  5587 ;;		_I2C_Master_Write
  5588 ;;		_I2C_Master_RepeatedStart
  5589 ;;		_I2C_ACK
  5590 ;;		_I2C_NACK
  5591 ;;		_I2C_Read_Byte
  5592 ;; This function uses a non-reentrant model
  5593 ;;
  5594                           
  5595                           
  5596                           ;psect for function _I2C_Master_Wait
  5597  0740                     _I2C_Master_Wait:
  5598  0740                     l3977:	
  5599                           ;incstack = 0
  5600                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  5601                           
  5602  0740                     l852:	
  5603                           ;I2C_LCD.c: 21:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  5604                           
  5605  0740  0024               	movlb	4	; select bank4
  5606  0741  1914               	btfsc	20,2	;volatile
  5607  0742  2F44               	goto	u1411
  5608  0743  2F45               	goto	u1410
  5609  0744                     u1411:
  5610  0744  2F40               	goto	l852
  5611  0745                     u1410:
  5612  0745                     l3979:
  5613  0745  0816               	movf	22,w	;volatile
  5614  0746  391F               	andlw	31
  5615  0747  1D03               	btfss	3,2
  5616  0748  2F4A               	goto	u1421
  5617  0749  2F4B               	goto	u1420
  5618  074A                     u1421:
  5619  074A  2F40               	goto	l852
  5620  074B                     u1420:
  5621  074B                     l855:
  5622  074B  0008               	return
  5623  074C                     __end_of_I2C_Master_Wait:
  5624                           
  5625                           	psect	text30
  5626  074C                     __ptext30:	
  5627 ;; *************** function _I2C_Master_Init *****************
  5628 ;; Defined at:
  5629 ;;		line 9 in file "I2C_LCD.c"
  5630 ;; Parameters:    Size  Location     Type
  5631 ;;		None
  5632 ;; Auto vars:     Size  Location     Type
  5633 ;;		None
  5634 ;; Return value:  Size  Location     Type
  5635 ;;                  1    wreg      void 
  5636 ;; Registers used:
  5637 ;;		wreg, status,2
  5638 ;; Tracked objects:
  5639 ;;		On entry : 0/0
  5640 ;;		On exit  : 0/0
  5641 ;;		Unchanged: 0/0
  5642 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5643 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5644 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5645 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5646 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5647 ;;Total ram usage:        0 bytes
  5648 ;; Hardware stack levels used: 1
  5649 ;; Hardware stack levels required when called: 7
  5650 ;; This function calls:
  5651 ;;		Nothing
  5652 ;; This function is called by:
  5653 ;;		_main
  5654 ;; This function uses a non-reentrant model
  5655 ;;
  5656                           
  5657                           
  5658                           ;psect for function _I2C_Master_Init
  5659  074C                     _I2C_Master_Init:
  5660  074C                     l4199:	
  5661                           ;incstack = 0
  5662                           ; Regs used in _I2C_Master_Init: [wreg+status,2]
  5663                           
  5664                           
  5665                           ;I2C_LCD.c: 11:   SSPCON = 0x28;
  5666  074C  3028               	movlw	40
  5667  074D  0024               	movlb	4	; select bank4
  5668  074E  0095               	movwf	21	;volatile
  5669  074F                     l4201:
  5670                           
  5671                           ;I2C_LCD.c: 12:   SSPCON2 = 0x00;
  5672  074F  0196               	clrf	22	;volatile
  5673  0750                     l4203:
  5674                           
  5675                           ;I2C_LCD.c: 13:   SSPSTAT = 0x00;
  5676  0750  0194               	clrf	20	;volatile
  5677                           
  5678                           ;I2C_LCD.c: 14:   SSPADD = ((16000000/4)/100000) - 1;
  5679  0751  3027               	movlw	39
  5680  0752  0092               	movwf	18	;volatile
  5681  0753                     l4205:
  5682                           
  5683                           ;I2C_LCD.c: 15:   TRISC3 = 1;
  5684  0753  0021               	movlb	1	; select bank1
  5685  0754  158E               	bsf	14,3	;volatile
  5686  0755                     l4207:
  5687                           
  5688                           ;I2C_LCD.c: 16:   TRISC4 = 1;
  5689  0755  160E               	bsf	14,4	;volatile
  5690  0756                     l849:
  5691  0756  0008               	return
  5692  0757                     __end_of_I2C_Master_Init:
  5693                           
  5694                           	psect	text31
  5695  04DB                     __ptext31:	
  5696 ;; *************** function _EUSART_Read *****************
  5697 ;; Defined at:
  5698 ;;		line 151 in file "mcc_generated_files/eusart.c"
  5699 ;; Parameters:    Size  Location     Type
  5700 ;;		None
  5701 ;; Auto vars:     Size  Location     Type
  5702 ;;  readValue       1    4[BANK0 ] unsigned char 
  5703 ;; Return value:  Size  Location     Type
  5704 ;;                  1    wreg      unsigned char 
  5705 ;; Registers used:
  5706 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5707 ;; Tracked objects:
  5708 ;;		On entry : 0/0
  5709 ;;		On exit  : 0/0
  5710 ;;		Unchanged: 0/0
  5711 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5712 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5713 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5714 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5715 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5716 ;;Total ram usage:        2 bytes
  5717 ;; Hardware stack levels used: 1
  5718 ;; Hardware stack levels required when called: 7
  5719 ;; This function calls:
  5720 ;;		Nothing
  5721 ;; This function is called by:
  5722 ;;		_main
  5723 ;;		_getch
  5724 ;; This function uses a non-reentrant model
  5725 ;;
  5726                           
  5727                           
  5728                           ;psect for function _EUSART_Read
  5729  04DB                     _EUSART_Read:
  5730  04DB                     l4177:	
  5731                           ;incstack = 0
  5732                           ; Regs used in _EUSART_Read: [wreg+fsr1l+fsr1h+status,2+status,0]
  5733                           
  5734  04DB                     l4179:	
  5735                           ;mcc_generated_files/eusart.c: 155:     while(0 == eusartRxCount)
  5736                           
  5737                           
  5738                           ;mcc_generated_files/eusart.c: 155:     while(0 == eusartRxCount)
  5739  04DB  0020               	movlb	0	; select bank0
  5740  04DC  0840               	movf	_eusartRxCount,w	;volatile
  5741  04DD  1903               	btfsc	3,2
  5742  04DE  2CE0               	goto	u1551
  5743  04DF  2CE1               	goto	u1550
  5744  04E0                     u1551:
  5745  04E0  2CDB               	goto	l4179
  5746  04E1                     u1550:
  5747  04E1                     l4181:
  5748                           
  5749                           ;mcc_generated_files/eusart.c: 159:     eusartRxLastError = eusartRxStatusBuffer[eusartR
      +                          xTail];
  5750  04E1  0841               	movf	_eusartRxTail,w	;volatile
  5751  04E2  3E20               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  5752  04E3  0086               	movwf	6
  5753  04E4  0187               	clrf	7
  5754  04E5  0801               	movf	1,w
  5755  04E6  00C9               	movwf	??_EUSART_Read
  5756  04E7  0849               	movf	??_EUSART_Read,w
  5757  04E8  00BF               	movwf	_eusartRxLastError	;volatile
  5758                           
  5759                           ;mcc_generated_files/eusart.c: 161:     readValue = eusartRxBuffer[eusartRxTail++];
  5760  04E9  0841               	movf	_eusartRxTail,w
  5761  04EA  3EDD               	addlw	(low (_eusartRxBuffer| 0))& (0+255)
  5762  04EB  0086               	movwf	6
  5763  04EC  0187               	clrf	7
  5764  04ED  0801               	movf	1,w
  5765  04EE  00C9               	movwf	??_EUSART_Read
  5766  04EF  0849               	movf	??_EUSART_Read,w
  5767  04F0  00CA               	movwf	EUSART_Read@readValue
  5768  04F1                     l4183:
  5769  04F1  3001               	movlw	1
  5770  04F2  00C9               	movwf	??_EUSART_Read
  5771  04F3  0849               	movf	??_EUSART_Read,w
  5772  04F4  07C1               	addwf	_eusartRxTail,f	;volatile
  5773  04F5                     l4185:
  5774                           
  5775                           ;mcc_generated_files/eusart.c: 162:     if(sizeof(eusartRxBuffer) <= eusartRxTail)
  5776  04F5  3008               	movlw	8
  5777  04F6  0241               	subwf	_eusartRxTail,w	;volatile
  5778  04F7  1C03               	skipc
  5779  04F8  2CFA               	goto	u1561
  5780  04F9  2CFB               	goto	u1560
  5781  04FA                     u1561:
  5782  04FA  2CFC               	goto	l4189
  5783  04FB                     u1560:
  5784  04FB                     l4187:
  5785                           
  5786                           ;mcc_generated_files/eusart.c: 163:     {;mcc_generated_files/eusart.c: 164:         eus
      +                          artRxTail = 0;
  5787  04FB  01C1               	clrf	_eusartRxTail	;volatile
  5788  04FC                     l4189:
  5789                           
  5790                           ;mcc_generated_files/eusart.c: 166:     PIE1bits.RCIE = 0;
  5791  04FC  0021               	movlb	1	; select bank1
  5792  04FD  1291               	bcf	17,5	;volatile
  5793  04FE                     l4191:
  5794                           
  5795                           ;mcc_generated_files/eusart.c: 167:     eusartRxCount--;
  5796  04FE  3001               	movlw	1
  5797  04FF  0020               	movlb	0	; select bank0
  5798  0500  02C0               	subwf	_eusartRxCount,f	;volatile
  5799  0501                     l4193:
  5800                           
  5801                           ;mcc_generated_files/eusart.c: 168:     PIE1bits.RCIE = 1;
  5802  0501  0021               	movlb	1	; select bank1
  5803  0502  1691               	bsf	17,5	;volatile
  5804  0503                     l4195:
  5805                           
  5806                           ;mcc_generated_files/eusart.c: 170:     return readValue;
  5807  0503  0020               	movlb	0	; select bank0
  5808  0504  084A               	movf	EUSART_Read@readValue,w
  5809  0505                     l314:
  5810  0505  0008               	return
  5811  0506                     __end_of_EUSART_Read:
  5812                           
  5813                           	psect	text32
  5814  0598                     __ptext32:	
  5815 ;; *************** function _ADC_GetConversion *****************
  5816 ;; Defined at:
  5817 ;;		line 112 in file "mcc_generated_files/adc.c"
  5818 ;; Parameters:    Size  Location     Type
  5819 ;;  channel         1    wreg     enum E2947
  5820 ;; Auto vars:     Size  Location     Type
  5821 ;;  channel         1    6[BANK0 ] enum E2947
  5822 ;; Return value:  Size  Location     Type
  5823 ;;                  2    3[BANK0 ] unsigned short 
  5824 ;; Registers used:
  5825 ;;		wreg, status,2, status,0
  5826 ;; Tracked objects:
  5827 ;;		On entry : 0/0
  5828 ;;		On exit  : 0/0
  5829 ;;		Unchanged: 0/0
  5830 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5831 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5832 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5833 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5834 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5835 ;;Total ram usage:        4 bytes
  5836 ;; Hardware stack levels used: 1
  5837 ;; Hardware stack levels required when called: 7
  5838 ;; This function calls:
  5839 ;;		Nothing
  5840 ;; This function is called by:
  5841 ;;		_main
  5842 ;; This function uses a non-reentrant model
  5843 ;;
  5844                           
  5845                           
  5846                           ;psect for function _ADC_GetConversion
  5847  0598                     _ADC_GetConversion:
  5848                           
  5849                           ;incstack = 0
  5850                           ; Regs used in _ADC_GetConversion: [wreg+status,2+status,0]
  5851                           ;ADC_GetConversion@channel stored from wreg
  5852  0598  0020               	movlb	0	; select bank0
  5853  0599  00CC               	movwf	ADC_GetConversion@channel
  5854  059A                     l4165:
  5855                           
  5856                           ;mcc_generated_files/adc.c: 112: adc_result_t ADC_GetConversion(adc_channel_t channel);m
      +                          cc_generated_files/adc.c: 113: {;mcc_generated_files/adc.c: 115:     ADCON0bits.CHS = ch
      +                          annel;
  5857  059A  084C               	movf	ADC_GetConversion@channel,w
  5858  059B  00CB               	movwf	??_ADC_GetConversion
  5859  059C  0DCB               	rlf	??_ADC_GetConversion,f
  5860  059D  0DCB               	rlf	??_ADC_GetConversion,f
  5861  059E  0021               	movlb	1	; select bank1
  5862  059F  081D               	movf	29,w	;volatile
  5863  05A0  0020               	movlb	0	; select bank0
  5864  05A1  064B               	xorwf	??_ADC_GetConversion,w
  5865  05A2  3983               	andlw	-125
  5866  05A3  064B               	xorwf	??_ADC_GetConversion,w
  5867  05A4  0021               	movlb	1	; select bank1
  5868  05A5  009D               	movwf	29	;volatile
  5869  05A6                     l4167:
  5870                           
  5871                           ;mcc_generated_files/adc.c: 118:     ADCON0bits.ADON = 1;
  5872  05A6  141D               	bsf	29,0	;volatile
  5873  05A7                     l4169:
  5874                           
  5875                           ;mcc_generated_files/adc.c: 121:     _delay((unsigned long)((5)*(32000000/4000000.0)));
  5876  05A7  300D               	movlw	13
  5877  05A8                     u1797:
  5878  05A8  0B89               	decfsz	9,f
  5879  05A9  2DA8               	goto	u1797
  5880  05AA  0000               	nop
  5881  05AB                     l4171:
  5882                           
  5883                           ;mcc_generated_files/adc.c: 124:     ADCON0bits.GO_nDONE = 1;
  5884  05AB  0021               	movlb	1	; select bank1
  5885  05AC  149D               	bsf	29,1	;volatile
  5886  05AD                     l214:	
  5887                           ;mcc_generated_files/adc.c: 128:     {;mcc_generated_files/adc.c: 129:     }
  5888                           
  5889                           
  5890                           ;mcc_generated_files/adc.c: 127:     while (ADCON0bits.GO_nDONE)
  5891  05AD  189D               	btfsc	29,1	;volatile
  5892  05AE  2DB0               	goto	u1541
  5893  05AF  2DB1               	goto	u1540
  5894  05B0                     u1541:
  5895  05B0  2DAD               	goto	l214
  5896  05B1                     u1540:
  5897  05B1                     l4173:
  5898                           
  5899                           ;mcc_generated_files/adc.c: 132:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
  5900  05B1  081C               	movf	28,w	;volatile
  5901  05B2  0020               	movlb	0	; select bank0
  5902  05B3  00CA               	movwf	?_ADC_GetConversion+1
  5903  05B4  0021               	movlb	1	; select bank1
  5904  05B5  081B               	movf	27,w	;volatile
  5905  05B6  0020               	movlb	0	; select bank0
  5906  05B7  00C9               	movwf	?_ADC_GetConversion
  5907  05B8                     l217:
  5908  05B8  0008               	return
  5909  05B9                     __end_of_ADC_GetConversion:
  5910                           
  5911                           	psect	intentry
  5912  0004                     __pintentry:	
  5913 ;; *************** function _INTERRUPT_InterruptManager *****************
  5914 ;; Defined at:
  5915 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  5916 ;; Parameters:    Size  Location     Type
  5917 ;;		None
  5918 ;; Auto vars:     Size  Location     Type
  5919 ;;		None
  5920 ;; Return value:  Size  Location     Type
  5921 ;;                  1    wreg      void 
  5922 ;; Registers used:
  5923 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5924 ;; Tracked objects:
  5925 ;;		On entry : 0/0
  5926 ;;		On exit  : 0/0
  5927 ;;		Unchanged: 0/0
  5928 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5929 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5930 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5931 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5932 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5933 ;;Total ram usage:        0 bytes
  5934 ;; Hardware stack levels used: 1
  5935 ;; Hardware stack levels required when called: 6
  5936 ;; This function calls:
  5937 ;;		Absolute function
  5938 ;;		_EUSART_Receive_ISR
  5939 ;;		_EUSART_Transmit_ISR
  5940 ;;		_I2C_MasterIsr
  5941 ;; This function is called by:
  5942 ;;		Interrupt level 1
  5943 ;; This function uses a non-reentrant model
  5944 ;;
  5945                           
  5946  0004                     _INTERRUPT_InterruptManager:
  5947                           
  5948                           ;incstack = 0
  5949  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  5950                           
  5951                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5952  0005  3180               	pagesel	$
  5953  0006                     i1l3605:
  5954                           
  5955                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.PEIE == 1)
  5956  0006  1F0B               	btfss	11,6	;volatile
  5957  0007  2809               	goto	u121_21
  5958  0008  280A               	goto	u121_20
  5959  0009                     u121_21:
  5960  0009  2845               	goto	i1l401
  5961  000A                     u121_20:
  5962  000A                     i1l3607:
  5963                           
  5964                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         if(PIE1bits.TXIE == 1 && PIR1bits.TXIF == 1)
  5965  000A  0021               	movlb	1	; select bank1
  5966  000B  1E11               	btfss	17,4	;volatile
  5967  000C  280E               	goto	u122_21
  5968  000D  280F               	goto	u122_20
  5969  000E                     u122_21:
  5970  000E  281A               	goto	i1l392
  5971  000F                     u122_20:
  5972  000F                     i1l3609:
  5973  000F  0020               	movlb	0	; select bank0
  5974  0010  1E11               	btfss	17,4	;volatile
  5975  0011  2813               	goto	u123_21
  5976  0012  2814               	goto	u123_20
  5977  0013                     u123_21:
  5978  0013  281A               	goto	i1l392
  5979  0014                     u123_20:
  5980  0014                     i1l3611:
  5981                           
  5982                           ;mcc_generated_files/interrupt_manager.c: 58:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 59:             EUSART_TxDefaultInterruptHandler();
  5983  0014  0839               	movf	_EUSART_TxDefaultInterruptHandler+1,w
  5984  0015  008A               	movwf	10
  5985  0016  0838               	movf	_EUSART_TxDefaultInterruptHandler,w
  5986  0017  000A               	callw
  5987  0018  3180               	pagesel	$
  5988                           
  5989                           ;mcc_generated_files/interrupt_manager.c: 60:         }
  5990  0019  2845               	goto	i1l401
  5991  001A                     i1l392:	
  5992                           ;mcc_generated_files/interrupt_manager.c: 61:         else if(PIE1bits.RCIE == 1 && PIR1
      +                          bits.RCIF == 1)
  5993                           
  5994  001A  0021               	movlb	1	; select bank1
  5995  001B  1E91               	btfss	17,5	;volatile
  5996  001C  281E               	goto	u124_21
  5997  001D  281F               	goto	u124_20
  5998  001E                     u124_21:
  5999  001E  282A               	goto	i1l394
  6000  001F                     u124_20:
  6001  001F                     i1l3613:
  6002  001F  0020               	movlb	0	; select bank0
  6003  0020  1E91               	btfss	17,5	;volatile
  6004  0021  2823               	goto	u125_21
  6005  0022  2824               	goto	u125_20
  6006  0023                     u125_21:
  6007  0023  282A               	goto	i1l394
  6008  0024                     u125_20:
  6009  0024                     i1l3615:
  6010                           
  6011                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             EUSART_RxDefaultInterruptHandler();
  6012  0024  0837               	movf	_EUSART_RxDefaultInterruptHandler+1,w
  6013  0025  008A               	movwf	10
  6014  0026  0836               	movf	_EUSART_RxDefaultInterruptHandler,w
  6015  0027  000A               	callw
  6016  0028  3180               	pagesel	$
  6017                           
  6018                           ;mcc_generated_files/interrupt_manager.c: 64:         }
  6019  0029  2845               	goto	i1l401
  6020  002A                     i1l394:	
  6021                           ;mcc_generated_files/interrupt_manager.c: 65:         else if(PIE2bits.BCLIE == 1 && PIR
      +                          2bits.BCLIF == 1)
  6022                           
  6023  002A  0021               	movlb	1	; select bank1
  6024  002B  1D92               	btfss	18,3	;volatile
  6025  002C  282E               	goto	u126_21
  6026  002D  282F               	goto	u126_20
  6027  002E                     u126_21:
  6028  002E  283A               	goto	i1l396
  6029  002F                     u126_20:
  6030  002F                     i1l3617:
  6031  002F  0020               	movlb	0	; select bank0
  6032  0030  1D92               	btfss	18,3	;volatile
  6033  0031  2833               	goto	u127_21
  6034  0032  2834               	goto	u127_20
  6035  0033                     u127_21:
  6036  0033  283A               	goto	i1l396
  6037  0034                     u127_20:
  6038  0034                     i1l3619:
  6039                           
  6040                           ;mcc_generated_files/interrupt_manager.c: 66:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 67:             MSSP_InterruptHandler();
  6041  0034  083D               	movf	_MSSP_InterruptHandler+1,w
  6042  0035  008A               	movwf	10
  6043  0036  083C               	movf	_MSSP_InterruptHandler,w
  6044  0037  000A               	callw
  6045  0038  3180               	pagesel	$
  6046                           
  6047                           ;mcc_generated_files/interrupt_manager.c: 68:         }
  6048  0039  2845               	goto	i1l401
  6049  003A                     i1l396:	
  6050                           ;mcc_generated_files/interrupt_manager.c: 69:         else if(PIE1bits.SSPIE == 1 && PIR
      +                          1bits.SSPIF == 1)
  6051                           
  6052  003A  0021               	movlb	1	; select bank1
  6053  003B  1D91               	btfss	17,3	;volatile
  6054  003C  283E               	goto	u128_21
  6055  003D  283F               	goto	u128_20
  6056  003E                     u128_21:
  6057  003E  2845               	goto	i1l395
  6058  003F                     u128_20:
  6059  003F                     i1l3621:
  6060  003F  0020               	movlb	0	; select bank0
  6061  0040  1D91               	btfss	17,3	;volatile
  6062  0041  2843               	goto	u129_21
  6063  0042  2844               	goto	u129_20
  6064  0043                     u129_21:
  6065  0043  2845               	goto	i1l395
  6066  0044                     u129_20:
  6067  0044  2834               	goto	i1l3619
  6068  0045                     i1l395:
  6069  0045                     i1l401:
  6070  0045  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  6071  0046  0009               	retfie
  6072  0047                     __end_of_INTERRUPT_InterruptManager:
  6073                           
  6074                           	psect	text34
  6075  0FF7                     __ptext34:	
  6076 ;; *************** function _I2C_MasterIsr *****************
  6077 ;; Defined at:
  6078 ;;		line 318 in file "mcc_generated_files/i2c_master.c"
  6079 ;; Parameters:    Size  Location     Type
  6080 ;;		None
  6081 ;; Auto vars:     Size  Location     Type
  6082 ;;		None
  6083 ;; Return value:  Size  Location     Type
  6084 ;;                  1    wreg      void 
  6085 ;; Registers used:
  6086 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6087 ;; Tracked objects:
  6088 ;;		On entry : 0/0
  6089 ;;		On exit  : 0/0
  6090 ;;		Unchanged: 0/0
  6091 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6092 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6093 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6094 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6095 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6096 ;;Total ram usage:        0 bytes
  6097 ;; Hardware stack levels used: 1
  6098 ;; Hardware stack levels required when called: 5
  6099 ;; This function calls:
  6100 ;;		_I2C_MasterFsm
  6101 ;; This function is called by:
  6102 ;;		_I2C_Open
  6103 ;;		_INTERRUPT_InterruptManager
  6104 ;; This function uses a non-reentrant model
  6105 ;;
  6106                           
  6107                           
  6108                           ;psect for function _I2C_MasterIsr
  6109  0FF7                     _I2C_MasterIsr:
  6110  0FF7                     i1l3383:	
  6111                           ;incstack = 0
  6112                           ; Regs used in _I2C_MasterIsr: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6113                           
  6114                           
  6115                           ;mcc_generated_files/i2c_master.c: 320:     I2C_MasterFsm();
  6116  0FF7  3184  2456  318F   	fcall	_I2C_MasterFsm
  6117  0FFA                     i1l563:
  6118  0FFA  0008               	return
  6119  0FFB                     __end_of_I2C_MasterIsr:
  6120                           
  6121                           	psect	text35
  6122  0456                     __ptext35:	
  6123 ;; *************** function _I2C_MasterFsm *****************
  6124 ;; Defined at:
  6125 ;;		line 323 in file "mcc_generated_files/i2c_master.c"
  6126 ;; Parameters:    Size  Location     Type
  6127 ;;		None
  6128 ;; Auto vars:     Size  Location     Type
  6129 ;;		None
  6130 ;; Return value:  Size  Location     Type
  6131 ;;                  1    wreg      void 
  6132 ;; Registers used:
  6133 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6134 ;; Tracked objects:
  6135 ;;		On entry : 0/0
  6136 ;;		On exit  : 0/0
  6137 ;;		Unchanged: 0/0
  6138 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6139 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6140 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6141 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6142 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6143 ;;Total ram usage:        3 bytes
  6144 ;; Hardware stack levels used: 1
  6145 ;; Hardware stack levels required when called: 4
  6146 ;; This function calls:
  6147 ;;		_I2C_DO_ADDRESS_NACK
  6148 ;;		_I2C_DO_IDLE
  6149 ;;		_I2C_DO_RCEN
  6150 ;;		_I2C_DO_RESET
  6151 ;;		_I2C_DO_RX
  6152 ;;		_I2C_DO_RX_ACK
  6153 ;;		_I2C_DO_RX_NACK_RESTART
  6154 ;;		_I2C_DO_RX_NACK_STOP
  6155 ;;		_I2C_DO_SEND_ADR_READ
  6156 ;;		_I2C_DO_SEND_ADR_WRITE
  6157 ;;		_I2C_DO_SEND_RESTART
  6158 ;;		_I2C_DO_SEND_RESTART_READ
  6159 ;;		_I2C_DO_SEND_RESTART_WRITE
  6160 ;;		_I2C_DO_SEND_STOP
  6161 ;;		_I2C_DO_TX
  6162 ;;		_I2C_DO_TX_EMPTY
  6163 ;;		_I2C_MasterClearIrq
  6164 ;;		_I2C_MasterIsNack
  6165 ;; This function is called by:
  6166 ;;		_I2C_MasterIsr
  6167 ;; This function uses a non-reentrant model
  6168 ;;
  6169                           
  6170                           
  6171                           ;psect for function _I2C_MasterFsm
  6172  0456                     _I2C_MasterFsm:
  6173  0456                     i1l3265:	
  6174                           ;incstack = 0
  6175                           ; Regs used in _I2C_MasterFsm: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6176                           
  6177                           
  6178                           ;mcc_generated_files/i2c_master.c: 325:     I2C_MasterClearIrq();
  6179  0456  318F  27E4  3184   	fcall	_I2C_MasterClearIrq
  6180  0459                     i1l3267:
  6181                           
  6182                           ;mcc_generated_files/i2c_master.c: 327:     if(I2C_Status.addressNackCheck && I2C_Master
      +                          IsNack())
  6183  0459  0021               	movlb	1	; select bank1
  6184  045A  1C5C               	btfss	(_I2C_Status^(0+128)+28),0
  6185  045B  2C5D               	goto	u89_21
  6186  045C  2C5E               	goto	u89_20
  6187  045D                     u89_21:
  6188  045D  2C6C               	goto	i1l3273
  6189  045E                     u89_20:
  6190  045E                     i1l3269:
  6191  045E  3187  27C9  3184   	fcall	_I2C_MasterIsNack
  6192  0461  3A00               	xorlw	0
  6193  0462  1903               	skipnz
  6194  0463  2C65               	goto	u90_21
  6195  0464  2C66               	goto	u90_20
  6196  0465                     u90_21:
  6197  0465  2C6C               	goto	i1l3273
  6198  0466                     u90_20:
  6199  0466                     i1l3271:
  6200                           
  6201                           ;mcc_generated_files/i2c_master.c: 328:     {;mcc_generated_files/i2c_master.c: 329:    
      +                               I2C_Status.state = I2C_ADDRESS_NACK;
  6202  0466  300F               	movlw	15
  6203  0467  0020               	movlb	0	; select bank0
  6204  0468  00C6               	movwf	??_I2C_MasterFsm
  6205  0469  0846               	movf	??_I2C_MasterFsm,w
  6206  046A  0021               	movlb	1	; select bank1
  6207  046B  00DA               	movwf	(_I2C_Status^(0+128)+26)
  6208  046C                     i1l3273:
  6209                           
  6210                           ;mcc_generated_files/i2c_master.c: 331:     I2C_Status.state = i2c_fsmStateTable[I2C_Sta
      +                          tus.state]();
  6211  046C  0021               	movlb	1	; select bank1
  6212  046D  085A               	movf	(_I2C_Status^(0+128)+26),w
  6213  046E  0020               	movlb	0	; select bank0
  6214  046F  00C6               	movwf	??_I2C_MasterFsm
  6215  0470  01C7               	clrf	??_I2C_MasterFsm+1
  6216  0471  35C6               	lslf	??_I2C_MasterFsm,f
  6217  0472  0DC7               	rlf	??_I2C_MasterFsm+1,f
  6218  0473  30C7               	movlw	low (_i2c_fsmStateTable| (0+32768))
  6219  0474  0746               	addwf	??_I2C_MasterFsm,w
  6220  0475  0084               	movwf	4
  6221  0476  3083               	movlw	high (_i2c_fsmStateTable| (0+32768))
  6222  0477  3D47               	addwfc	??_I2C_MasterFsm+1,w
  6223  0478  0085               	movwf	5
  6224  0479  3F01               	moviw [1]fsr0
  6225  047A  008A               	movwf	10
  6226  047B  3F00               	moviw [0]fsr0
  6227  047C  000A               	callw
  6228  047D  3184               	pagesel	$
  6229  047E  0020               	movlb	0	; select bank0
  6230  047F  00C8               	movwf	??_I2C_MasterFsm+2
  6231  0480  0848               	movf	??_I2C_MasterFsm+2,w
  6232  0481  0021               	movlb	1	; select bank1
  6233  0482  00DA               	movwf	(_I2C_Status^(0+128)+26)
  6234  0483                     i1l567:
  6235  0483  0008               	return
  6236  0484                     __end_of_I2C_MasterFsm:
  6237                           
  6238                           	psect	text36
  6239  0FE4                     __ptext36:	
  6240 ;; *************** function _I2C_MasterClearIrq *****************
  6241 ;; Defined at:
  6242 ;;		line 642 in file "mcc_generated_files/i2c_master.c"
  6243 ;; Parameters:    Size  Location     Type
  6244 ;;		None
  6245 ;; Auto vars:     Size  Location     Type
  6246 ;;		None
  6247 ;; Return value:  Size  Location     Type
  6248 ;;                  1    wreg      void 
  6249 ;; Registers used:
  6250 ;;		None
  6251 ;; Tracked objects:
  6252 ;;		On entry : 0/0
  6253 ;;		On exit  : 0/0
  6254 ;;		Unchanged: 0/0
  6255 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6256 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6257 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6258 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6259 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6260 ;;Total ram usage:        0 bytes
  6261 ;; Hardware stack levels used: 1
  6262 ;; This function calls:
  6263 ;;		Nothing
  6264 ;; This function is called by:
  6265 ;;		_I2C_MasterFsm
  6266 ;;		_I2C_Open
  6267 ;;		_I2C_Close
  6268 ;; This function uses a non-reentrant model
  6269 ;;
  6270                           
  6271                           
  6272                           ;psect for function _I2C_MasterClearIrq
  6273  0FE4                     _I2C_MasterClearIrq:
  6274  0FE4                     i1l2979:	
  6275                           ;incstack = 0
  6276                           ; Regs used in _I2C_MasterClearIrq: []
  6277                           
  6278                           
  6279                           ;mcc_generated_files/i2c_master.c: 644:     PIR1bits.SSPIF = 0;
  6280  0FE4  0020               	movlb	0	; select bank0
  6281  0FE5  1191               	bcf	17,3	;volatile
  6282  0FE6                     i1l730:
  6283  0FE6  0008               	return
  6284  0FE7                     __end_of_I2C_MasterClearIrq:
  6285                           
  6286                           	psect	text37
  6287  0484                     __ptext37:	
  6288 ;; *************** function _I2C_DO_ADDRESS_NACK *****************
  6289 ;; Defined at:
  6290 ;;		line 501 in file "mcc_generated_files/i2c_master.c"
  6291 ;; Parameters:    Size  Location     Type
  6292 ;;		None
  6293 ;; Auto vars:     Size  Location     Type
  6294 ;;		None
  6295 ;; Return value:  Size  Location     Type
  6296 ;;                  1    wreg      enum E3338
  6297 ;; Registers used:
  6298 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6299 ;; Tracked objects:
  6300 ;;		On entry : 0/0
  6301 ;;		On exit  : 0/0
  6302 ;;		Unchanged: 0/0
  6303 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6304 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6305 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6306 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6307 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6308 ;;Total ram usage:        3 bytes
  6309 ;; Hardware stack levels used: 1
  6310 ;; Hardware stack levels required when called: 3
  6311 ;; This function calls:
  6312 ;;		Absolute function
  6313 ;;		_I2C_CallbackReturnReset
  6314 ;;		_I2C_CallbackReturnStop
  6315 ;;		_I2C_DO_SEND_RESTART
  6316 ;;		_I2C_DO_SEND_STOP
  6317 ;;		_rd1RegCompleteHandler
  6318 ;;		_rd2RegCompleteHandler
  6319 ;;		_rdBlkRegCompleteHandler
  6320 ;;		_wr1RegCompleteHandler
  6321 ;;		_wr2RegCompleteHandler
  6322 ;; This function is called by:
  6323 ;;		_I2C_MasterFsm
  6324 ;; This function uses a non-reentrant model
  6325 ;;
  6326                           
  6327                           
  6328                           ;psect for function _I2C_DO_ADDRESS_NACK
  6329  0484                     _I2C_DO_ADDRESS_NACK:
  6330  0484                     i1l3119:	
  6331                           ;incstack = 0
  6332                           ; Regs used in _I2C_DO_ADDRESS_NACK: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6333                           
  6334                           
  6335                           ;mcc_generated_files/i2c_master.c: 503:     I2C_Status.addressNackCheck = 0;
  6336  0484  0021               	movlb	1	; select bank1
  6337  0485  105C               	bcf	(_I2C_Status^(0+128)+28),0
  6338  0486                     i1l3121:
  6339                           
  6340                           ;mcc_generated_files/i2c_master.c: 504:     I2C_Status.error = I2C_FAIL;
  6341  0486  3002               	movlw	2
  6342  0487  00FA               	movwf	??_I2C_DO_ADDRESS_NACK
  6343  0488  087A               	movf	??_I2C_DO_ADDRESS_NACK,w
  6344  0489  00DB               	movwf	(_I2C_Status^(0+128)+27)
  6345                           
  6346                           ;mcc_generated_files/i2c_master.c: 505:     switch(I2C_Status.callbackTable[I2C_ADDR_NAC
      +                          K](I2C_Status.callbackPayload[I2C_ADDR_NACK]))
  6347  048A  2C93               	goto	i1l3133
  6348  048B                     i1l3123:
  6349                           
  6350                           ;mcc_generated_files/i2c_master.c: 509:             return I2C_DO_SEND_RESTART();
  6351  048B  3187  27E8  3184   	fcall	_I2C_DO_SEND_RESTART
  6352  048E  2CAF               	goto	i1l658
  6353  048F                     i1l3127:
  6354                           
  6355                           ;mcc_generated_files/i2c_master.c: 511:             return I2C_DO_SEND_STOP();
  6356  048F  3187  27E3  3184   	fcall	_I2C_DO_SEND_STOP
  6357  0492  2CAF               	goto	i1l658
  6358  0493                     i1l3133:
  6359  0493  084E               	movf	(low ((_I2C_Status| 0+14)))^(0+128),w
  6360  0494  00FA               	movwf	??_I2C_DO_ADDRESS_NACK
  6361  0495  087A               	movf	??_I2C_DO_ADDRESS_NACK,w
  6362  0496  00F9               	movwf	I2C_CallbackReturnReset@funPtr
  6363  0497  3004               	movlw	4
  6364  0498  3EC0               	addlw	(low (_I2C_Status| 0))& (0+255)
  6365  0499  0086               	movwf	6
  6366  049A  0187               	clrf	7
  6367  049B  3F41               	moviw [1]fsr1
  6368  049C  008A               	movwf	10
  6369  049D  3F40               	moviw [0]fsr1
  6370  049E  000A               	callw
  6371  049F  3184               	pagesel	$
  6372  04A0  00FB               	movwf	??_I2C_DO_ADDRESS_NACK+1
  6373  04A1  01FC               	clrf	??_I2C_DO_ADDRESS_NACK+2
  6374                           
  6375                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6376                           ; Switch size 1, requested type "simple"
  6377                           ; Number of cases is 1, Range of values is 0 to 0
  6378                           ; switch strategies available:
  6379                           ; Name         Instructions Cycles
  6380                           ; simple_byte            4     3 (average)
  6381                           ; direct_byte            8     6 (fixed)
  6382                           ; jumptable            260     6 (fixed)
  6383                           ;	Chosen strategy is simple_byte
  6384  04A2  087C               	movf	??_I2C_DO_ADDRESS_NACK+2,w
  6385  04A3  3A00               	xorlw	0	; case 0
  6386  04A4  1903               	skipnz
  6387  04A5  2CA7               	goto	i1l4541
  6388  04A6  2C8F               	goto	i1l3127
  6389  04A7                     i1l4541:
  6390                           
  6391                           ; Switch size 1, requested type "simple"
  6392                           ; Number of cases is 2, Range of values is 2 to 3
  6393                           ; switch strategies available:
  6394                           ; Name         Instructions Cycles
  6395                           ; simple_byte            7     4 (average)
  6396                           ; direct_byte           13     9 (fixed)
  6397                           ; jumptable            263     9 (fixed)
  6398                           ;	Chosen strategy is simple_byte
  6399  04A7  087B               	movf	??_I2C_DO_ADDRESS_NACK+1,w
  6400  04A8  3A02               	xorlw	2	; case 2
  6401  04A9  1903               	skipnz
  6402  04AA  2C8B               	goto	i1l3123
  6403  04AB  3A01               	xorlw	1	; case 3
  6404  04AC  1903               	skipnz
  6405  04AD  2C8B               	goto	i1l3123
  6406  04AE  2C8F               	goto	i1l3127
  6407  04AF                     i1l658:
  6408  04AF  0008               	return
  6409  04B0                     __end_of_I2C_DO_ADDRESS_NACK:
  6410                           
  6411                           	psect	text38
  6412  07CF                     __ptext38:	
  6413 ;; *************** function _I2C_DO_RESET *****************
  6414 ;; Defined at:
  6415 ;;		line 495 in file "mcc_generated_files/i2c_master.c"
  6416 ;; Parameters:    Size  Location     Type
  6417 ;;		None
  6418 ;; Auto vars:     Size  Location     Type
  6419 ;;		None
  6420 ;; Return value:  Size  Location     Type
  6421 ;;                  1    wreg      enum E3338
  6422 ;; Registers used:
  6423 ;;		wreg, status,2
  6424 ;; Tracked objects:
  6425 ;;		On entry : 0/0
  6426 ;;		On exit  : 0/0
  6427 ;;		Unchanged: 0/0
  6428 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6429 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6430 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6431 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6432 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6433 ;;Total ram usage:        0 bytes
  6434 ;; Hardware stack levels used: 1
  6435 ;; This function calls:
  6436 ;;		Nothing
  6437 ;; This function is called by:
  6438 ;;		_I2C_MasterFsm
  6439 ;; This function uses a non-reentrant model
  6440 ;;
  6441                           
  6442                           
  6443                           ;psect for function _I2C_DO_RESET
  6444  07CF                     _I2C_DO_RESET:
  6445  07CF                     i1l3111:	
  6446                           ;incstack = 0
  6447                           ; Regs used in _I2C_DO_RESET: [wreg+status,2]
  6448                           
  6449                           
  6450                           ;mcc_generated_files/i2c_master.c: 497:     I2C_Status.busy = 0;
  6451  07CF  0021               	movlb	1	; select bank1
  6452  07D0  10DC               	bcf	(_I2C_Status^(0+128)+28),1
  6453  07D1                     i1l3113:
  6454                           
  6455                           ;mcc_generated_files/i2c_master.c: 498:     I2C_Status.error = I2C_NOERR;
  6456  07D1  01DB               	clrf	(_I2C_Status^(0+128)+27)
  6457  07D2                     i1l3115:
  6458                           
  6459                           ;mcc_generated_files/i2c_master.c: 499:     return I2C_RESET;
  6460  07D2  300E               	movlw	14
  6461  07D3                     i1l652:
  6462  07D3  0008               	return
  6463  07D4                     __end_of_I2C_DO_RESET:
  6464                           
  6465                           	psect	text39
  6466  07D4                     __ptext39:	
  6467 ;; *************** function _I2C_DO_RX_NACK_RESTART *****************
  6468 ;; Defined at:
  6469 ;;		line 489 in file "mcc_generated_files/i2c_master.c"
  6470 ;; Parameters:    Size  Location     Type
  6471 ;;		None
  6472 ;; Auto vars:     Size  Location     Type
  6473 ;;		None
  6474 ;; Return value:  Size  Location     Type
  6475 ;;                  1    wreg      enum E3338
  6476 ;; Registers used:
  6477 ;;		wreg, status,2, status,0, pclath, cstack
  6478 ;; Tracked objects:
  6479 ;;		On entry : 0/0
  6480 ;;		On exit  : 0/0
  6481 ;;		Unchanged: 0/0
  6482 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6483 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6484 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6485 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6486 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6487 ;;Total ram usage:        0 bytes
  6488 ;; Hardware stack levels used: 1
  6489 ;; Hardware stack levels required when called: 1
  6490 ;; This function calls:
  6491 ;;		_I2C_MasterSendNack
  6492 ;; This function is called by:
  6493 ;;		_I2C_DO_RX
  6494 ;;		_I2C_MasterFsm
  6495 ;; This function uses a non-reentrant model
  6496 ;;
  6497                           
  6498                           
  6499                           ;psect for function _I2C_DO_RX_NACK_RESTART
  6500  07D4                     _I2C_DO_RX_NACK_RESTART:
  6501  07D4                     i1l2913:	
  6502                           ;incstack = 0
  6503                           ; Regs used in _I2C_DO_RX_NACK_RESTART: [wreg+status,2+status,0+pclath+cstack]
  6504                           
  6505                           
  6506                           ;mcc_generated_files/i2c_master.c: 491:     I2C_MasterSendNack();
  6507  07D4  318F  27EF  3187   	fcall	_I2C_MasterSendNack
  6508  07D7                     i1l2915:
  6509                           
  6510                           ;mcc_generated_files/i2c_master.c: 492:     return I2C_SEND_RESTART;
  6511  07D7  3009               	movlw	9
  6512  07D8                     i1l649:
  6513  07D8  0008               	return
  6514  07D9                     __end_of_I2C_DO_RX_NACK_RESTART:
  6515                           
  6516                           	psect	text40
  6517  07D9                     __ptext40:	
  6518 ;; *************** function _I2C_DO_RX_NACK_STOP *****************
  6519 ;; Defined at:
  6520 ;;		line 483 in file "mcc_generated_files/i2c_master.c"
  6521 ;; Parameters:    Size  Location     Type
  6522 ;;		None
  6523 ;; Auto vars:     Size  Location     Type
  6524 ;;		None
  6525 ;; Return value:  Size  Location     Type
  6526 ;;                  1    wreg      enum E3338
  6527 ;; Registers used:
  6528 ;;		wreg, status,2, status,0, pclath, cstack
  6529 ;; Tracked objects:
  6530 ;;		On entry : 0/0
  6531 ;;		On exit  : 0/0
  6532 ;;		Unchanged: 0/0
  6533 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6534 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6535 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6536 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6537 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6538 ;;Total ram usage:        0 bytes
  6539 ;; Hardware stack levels used: 1
  6540 ;; Hardware stack levels required when called: 1
  6541 ;; This function calls:
  6542 ;;		_I2C_MasterSendNack
  6543 ;; This function is called by:
  6544 ;;		_I2C_DO_RX
  6545 ;;		_I2C_MasterFsm
  6546 ;; This function uses a non-reentrant model
  6547 ;;
  6548                           
  6549                           
  6550                           ;psect for function _I2C_DO_RX_NACK_STOP
  6551  07D9                     _I2C_DO_RX_NACK_STOP:
  6552  07D9                     i1l2919:	
  6553                           ;incstack = 0
  6554                           ; Regs used in _I2C_DO_RX_NACK_STOP: [wreg+status,2+status,0+pclath+cstack]
  6555                           
  6556                           
  6557                           ;mcc_generated_files/i2c_master.c: 485:     I2C_MasterSendNack();
  6558  07D9  318F  27EF  3187   	fcall	_I2C_MasterSendNack
  6559  07DC                     i1l2921:
  6560                           
  6561                           ;mcc_generated_files/i2c_master.c: 486:     return I2C_SEND_STOP;
  6562  07DC  300A               	movlw	10
  6563  07DD                     i1l646:
  6564  07DD  0008               	return
  6565  07DE                     __end_of_I2C_DO_RX_NACK_STOP:
  6566                           
  6567                           	psect	text41
  6568  07DE                     __ptext41:	
  6569 ;; *************** function _I2C_DO_RX_ACK *****************
  6570 ;; Defined at:
  6571 ;;		line 476 in file "mcc_generated_files/i2c_master.c"
  6572 ;; Parameters:    Size  Location     Type
  6573 ;;		None
  6574 ;; Auto vars:     Size  Location     Type
  6575 ;;		None
  6576 ;; Return value:  Size  Location     Type
  6577 ;;                  1    wreg      enum E3338
  6578 ;; Registers used:
  6579 ;;		wreg, status,2, status,0, pclath, cstack
  6580 ;; Tracked objects:
  6581 ;;		On entry : 0/0
  6582 ;;		On exit  : 0/0
  6583 ;;		Unchanged: 0/0
  6584 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6585 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6586 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6587 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6588 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6589 ;;Total ram usage:        0 bytes
  6590 ;; Hardware stack levels used: 1
  6591 ;; Hardware stack levels required when called: 1
  6592 ;; This function calls:
  6593 ;;		_I2C_MasterSendAck
  6594 ;; This function is called by:
  6595 ;;		_I2C_MasterFsm
  6596 ;; This function uses a non-reentrant model
  6597 ;;
  6598                           
  6599                           
  6600                           ;psect for function _I2C_DO_RX_ACK
  6601  07DE                     _I2C_DO_RX_ACK:
  6602  07DE                     i1l3105:	
  6603                           ;incstack = 0
  6604                           ; Regs used in _I2C_DO_RX_ACK: [wreg+status,2+status,0+pclath+cstack]
  6605                           
  6606                           
  6607                           ;mcc_generated_files/i2c_master.c: 478:     I2C_MasterSendAck();
  6608  07DE  318F  27F3  3187   	fcall	_I2C_MasterSendAck
  6609  07E1                     i1l3107:
  6610                           
  6611                           ;mcc_generated_files/i2c_master.c: 479:     return I2C_RCEN;
  6612  07E1  3005               	movlw	5
  6613  07E2                     i1l643:
  6614  07E2  0008               	return
  6615  07E3                     __end_of_I2C_DO_RX_ACK:
  6616                           
  6617                           	psect	text42
  6618  07E3                     __ptext42:	
  6619 ;; *************** function _I2C_DO_SEND_STOP *****************
  6620 ;; Defined at:
  6621 ;;		line 470 in file "mcc_generated_files/i2c_master.c"
  6622 ;; Parameters:    Size  Location     Type
  6623 ;;		None
  6624 ;; Auto vars:     Size  Location     Type
  6625 ;;		None
  6626 ;; Return value:  Size  Location     Type
  6627 ;;                  1    wreg      enum E3338
  6628 ;; Registers used:
  6629 ;;		wreg, status,2, status,0, pclath, cstack
  6630 ;; Tracked objects:
  6631 ;;		On entry : 0/0
  6632 ;;		On exit  : 0/0
  6633 ;;		Unchanged: 0/0
  6634 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6635 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6636 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6637 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6638 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6639 ;;Total ram usage:        0 bytes
  6640 ;; Hardware stack levels used: 1
  6641 ;; Hardware stack levels required when called: 1
  6642 ;; This function calls:
  6643 ;;		_I2C_MasterStop
  6644 ;; This function is called by:
  6645 ;;		_I2C_DO_TX
  6646 ;;		_I2C_DO_TX_EMPTY
  6647 ;;		_I2C_DO_ADDRESS_NACK
  6648 ;;		_I2C_MasterFsm
  6649 ;; This function uses a non-reentrant model
  6650 ;;
  6651                           
  6652                           
  6653                           ;psect for function _I2C_DO_SEND_STOP
  6654  07E3                     _I2C_DO_SEND_STOP:
  6655  07E3                     i1l2901:	
  6656                           ;incstack = 0
  6657                           ; Regs used in _I2C_DO_SEND_STOP: [wreg+status,2+status,0+pclath+cstack]
  6658                           
  6659                           
  6660                           ;mcc_generated_files/i2c_master.c: 472:     I2C_MasterStop();
  6661  07E3  318F  27D8  3187   	fcall	_I2C_MasterStop
  6662  07E6                     i1l2903:
  6663                           
  6664                           ;mcc_generated_files/i2c_master.c: 473:     return I2C_IDLE;
  6665  07E6  3000               	movlw	0
  6666  07E7                     i1l640:
  6667  07E7  0008               	return
  6668  07E8                     __end_of_I2C_DO_SEND_STOP:
  6669                           
  6670                           	psect	text43
  6671  07E8                     __ptext43:	
  6672 ;; *************** function _I2C_DO_SEND_RESTART *****************
  6673 ;; Defined at:
  6674 ;;		line 464 in file "mcc_generated_files/i2c_master.c"
  6675 ;; Parameters:    Size  Location     Type
  6676 ;;		None
  6677 ;; Auto vars:     Size  Location     Type
  6678 ;;		None
  6679 ;; Return value:  Size  Location     Type
  6680 ;;                  1    wreg      enum E3338
  6681 ;; Registers used:
  6682 ;;		wreg, status,2, status,0, pclath, cstack
  6683 ;; Tracked objects:
  6684 ;;		On entry : 0/0
  6685 ;;		On exit  : 0/0
  6686 ;;		Unchanged: 0/0
  6687 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6688 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6689 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6690 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6691 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6692 ;;Total ram usage:        0 bytes
  6693 ;; Hardware stack levels used: 1
  6694 ;; Hardware stack levels required when called: 1
  6695 ;; This function calls:
  6696 ;;		_I2C_MasterEnableRestart
  6697 ;; This function is called by:
  6698 ;;		_I2C_DO_TX_EMPTY
  6699 ;;		_I2C_DO_ADDRESS_NACK
  6700 ;;		_I2C_MasterFsm
  6701 ;; This function uses a non-reentrant model
  6702 ;;
  6703                           
  6704                           
  6705                           ;psect for function _I2C_DO_SEND_RESTART
  6706  07E8                     _I2C_DO_SEND_RESTART:
  6707  07E8                     i1l2927:	
  6708                           ;incstack = 0
  6709                           ; Regs used in _I2C_DO_SEND_RESTART: [wreg+status,2+status,0+pclath+cstack]
  6710                           
  6711                           
  6712                           ;mcc_generated_files/i2c_master.c: 466:     I2C_MasterEnableRestart();
  6713  07E8  318F  27D5  3187   	fcall	_I2C_MasterEnableRestart
  6714  07EB                     i1l2929:
  6715                           
  6716                           ;mcc_generated_files/i2c_master.c: 467:     return I2C_SEND_ADR_READ;
  6717  07EB  3001               	movlw	1
  6718  07EC                     i1l637:
  6719  07EC  0008               	return
  6720  07ED                     __end_of_I2C_DO_SEND_RESTART:
  6721                           
  6722                           	psect	text44
  6723  07ED                     __ptext44:	
  6724 ;; *************** function _I2C_DO_SEND_RESTART_WRITE *****************
  6725 ;; Defined at:
  6726 ;;		line 457 in file "mcc_generated_files/i2c_master.c"
  6727 ;; Parameters:    Size  Location     Type
  6728 ;;		None
  6729 ;; Auto vars:     Size  Location     Type
  6730 ;;		None
  6731 ;; Return value:  Size  Location     Type
  6732 ;;                  1    wreg      enum E3338
  6733 ;; Registers used:
  6734 ;;		wreg, status,2, status,0, pclath, cstack
  6735 ;; Tracked objects:
  6736 ;;		On entry : 0/0
  6737 ;;		On exit  : 0/0
  6738 ;;		Unchanged: 0/0
  6739 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6740 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6741 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6742 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6743 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6744 ;;Total ram usage:        0 bytes
  6745 ;; Hardware stack levels used: 1
  6746 ;; Hardware stack levels required when called: 1
  6747 ;; This function calls:
  6748 ;;		_I2C_MasterEnableRestart
  6749 ;; This function is called by:
  6750 ;;		_I2C_DO_TX
  6751 ;;		_I2C_MasterFsm
  6752 ;; This function uses a non-reentrant model
  6753 ;;
  6754                           
  6755                           
  6756                           ;psect for function _I2C_DO_SEND_RESTART_WRITE
  6757  07ED                     _I2C_DO_SEND_RESTART_WRITE:
  6758  07ED                     i1l2895:	
  6759                           ;incstack = 0
  6760                           ; Regs used in _I2C_DO_SEND_RESTART_WRITE: [wreg+status,2+status,0+pclath+cstack]
  6761                           
  6762                           
  6763                           ;mcc_generated_files/i2c_master.c: 459:     I2C_MasterEnableRestart();
  6764  07ED  318F  27D5  3187   	fcall	_I2C_MasterEnableRestart
  6765  07F0                     i1l2897:
  6766                           
  6767                           ;mcc_generated_files/i2c_master.c: 460:     return I2C_SEND_ADR_WRITE;
  6768  07F0  3002               	movlw	2
  6769  07F1                     i1l634:
  6770  07F1  0008               	return
  6771  07F2                     __end_of_I2C_DO_SEND_RESTART_WRITE:
  6772                           
  6773                           	psect	text45
  6774  07F2                     __ptext45:	
  6775 ;; *************** function _I2C_DO_SEND_RESTART_READ *****************
  6776 ;; Defined at:
  6777 ;;		line 451 in file "mcc_generated_files/i2c_master.c"
  6778 ;; Parameters:    Size  Location     Type
  6779 ;;		None
  6780 ;; Auto vars:     Size  Location     Type
  6781 ;;		None
  6782 ;; Return value:  Size  Location     Type
  6783 ;;                  1    wreg      enum E3338
  6784 ;; Registers used:
  6785 ;;		wreg, status,2, status,0, pclath, cstack
  6786 ;; Tracked objects:
  6787 ;;		On entry : 0/0
  6788 ;;		On exit  : 0/0
  6789 ;;		Unchanged: 0/0
  6790 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6791 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6792 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6793 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6794 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6795 ;;Total ram usage:        0 bytes
  6796 ;; Hardware stack levels used: 1
  6797 ;; Hardware stack levels required when called: 1
  6798 ;; This function calls:
  6799 ;;		_I2C_MasterEnableRestart
  6800 ;; This function is called by:
  6801 ;;		_I2C_DO_TX
  6802 ;;		_I2C_MasterFsm
  6803 ;; This function uses a non-reentrant model
  6804 ;;
  6805                           
  6806                           
  6807                           ;psect for function _I2C_DO_SEND_RESTART_READ
  6808  07F2                     _I2C_DO_SEND_RESTART_READ:
  6809  07F2                     i1l2889:	
  6810                           ;incstack = 0
  6811                           ; Regs used in _I2C_DO_SEND_RESTART_READ: [wreg+status,2+status,0+pclath+cstack]
  6812                           
  6813                           
  6814                           ;mcc_generated_files/i2c_master.c: 453:     I2C_MasterEnableRestart();
  6815  07F2  318F  27D5  3187   	fcall	_I2C_MasterEnableRestart
  6816  07F5                     i1l2891:
  6817                           
  6818                           ;mcc_generated_files/i2c_master.c: 454:     return I2C_SEND_ADR_READ;
  6819  07F5  3001               	movlw	1
  6820  07F6                     i1l631:
  6821  07F6  0008               	return
  6822  07F7                     __end_of_I2C_DO_SEND_RESTART_READ:
  6823                           
  6824                           	psect	text46
  6825  0792                     __ptext46:	
  6826 ;; *************** function _I2C_DO_RCEN *****************
  6827 ;; Defined at:
  6828 ;;		line 404 in file "mcc_generated_files/i2c_master.c"
  6829 ;; Parameters:    Size  Location     Type
  6830 ;;		None
  6831 ;; Auto vars:     Size  Location     Type
  6832 ;;		None
  6833 ;; Return value:  Size  Location     Type
  6834 ;;                  1    wreg      enum E3338
  6835 ;; Registers used:
  6836 ;;		wreg, status,2, status,0, pclath, cstack
  6837 ;; Tracked objects:
  6838 ;;		On entry : 0/0
  6839 ;;		On exit  : 0/0
  6840 ;;		Unchanged: 0/0
  6841 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6842 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6843 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6844 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6845 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6846 ;;Total ram usage:        0 bytes
  6847 ;; Hardware stack levels used: 1
  6848 ;; Hardware stack levels required when called: 1
  6849 ;; This function calls:
  6850 ;;		_I2C_MasterStartRx
  6851 ;; This function is called by:
  6852 ;;		_I2C_MasterFsm
  6853 ;; This function uses a non-reentrant model
  6854 ;;
  6855                           
  6856                           
  6857                           ;psect for function _I2C_DO_RCEN
  6858  0792                     _I2C_DO_RCEN:
  6859  0792                     i1l3071:	
  6860                           ;incstack = 0
  6861                           ; Regs used in _I2C_DO_RCEN: [wreg+status,2+status,0+pclath+cstack]
  6862                           
  6863                           
  6864                           ;mcc_generated_files/i2c_master.c: 406:     I2C_Status.addressNackCheck = 0;
  6865  0792  0021               	movlb	1	; select bank1
  6866  0793  105C               	bcf	(_I2C_Status^(0+128)+28),0
  6867  0794                     i1l3073:
  6868                           
  6869                           ;mcc_generated_files/i2c_master.c: 407:     I2C_MasterStartRx();
  6870  0794  318F  27DB  3187   	fcall	_I2C_MasterStartRx
  6871  0797                     i1l3075:
  6872                           
  6873                           ;mcc_generated_files/i2c_master.c: 408:     return I2C_RX;
  6874  0797  3004               	movlw	4
  6875  0798                     i1l607:
  6876  0798  0008               	return
  6877  0799                     __end_of_I2C_DO_RCEN:
  6878                           
  6879                           	psect	text47
  6880  02C1                     __ptext47:	
  6881 ;; *************** function _I2C_DO_RX *****************
  6882 ;; Defined at:
  6883 ;;		line 380 in file "mcc_generated_files/i2c_master.c"
  6884 ;; Parameters:    Size  Location     Type
  6885 ;;		None
  6886 ;; Auto vars:     Size  Location     Type
  6887 ;;		None
  6888 ;; Return value:  Size  Location     Type
  6889 ;;                  1    wreg      enum E3338
  6890 ;; Registers used:
  6891 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6892 ;; Tracked objects:
  6893 ;;		On entry : 0/0
  6894 ;;		On exit  : 0/0
  6895 ;;		Unchanged: 0/0
  6896 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6897 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6898 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6899 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6900 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6901 ;;Total ram usage:        3 bytes
  6902 ;; Hardware stack levels used: 1
  6903 ;; Hardware stack levels required when called: 3
  6904 ;; This function calls:
  6905 ;;		Absolute function
  6906 ;;		_I2C_CallbackReturnReset
  6907 ;;		_I2C_CallbackReturnStop
  6908 ;;		_I2C_DO_RX_NACK_RESTART
  6909 ;;		_I2C_DO_RX_NACK_STOP
  6910 ;;		_I2C_MasterGetRxData
  6911 ;;		_I2C_MasterSendAck
  6912 ;;		_rd1RegCompleteHandler
  6913 ;;		_rd2RegCompleteHandler
  6914 ;;		_rdBlkRegCompleteHandler
  6915 ;;		_wr1RegCompleteHandler
  6916 ;;		_wr2RegCompleteHandler
  6917 ;; This function is called by:
  6918 ;;		_I2C_MasterFsm
  6919 ;; This function uses a non-reentrant model
  6920 ;;
  6921                           
  6922                           
  6923                           ;psect for function _I2C_DO_RX
  6924  02C1                     _I2C_DO_RX:
  6925  02C1                     i1l3039:	
  6926                           ;incstack = 0
  6927                           ; Regs used in _I2C_DO_RX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6928                           
  6929                           
  6930                           ;mcc_generated_files/i2c_master.c: 382:     *I2C_Status.data_ptr++ = I2C_MasterGetRxData
      +                          ();
  6931  02C1  318F  27DE  3182   	fcall	_I2C_MasterGetRxData
  6932  02C4  00FA               	movwf	??_I2C_DO_RX
  6933  02C5  0021               	movlb	1	; select bank1
  6934  02C6  0857               	movf	(low ((_I2C_Status| 0+23)))^(0+128),w
  6935  02C7  0086               	movwf	6
  6936  02C8  0187               	clrf	7
  6937  02C9  087A               	movf	??_I2C_DO_RX,w
  6938  02CA  0081               	movwf	1
  6939  02CB                     i1l3041:
  6940  02CB  3001               	movlw	1
  6941  02CC  00FA               	movwf	??_I2C_DO_RX
  6942  02CD  087A               	movf	??_I2C_DO_RX,w
  6943  02CE  07D7               	addwf	(low ((_I2C_Status| 0+23)))^(0+128),f
  6944  02CF                     i1l3043:
  6945                           
  6946                           ;mcc_generated_files/i2c_master.c: 383:     if(--I2C_Status.data_length)
  6947  02CF  3001               	movlw	1
  6948  02D0  02D8               	subwf	(_I2C_Status^(0+128)+24),f
  6949  02D1  3000               	movlw	0
  6950  02D2  3BD9               	subwfb	((_I2C_Status+1)^(0+128)+24),f
  6951  02D3  0858               	movf	(_I2C_Status^(0+128)+24),w
  6952  02D4  0459               	iorwf	((_I2C_Status+1)^(0+128)+24),w
  6953  02D5  1903               	btfsc	3,2
  6954  02D6  2AD8               	goto	u85_21
  6955  02D7  2AD9               	goto	u85_20
  6956  02D8                     u85_21:
  6957  02D8  2ADE               	goto	i1l595
  6958  02D9                     u85_20:
  6959  02D9                     i1l3045:
  6960                           
  6961                           ;mcc_generated_files/i2c_master.c: 384:     {;mcc_generated_files/i2c_master.c: 385:    
      +                               I2C_MasterSendAck();
  6962  02D9  318F  27F3  3182   	fcall	_I2C_MasterSendAck
  6963  02DC                     i1l3047:
  6964                           
  6965                           ;mcc_generated_files/i2c_master.c: 386:         return I2C_RCEN;
  6966  02DC  3005               	movlw	5
  6967  02DD  2B06               	goto	i1l596
  6968  02DE                     i1l595:	
  6969                           ;mcc_generated_files/i2c_master.c: 388:     else
  6970                           
  6971                           
  6972                           ;mcc_generated_files/i2c_master.c: 389:     {;mcc_generated_files/i2c_master.c: 390:    
      +                               I2C_Status.bufferFree = 1;
  6973  02DE  15DC               	bsf	(_I2C_Status^(0+128)+28),3
  6974                           
  6975                           ;mcc_generated_files/i2c_master.c: 391:         switch(I2C_Status.callbackTable[I2C_DATA
      +                          _COMPLETE](I2C_Status.callbackPayload[I2C_DATA_COMPLETE]))
  6976  02DF  2AE8               	goto	i1l3063
  6977  02E0                     i1l3053:
  6978                           
  6979                           ;mcc_generated_files/i2c_master.c: 395:                 return I2C_DO_RX_NACK_RESTART();
  6980  02E0  3187  27D4  3182   	fcall	_I2C_DO_RX_NACK_RESTART
  6981  02E3  2B06               	goto	i1l596
  6982  02E4                     i1l3057:
  6983                           
  6984                           ;mcc_generated_files/i2c_master.c: 399:                 return I2C_DO_RX_NACK_STOP();
  6985  02E4  3187  27D9  3182   	fcall	_I2C_DO_RX_NACK_STOP
  6986  02E7  2B06               	goto	i1l596
  6987  02E8                     i1l3063:
  6988  02E8  084C               	movf	(low ((_I2C_Status| 0+12)))^(0+128),w
  6989  02E9  00FA               	movwf	??_I2C_DO_RX
  6990  02EA  087A               	movf	??_I2C_DO_RX,w
  6991  02EB  00F9               	movwf	I2C_CallbackReturnReset@funPtr
  6992  02EC  0841               	movf	(_I2C_Status+1)^(0+128),w
  6993  02ED  008A               	movwf	10
  6994  02EE  0840               	movf	_I2C_Status^(0+128),w
  6995  02EF  000A               	callw
  6996  02F0  3182               	pagesel	$
  6997  02F1  00FB               	movwf	??_I2C_DO_RX+1
  6998  02F2  01FC               	clrf	??_I2C_DO_RX+2
  6999                           
  7000                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7001                           ; Switch size 1, requested type "simple"
  7002                           ; Number of cases is 1, Range of values is 0 to 0
  7003                           ; switch strategies available:
  7004                           ; Name         Instructions Cycles
  7005                           ; simple_byte            4     3 (average)
  7006                           ; direct_byte            8     6 (fixed)
  7007                           ; jumptable            260     6 (fixed)
  7008                           ;	Chosen strategy is simple_byte
  7009  02F3  087C               	movf	??_I2C_DO_RX+2,w
  7010  02F4  3A00               	xorlw	0	; case 0
  7011  02F5  1903               	skipnz
  7012  02F6  2AF8               	goto	i1l4543
  7013  02F7  2AE4               	goto	i1l3057
  7014  02F8                     i1l4543:
  7015                           
  7016                           ; Switch size 1, requested type "simple"
  7017                           ; Number of cases is 4, Range of values is 1 to 4
  7018                           ; switch strategies available:
  7019                           ; Name         Instructions Cycles
  7020                           ; simple_byte           13     7 (average)
  7021                           ; direct_byte           17     9 (fixed)
  7022                           ; jumptable            263     9 (fixed)
  7023                           ;	Chosen strategy is simple_byte
  7024  02F8  087B               	movf	??_I2C_DO_RX+1,w
  7025  02F9  3A01               	xorlw	1	; case 1
  7026  02FA  1903               	skipnz
  7027  02FB  2AE4               	goto	i1l3057
  7028  02FC  3A03               	xorlw	3	; case 2
  7029  02FD  1903               	skipnz
  7030  02FE  2AE0               	goto	i1l3053
  7031  02FF  3A01               	xorlw	1	; case 3
  7032  0300  1903               	skipnz
  7033  0301  2AE0               	goto	i1l3053
  7034  0302  3A07               	xorlw	7	; case 4
  7035  0303  1903               	skipnz
  7036  0304  2AE4               	goto	i1l3057
  7037  0305  2AE4               	goto	i1l3057
  7038  0306                     i1l596:
  7039  0306  0008               	return
  7040  0307                     __end_of_I2C_DO_RX:
  7041                           
  7042                           	psect	text48
  7043  026C                     __ptext48:	
  7044 ;; *************** function _I2C_DO_TX *****************
  7045 ;; Defined at:
  7046 ;;		line 356 in file "mcc_generated_files/i2c_master.c"
  7047 ;; Parameters:    Size  Location     Type
  7048 ;;		None
  7049 ;; Auto vars:     Size  Location     Type
  7050 ;;		None
  7051 ;; Return value:  Size  Location     Type
  7052 ;;                  1    wreg      enum E3338
  7053 ;; Registers used:
  7054 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7055 ;; Tracked objects:
  7056 ;;		On entry : 0/0
  7057 ;;		On exit  : 0/0
  7058 ;;		Unchanged: 0/0
  7059 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7060 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7061 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7062 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7063 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7064 ;;Total ram usage:        3 bytes
  7065 ;; Hardware stack levels used: 1
  7066 ;; Hardware stack levels required when called: 3
  7067 ;; This function calls:
  7068 ;;		Absolute function
  7069 ;;		_I2C_CallbackReturnReset
  7070 ;;		_I2C_CallbackReturnStop
  7071 ;;		_I2C_DO_SEND_RESTART_READ
  7072 ;;		_I2C_DO_SEND_RESTART_WRITE
  7073 ;;		_I2C_DO_SEND_STOP
  7074 ;;		_I2C_MasterIsNack
  7075 ;;		_I2C_MasterSendTxData
  7076 ;;		_rd1RegCompleteHandler
  7077 ;;		_rd2RegCompleteHandler
  7078 ;;		_rdBlkRegCompleteHandler
  7079 ;;		_wr1RegCompleteHandler
  7080 ;;		_wr2RegCompleteHandler
  7081 ;; This function is called by:
  7082 ;;		_I2C_MasterFsm
  7083 ;; This function uses a non-reentrant model
  7084 ;;
  7085                           
  7086                           
  7087                           ;psect for function _I2C_DO_TX
  7088  026C                     _I2C_DO_TX:
  7089  026C                     i1l3005:	
  7090                           ;incstack = 0
  7091                           ; Regs used in _I2C_DO_TX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7092                           
  7093                           
  7094                           ;mcc_generated_files/i2c_master.c: 358:     if(I2C_MasterIsNack())
  7095  026C  3187  27C9  3182   	fcall	_I2C_MasterIsNack
  7096  026F  3A00               	xorlw	0
  7097  0270  1903               	skipnz
  7098  0271  2A73               	goto	u83_21
  7099  0272  2A74               	goto	u83_20
  7100  0273                     u83_21:
  7101  0273  2AA4               	goto	i1l579
  7102  0274                     u83_20:
  7103  0274  2A81               	goto	i1l3023
  7104  0275                     i1l3009:
  7105                           
  7106                           ;mcc_generated_files/i2c_master.c: 363:                 return I2C_DO_SEND_RESTART_READ(
      +                          );
  7107  0275  3187  27F2  3182   	fcall	_I2C_DO_SEND_RESTART_READ
  7108  0278  2AC0               	goto	i1l582
  7109  0279                     i1l3013:
  7110                           
  7111                           ;mcc_generated_files/i2c_master.c: 365:                   return I2C_DO_SEND_RESTART_WRI
      +                          TE();
  7112  0279  3187  27ED  3182   	fcall	_I2C_DO_SEND_RESTART_WRITE
  7113  027C  2AC0               	goto	i1l582
  7114  027D                     i1l3017:
  7115                           
  7116                           ;mcc_generated_files/i2c_master.c: 369:                 return I2C_DO_SEND_STOP();
  7117  027D  3187  27E3  3182   	fcall	_I2C_DO_SEND_STOP
  7118  0280  2AC0               	goto	i1l582
  7119  0281                     i1l3023:
  7120  0281  0021               	movlb	1	; select bank1
  7121  0282  084F               	movf	(low ((_I2C_Status| 0+15)))^(0+128),w
  7122  0283  00FA               	movwf	??_I2C_DO_TX
  7123  0284  087A               	movf	??_I2C_DO_TX,w
  7124  0285  00F9               	movwf	I2C_CallbackReturnReset@funPtr
  7125  0286  3006               	movlw	6
  7126  0287  3EC0               	addlw	(low (_I2C_Status| 0))& (0+255)
  7127  0288  0086               	movwf	6
  7128  0289  0187               	clrf	7
  7129  028A  3F41               	moviw [1]fsr1
  7130  028B  008A               	movwf	10
  7131  028C  3F40               	moviw [0]fsr1
  7132  028D  000A               	callw
  7133  028E  3182               	pagesel	$
  7134  028F  00FB               	movwf	??_I2C_DO_TX+1
  7135  0290  01FC               	clrf	??_I2C_DO_TX+2
  7136                           
  7137                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7138                           ; Switch size 1, requested type "simple"
  7139                           ; Number of cases is 1, Range of values is 0 to 0
  7140                           ; switch strategies available:
  7141                           ; Name         Instructions Cycles
  7142                           ; simple_byte            4     3 (average)
  7143                           ; direct_byte            8     6 (fixed)
  7144                           ; jumptable            260     6 (fixed)
  7145                           ;	Chosen strategy is simple_byte
  7146  0291  087C               	movf	??_I2C_DO_TX+2,w
  7147  0292  3A00               	xorlw	0	; case 0
  7148  0293  1903               	skipnz
  7149  0294  2A96               	goto	i1l4545
  7150  0295  2A7D               	goto	i1l3017
  7151  0296                     i1l4545:
  7152                           
  7153                           ; Switch size 1, requested type "simple"
  7154                           ; Number of cases is 4, Range of values is 1 to 4
  7155                           ; switch strategies available:
  7156                           ; Name         Instructions Cycles
  7157                           ; simple_byte           13     7 (average)
  7158                           ; direct_byte           17     9 (fixed)
  7159                           ; jumptable            263     9 (fixed)
  7160                           ;	Chosen strategy is simple_byte
  7161  0296  087B               	movf	??_I2C_DO_TX+1,w
  7162  0297  3A01               	xorlw	1	; case 1
  7163  0298  1903               	skipnz
  7164  0299  2A7D               	goto	i1l3017
  7165  029A  3A03               	xorlw	3	; case 2
  7166  029B  1903               	skipnz
  7167  029C  2A75               	goto	i1l3009
  7168  029D  3A01               	xorlw	1	; case 3
  7169  029E  1903               	skipnz
  7170  029F  2A79               	goto	i1l3013
  7171  02A0  3A07               	xorlw	7	; case 4
  7172  02A1  1903               	skipnz
  7173  02A2  2A7D               	goto	i1l3017
  7174  02A3  2A7D               	goto	i1l3017
  7175  02A4                     i1l579:	
  7176                           ;mcc_generated_files/i2c_master.c: 372:     else
  7177                           
  7178                           
  7179                           ;mcc_generated_files/i2c_master.c: 373:     {;mcc_generated_files/i2c_master.c: 374:    
      +                               I2C_Status.addressNackCheck = 0;
  7180  02A4  0021               	movlb	1	; select bank1
  7181  02A5  105C               	bcf	(_I2C_Status^(0+128)+28),0
  7182  02A6                     i1l3025:
  7183                           
  7184                           ;mcc_generated_files/i2c_master.c: 375:         I2C_MasterSendTxData(*I2C_Status.data_pt
      +                          r++);
  7185  02A6  3017               	movlw	23
  7186  02A7  3EC0               	addlw	(low (_I2C_Status| 0))& (0+255)
  7187  02A8  0086               	movwf	6
  7188  02A9  0187               	clrf	7
  7189  02AA  3F40               	moviw [0]fsr1
  7190  02AB  0084               	movwf	4
  7191  02AC  0185               	clrf	5
  7192  02AD  0A81               	incf	1,f
  7193  02AE  0800               	movf	0,w
  7194  02AF  318F  27FB  3182   	fcall	_I2C_MasterSendTxData
  7195  02B2                     i1l3027:
  7196                           
  7197                           ;mcc_generated_files/i2c_master.c: 376:         return (--I2C_Status.data_length)?I2C_TX
      +                          :I2C_TX_EMPTY;
  7198  02B2  3001               	movlw	1
  7199  02B3  0021               	movlb	1	; select bank1
  7200  02B4  02D8               	subwf	(_I2C_Status^(0+128)+24),f
  7201  02B5  3000               	movlw	0
  7202  02B6  3BD9               	subwfb	((_I2C_Status+1)^(0+128)+24),f
  7203  02B7  0858               	movf	(_I2C_Status^(0+128)+24),w
  7204  02B8  0459               	iorwf	((_I2C_Status+1)^(0+128)+24),w
  7205  02B9  1D03               	btfss	3,2
  7206  02BA  2ABC               	goto	u84_21
  7207  02BB  2ABD               	goto	u84_20
  7208  02BC                     u84_21:
  7209  02BC  2ABF               	goto	i1l3031
  7210  02BD                     u84_20:
  7211  02BD                     i1l3029:
  7212  02BD  3006               	movlw	6
  7213  02BE  2AC0               	goto	i1l582
  7214  02BF                     i1l3031:
  7215  02BF  3003               	movlw	3
  7216  02C0                     i1l582:
  7217  02C0  0008               	return
  7218  02C1                     __end_of_I2C_DO_TX:
  7219                           
  7220                           	psect	text49
  7221  0783                     __ptext49:	
  7222 ;; *************** function _I2C_DO_SEND_ADR_WRITE *****************
  7223 ;; Defined at:
  7224 ;;		line 349 in file "mcc_generated_files/i2c_master.c"
  7225 ;; Parameters:    Size  Location     Type
  7226 ;;		None
  7227 ;; Auto vars:     Size  Location     Type
  7228 ;;		None
  7229 ;; Return value:  Size  Location     Type
  7230 ;;                  1    wreg      enum E3338
  7231 ;; Registers used:
  7232 ;;		wreg, status,2, status,0, pclath, cstack
  7233 ;; Tracked objects:
  7234 ;;		On entry : 0/0
  7235 ;;		On exit  : 0/0
  7236 ;;		Unchanged: 0/0
  7237 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7238 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7239 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7240 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7241 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7242 ;;Total ram usage:        0 bytes
  7243 ;; Hardware stack levels used: 1
  7244 ;; Hardware stack levels required when called: 1
  7245 ;; This function calls:
  7246 ;;		_I2C_MasterSendTxData
  7247 ;; This function is called by:
  7248 ;;		_I2C_MasterFsm
  7249 ;; This function uses a non-reentrant model
  7250 ;;
  7251                           
  7252                           
  7253                           ;psect for function _I2C_DO_SEND_ADR_WRITE
  7254  0783                     _I2C_DO_SEND_ADR_WRITE:
  7255  0783                     i1l2997:	
  7256                           ;incstack = 0
  7257                           ; Regs used in _I2C_DO_SEND_ADR_WRITE: [wreg+status,2+status,0+pclath+cstack]
  7258                           
  7259                           
  7260                           ;mcc_generated_files/i2c_master.c: 351:     I2C_Status.addressNackCheck = 1;
  7261  0783  0021               	movlb	1	; select bank1
  7262  0784  145C               	bsf	(_I2C_Status^(0+128)+28),0
  7263  0785                     i1l2999:
  7264                           
  7265                           ;mcc_generated_files/i2c_master.c: 352:     I2C_MasterSendTxData((uint8_t) (I2C_Status.a
      +                          ddress << 1));
  7266  0785  3556               	lslf	(_I2C_Status^(0+128)+22),w
  7267  0786  318F  27FB  3187   	fcall	_I2C_MasterSendTxData
  7268  0789                     i1l3001:
  7269                           
  7270                           ;mcc_generated_files/i2c_master.c: 353:     return I2C_TX;
  7271  0789  3003               	movlw	3
  7272  078A                     i1l576:
  7273  078A  0008               	return
  7274  078B                     __end_of_I2C_DO_SEND_ADR_WRITE:
  7275                           
  7276                           	psect	text50
  7277  076A                     __ptext50:	
  7278 ;; *************** function _I2C_DO_SEND_ADR_READ *****************
  7279 ;; Defined at:
  7280 ;;		line 342 in file "mcc_generated_files/i2c_master.c"
  7281 ;; Parameters:    Size  Location     Type
  7282 ;;		None
  7283 ;; Auto vars:     Size  Location     Type
  7284 ;;		None
  7285 ;; Return value:  Size  Location     Type
  7286 ;;                  1    wreg      enum E3338
  7287 ;; Registers used:
  7288 ;;		wreg, status,2, status,0, pclath, cstack
  7289 ;; Tracked objects:
  7290 ;;		On entry : 0/0
  7291 ;;		On exit  : 0/0
  7292 ;;		Unchanged: 0/0
  7293 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7294 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7295 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7296 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7297 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7298 ;;Total ram usage:        0 bytes
  7299 ;; Hardware stack levels used: 1
  7300 ;; Hardware stack levels required when called: 1
  7301 ;; This function calls:
  7302 ;;		_I2C_MasterSendTxData
  7303 ;; This function is called by:
  7304 ;;		_I2C_MasterFsm
  7305 ;; This function uses a non-reentrant model
  7306 ;;
  7307                           
  7308                           
  7309                           ;psect for function _I2C_DO_SEND_ADR_READ
  7310  076A                     _I2C_DO_SEND_ADR_READ:
  7311  076A                     i1l2989:	
  7312                           ;incstack = 0
  7313                           ; Regs used in _I2C_DO_SEND_ADR_READ: [wreg+status,2+status,0+pclath+cstack]
  7314                           
  7315                           
  7316                           ;mcc_generated_files/i2c_master.c: 344:     I2C_Status.addressNackCheck = 1;
  7317  076A  0021               	movlb	1	; select bank1
  7318  076B  145C               	bsf	(_I2C_Status^(0+128)+28),0
  7319  076C                     i1l2991:
  7320                           
  7321                           ;mcc_generated_files/i2c_master.c: 345:     I2C_MasterSendTxData((uint8_t) (I2C_Status.a
      +                          ddress << 1 | 1));
  7322  076C  1403               	setc
  7323  076D  0D56               	rlf	(_I2C_Status^(0+128)+22),w
  7324  076E  318F  27FB  3187   	fcall	_I2C_MasterSendTxData
  7325  0771                     i1l2993:
  7326                           
  7327                           ;mcc_generated_files/i2c_master.c: 346:     return I2C_RCEN;
  7328  0771  3005               	movlw	5
  7329  0772                     i1l573:
  7330  0772  0008               	return
  7331  0773                     __end_of_I2C_DO_SEND_ADR_READ:
  7332                           
  7333                           	psect	text51
  7334  07F7                     __ptext51:	
  7335 ;; *************** function _I2C_DO_IDLE *****************
  7336 ;; Defined at:
  7337 ;;		line 335 in file "mcc_generated_files/i2c_master.c"
  7338 ;; Parameters:    Size  Location     Type
  7339 ;;		None
  7340 ;; Auto vars:     Size  Location     Type
  7341 ;;		None
  7342 ;; Return value:  Size  Location     Type
  7343 ;;                  1    wreg      enum E3338
  7344 ;; Registers used:
  7345 ;;		wreg, status,2
  7346 ;; Tracked objects:
  7347 ;;		On entry : 0/0
  7348 ;;		On exit  : 0/0
  7349 ;;		Unchanged: 0/0
  7350 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7351 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7352 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7353 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7354 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7355 ;;Total ram usage:        0 bytes
  7356 ;; Hardware stack levels used: 1
  7357 ;; This function calls:
  7358 ;;		Nothing
  7359 ;; This function is called by:
  7360 ;;		_I2C_MasterFsm
  7361 ;; This function uses a non-reentrant model
  7362 ;;
  7363                           
  7364                           
  7365                           ;psect for function _I2C_DO_IDLE
  7366  07F7                     _I2C_DO_IDLE:
  7367  07F7                     i1l2981:	
  7368                           ;incstack = 0
  7369                           ; Regs used in _I2C_DO_IDLE: [wreg+status,2]
  7370                           
  7371                           
  7372                           ;mcc_generated_files/i2c_master.c: 337:     I2C_Status.busy = 0;
  7373  07F7  0021               	movlb	1	; select bank1
  7374  07F8  10DC               	bcf	(_I2C_Status^(0+128)+28),1
  7375  07F9                     i1l2983:
  7376                           
  7377                           ;mcc_generated_files/i2c_master.c: 338:     I2C_Status.error = I2C_NOERR;
  7378  07F9  01DB               	clrf	(_I2C_Status^(0+128)+27)
  7379  07FA                     i1l2985:
  7380                           
  7381                           ;mcc_generated_files/i2c_master.c: 339:     return I2C_RESET;
  7382  07FA  300E               	movlw	14
  7383  07FB                     i1l570:
  7384  07FB  0008               	return
  7385  07FC                     __end_of_I2C_DO_IDLE:
  7386                           
  7387                           	psect	text52
  7388  0427                     __ptext52:	
  7389 ;; *************** function _I2C_DO_TX_EMPTY *****************
  7390 ;; Defined at:
  7391 ;;		line 411 in file "mcc_generated_files/i2c_master.c"
  7392 ;; Parameters:    Size  Location     Type
  7393 ;;		None
  7394 ;; Auto vars:     Size  Location     Type
  7395 ;;		None
  7396 ;; Return value:  Size  Location     Type
  7397 ;;                  1    wreg      enum E3338
  7398 ;; Registers used:
  7399 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7400 ;; Tracked objects:
  7401 ;;		On entry : 0/0
  7402 ;;		On exit  : 0/0
  7403 ;;		Unchanged: 0/0
  7404 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7405 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7406 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7407 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7408 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7409 ;;Total ram usage:        3 bytes
  7410 ;; Hardware stack levels used: 1
  7411 ;; Hardware stack levels required when called: 3
  7412 ;; This function calls:
  7413 ;;		Absolute function
  7414 ;;		_I2C_CallbackReturnReset
  7415 ;;		_I2C_CallbackReturnStop
  7416 ;;		_I2C_DO_SEND_RESTART
  7417 ;;		_I2C_DO_SEND_STOP
  7418 ;;		_I2C_MasterSetIrq
  7419 ;;		_rd1RegCompleteHandler
  7420 ;;		_rd2RegCompleteHandler
  7421 ;;		_rdBlkRegCompleteHandler
  7422 ;;		_wr1RegCompleteHandler
  7423 ;;		_wr2RegCompleteHandler
  7424 ;; This function is called by:
  7425 ;;		_I2C_MasterFsm
  7426 ;; This function uses a non-reentrant model
  7427 ;;
  7428                           
  7429                           
  7430                           ;psect for function _I2C_DO_TX_EMPTY
  7431  0427                     _I2C_DO_TX_EMPTY:
  7432  0427                     i1l3079:	
  7433                           ;incstack = 0
  7434                           ; Regs used in _I2C_DO_TX_EMPTY: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7435                           
  7436                           
  7437                           ;mcc_generated_files/i2c_master.c: 413:     I2C_Status.bufferFree = 1;
  7438  0427  0021               	movlb	1	; select bank1
  7439  0428  15DC               	bsf	(_I2C_Status^(0+128)+28),3
  7440                           
  7441                           ;mcc_generated_files/i2c_master.c: 414:     switch(I2C_Status.callbackTable[I2C_DATA_COM
      +                          PLETE](I2C_Status.callbackPayload[I2C_DATA_COMPLETE]))
  7442  0429  2C37               	goto	i1l3097
  7443  042A                     i1l3081:
  7444                           
  7445                           ;mcc_generated_files/i2c_master.c: 418:             return I2C_DO_SEND_RESTART();
  7446  042A  3187  27E8  3184   	fcall	_I2C_DO_SEND_RESTART
  7447  042D  2C55               	goto	i1l613
  7448  042E                     i1l3085:
  7449                           
  7450                           ;mcc_generated_files/i2c_master.c: 420:             I2C_MasterSetIrq();
  7451  042E  318F  27E1  3184   	fcall	_I2C_MasterSetIrq
  7452  0431                     i1l3087:
  7453                           
  7454                           ;mcc_generated_files/i2c_master.c: 421:             return I2C_TX;
  7455  0431  3003               	movlw	3
  7456  0432  2C55               	goto	i1l613
  7457  0433                     i1l3091:
  7458                           
  7459                           ;mcc_generated_files/i2c_master.c: 424:             return I2C_DO_SEND_STOP();
  7460  0433  3187  27E3  3184   	fcall	_I2C_DO_SEND_STOP
  7461  0436  2C55               	goto	i1l613
  7462  0437                     i1l3097:
  7463  0437  084C               	movf	(low ((_I2C_Status| 0+12)))^(0+128),w
  7464  0438  00FA               	movwf	??_I2C_DO_TX_EMPTY
  7465  0439  087A               	movf	??_I2C_DO_TX_EMPTY,w
  7466  043A  00F9               	movwf	I2C_CallbackReturnReset@funPtr
  7467  043B  0841               	movf	(_I2C_Status+1)^(0+128),w
  7468  043C  008A               	movwf	10
  7469  043D  0840               	movf	_I2C_Status^(0+128),w
  7470  043E  000A               	callw
  7471  043F  3184               	pagesel	$
  7472  0440  00FB               	movwf	??_I2C_DO_TX_EMPTY+1
  7473  0441  01FC               	clrf	??_I2C_DO_TX_EMPTY+2
  7474                           
  7475                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7476                           ; Switch size 1, requested type "simple"
  7477                           ; Number of cases is 1, Range of values is 0 to 0
  7478                           ; switch strategies available:
  7479                           ; Name         Instructions Cycles
  7480                           ; simple_byte            4     3 (average)
  7481                           ; direct_byte            8     6 (fixed)
  7482                           ; jumptable            260     6 (fixed)
  7483                           ;	Chosen strategy is simple_byte
  7484  0442  087C               	movf	??_I2C_DO_TX_EMPTY+2,w
  7485  0443  3A00               	xorlw	0	; case 0
  7486  0444  1903               	skipnz
  7487  0445  2C47               	goto	i1l4547
  7488  0446  2C33               	goto	i1l3091
  7489  0447                     i1l4547:
  7490                           
  7491                           ; Switch size 1, requested type "simple"
  7492                           ; Number of cases is 4, Range of values is 1 to 4
  7493                           ; switch strategies available:
  7494                           ; Name         Instructions Cycles
  7495                           ; simple_byte           13     7 (average)
  7496                           ; direct_byte           17     9 (fixed)
  7497                           ; jumptable            263     9 (fixed)
  7498                           ;	Chosen strategy is simple_byte
  7499  0447  087B               	movf	??_I2C_DO_TX_EMPTY+1,w
  7500  0448  3A01               	xorlw	1	; case 1
  7501  0449  1903               	skipnz
  7502  044A  2C33               	goto	i1l3091
  7503  044B  3A03               	xorlw	3	; case 2
  7504  044C  1903               	skipnz
  7505  044D  2C2A               	goto	i1l3081
  7506  044E  3A01               	xorlw	1	; case 3
  7507  044F  1903               	skipnz
  7508  0450  2C2A               	goto	i1l3081
  7509  0451  3A07               	xorlw	7	; case 4
  7510  0452  1903               	skipnz
  7511  0453  2C2E               	goto	i1l3085
  7512  0454  2C33               	goto	i1l3091
  7513  0455                     i1l613:
  7514  0455  0008               	return
  7515  0456                     __end_of_I2C_DO_TX_EMPTY:
  7516                           
  7517                           	psect	text53
  7518  0FE1                     __ptext53:	
  7519 ;; *************** function _I2C_MasterSetIrq *****************
  7520 ;; Defined at:
  7521 ;;		line 647 in file "mcc_generated_files/i2c_master.c"
  7522 ;; Parameters:    Size  Location     Type
  7523 ;;		None
  7524 ;; Auto vars:     Size  Location     Type
  7525 ;;		None
  7526 ;; Return value:  Size  Location     Type
  7527 ;;                  1    wreg      void 
  7528 ;; Registers used:
  7529 ;;		None
  7530 ;; Tracked objects:
  7531 ;;		On entry : 0/0
  7532 ;;		On exit  : 0/0
  7533 ;;		Unchanged: 0/0
  7534 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7535 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7536 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7537 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7538 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7539 ;;Total ram usage:        0 bytes
  7540 ;; Hardware stack levels used: 1
  7541 ;; This function calls:
  7542 ;;		Nothing
  7543 ;; This function is called by:
  7544 ;;		_I2C_DO_TX_EMPTY
  7545 ;; This function uses a non-reentrant model
  7546 ;;
  7547                           
  7548                           
  7549                           ;psect for function _I2C_MasterSetIrq
  7550  0FE1                     _I2C_MasterSetIrq:
  7551  0FE1                     i1l2933:	
  7552                           ;incstack = 0
  7553                           ; Regs used in _I2C_MasterSetIrq: []
  7554                           
  7555                           
  7556                           ;mcc_generated_files/i2c_master.c: 649:     PIR1bits.SSPIF = 1;
  7557  0FE1  0020               	movlb	0	; select bank0
  7558  0FE2  1591               	bsf	17,3	;volatile
  7559  0FE3                     i1l733:
  7560  0FE3  0008               	return
  7561  0FE4                     __end_of_I2C_MasterSetIrq:
  7562                           
  7563                           	psect	text54
  7564  07C9                     __ptext54:	
  7565 ;; *************** function _I2C_MasterIsNack *****************
  7566 ;; Defined at:
  7567 ;;		line 599 in file "mcc_generated_files/i2c_master.c"
  7568 ;; Parameters:    Size  Location     Type
  7569 ;;		None
  7570 ;; Auto vars:     Size  Location     Type
  7571 ;;		None
  7572 ;; Return value:  Size  Location     Type
  7573 ;;                  1    wreg      _Bool 
  7574 ;; Registers used:
  7575 ;;		wreg, status,2, status,0
  7576 ;; Tracked objects:
  7577 ;;		On entry : 0/0
  7578 ;;		On exit  : 0/0
  7579 ;;		Unchanged: 0/0
  7580 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7581 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7582 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7583 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7584 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7585 ;;Total ram usage:        0 bytes
  7586 ;; Hardware stack levels used: 1
  7587 ;; This function calls:
  7588 ;;		Nothing
  7589 ;; This function is called by:
  7590 ;;		_I2C_MasterFsm
  7591 ;;		_I2C_DO_TX
  7592 ;; This function uses a non-reentrant model
  7593 ;;
  7594                           
  7595                           
  7596                           ;psect for function _I2C_MasterIsNack
  7597  07C9                     _I2C_MasterIsNack:
  7598  07C9                     i1l2883:	
  7599                           ;incstack = 0
  7600                           ; Regs used in _I2C_MasterIsNack: [wreg+status,2+status,0]
  7601                           
  7602                           
  7603                           ;mcc_generated_files/i2c_master.c: 601:     return SSPCON2bits.ACKSTAT;
  7604  07C9  0024               	movlb	4	; select bank4
  7605  07CA  0E16               	swapf	22,w	;volatile
  7606  07CB  0C89               	rrf	9,f
  7607  07CC  0C89               	rrf	9,f
  7608  07CD  3901               	andlw	1
  7609  07CE                     i1l706:
  7610  07CE  0008               	return
  7611  07CF                     __end_of_I2C_MasterIsNack:
  7612                           
  7613                           	psect	text55
  7614  0FFB                     __ptext55:	
  7615 ;; *************** function _I2C_MasterSendTxData *****************
  7616 ;; Defined at:
  7617 ;;		line 569 in file "mcc_generated_files/i2c_master.c"
  7618 ;; Parameters:    Size  Location     Type
  7619 ;;  data            1    wreg     unsigned char 
  7620 ;; Auto vars:     Size  Location     Type
  7621 ;;  data            1    0[COMMON] unsigned char 
  7622 ;; Return value:  Size  Location     Type
  7623 ;;                  1    wreg      void 
  7624 ;; Registers used:
  7625 ;;		wreg
  7626 ;; Tracked objects:
  7627 ;;		On entry : 0/0
  7628 ;;		On exit  : 0/0
  7629 ;;		Unchanged: 0/0
  7630 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7631 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7632 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7633 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7634 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7635 ;;Total ram usage:        1 bytes
  7636 ;; Hardware stack levels used: 1
  7637 ;; This function calls:
  7638 ;;		Nothing
  7639 ;; This function is called by:
  7640 ;;		_I2C_DO_SEND_ADR_READ
  7641 ;;		_I2C_DO_SEND_ADR_WRITE
  7642 ;;		_I2C_DO_TX
  7643 ;; This function uses a non-reentrant model
  7644 ;;
  7645                           
  7646                           
  7647                           ;psect for function _I2C_MasterSendTxData
  7648  0FFB                     _I2C_MasterSendTxData:
  7649                           
  7650                           ;incstack = 0
  7651                           ; Regs used in _I2C_MasterSendTxData: [wreg]
  7652                           ;I2C_MasterSendTxData@data stored from wreg
  7653  0FFB  00F0               	movwf	I2C_MasterSendTxData@data
  7654  0FFC                     i1l2887:
  7655                           
  7656                           ;mcc_generated_files/i2c_master.c: 569: static __attribute__((inline)) void I2C_MasterSe
      +                          ndTxData(uint8_t data);mcc_generated_files/i2c_master.c: 570: {;mcc_generated_files/i2c_
      +                          master.c: 571:     SSPBUF = data;
  7657  0FFC  0870               	movf	I2C_MasterSendTxData@data,w
  7658  0FFD  0024               	movlb	4	; select bank4
  7659  0FFE  0091               	movwf	17	;volatile
  7660  0FFF                     i1l688:
  7661  0FFF  0008               	return
  7662  1000                     __end_of_I2C_MasterSendTxData:
  7663                           
  7664                           	psect	text56
  7665  0FF3                     __ptext56:	
  7666 ;; *************** function _I2C_MasterSendAck *****************
  7667 ;; Defined at:
  7668 ;;		line 604 in file "mcc_generated_files/i2c_master.c"
  7669 ;; Parameters:    Size  Location     Type
  7670 ;;		None
  7671 ;; Auto vars:     Size  Location     Type
  7672 ;;		None
  7673 ;; Return value:  Size  Location     Type
  7674 ;;                  1    wreg      void 
  7675 ;; Registers used:
  7676 ;;		None
  7677 ;; Tracked objects:
  7678 ;;		On entry : 0/0
  7679 ;;		On exit  : 0/0
  7680 ;;		Unchanged: 0/0
  7681 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7682 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7683 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7684 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7685 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7686 ;;Total ram usage:        0 bytes
  7687 ;; Hardware stack levels used: 1
  7688 ;; This function calls:
  7689 ;;		Nothing
  7690 ;; This function is called by:
  7691 ;;		_I2C_DO_RX
  7692 ;;		_I2C_DO_RX_ACK
  7693 ;; This function uses a non-reentrant model
  7694 ;;
  7695                           
  7696                           
  7697                           ;psect for function _I2C_MasterSendAck
  7698  0FF3                     _I2C_MasterSendAck:
  7699  0FF3                     i1l2911:	
  7700                           ;incstack = 0
  7701                           ; Regs used in _I2C_MasterSendAck: []
  7702                           
  7703                           
  7704                           ;mcc_generated_files/i2c_master.c: 606:     SSPCON2bits.ACKDT = 0;
  7705  0FF3  0024               	movlb	4	; select bank4
  7706  0FF4  1296               	bcf	22,5	;volatile
  7707                           
  7708                           ;mcc_generated_files/i2c_master.c: 607:     SSPCON2bits.ACKEN = 1;
  7709  0FF5  1616               	bsf	22,4	;volatile
  7710  0FF6                     i1l709:
  7711  0FF6  0008               	return
  7712  0FF7                     __end_of_I2C_MasterSendAck:
  7713                           
  7714                           	psect	text57
  7715  0FDE                     __ptext57:	
  7716 ;; *************** function _I2C_MasterGetRxData *****************
  7717 ;; Defined at:
  7718 ;;		line 564 in file "mcc_generated_files/i2c_master.c"
  7719 ;; Parameters:    Size  Location     Type
  7720 ;;		None
  7721 ;; Auto vars:     Size  Location     Type
  7722 ;;		None
  7723 ;; Return value:  Size  Location     Type
  7724 ;;                  1    wreg      unsigned char 
  7725 ;; Registers used:
  7726 ;;		wreg
  7727 ;; Tracked objects:
  7728 ;;		On entry : 0/0
  7729 ;;		On exit  : 0/0
  7730 ;;		Unchanged: 0/0
  7731 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7732 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7733 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7734 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7735 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7736 ;;Total ram usage:        0 bytes
  7737 ;; Hardware stack levels used: 1
  7738 ;; This function calls:
  7739 ;;		Nothing
  7740 ;; This function is called by:
  7741 ;;		_I2C_DO_RX
  7742 ;; This function uses a non-reentrant model
  7743 ;;
  7744                           
  7745                           
  7746                           ;psect for function _I2C_MasterGetRxData
  7747  0FDE                     _I2C_MasterGetRxData:
  7748  0FDE                     i1l2907:	
  7749                           ;incstack = 0
  7750                           ; Regs used in _I2C_MasterGetRxData: [wreg]
  7751                           
  7752                           
  7753                           ;mcc_generated_files/i2c_master.c: 566:     return SSPBUF;
  7754  0FDE  0024               	movlb	4	; select bank4
  7755  0FDF  0811               	movf	17,w	;volatile
  7756  0FE0                     i1l685:
  7757  0FE0  0008               	return
  7758  0FE1                     __end_of_I2C_MasterGetRxData:
  7759                           
  7760                           	psect	text58
  7761  0FEF                     __ptext58:	
  7762 ;; *************** function _I2C_MasterSendNack *****************
  7763 ;; Defined at:
  7764 ;;		line 610 in file "mcc_generated_files/i2c_master.c"
  7765 ;; Parameters:    Size  Location     Type
  7766 ;;		None
  7767 ;; Auto vars:     Size  Location     Type
  7768 ;;		None
  7769 ;; Return value:  Size  Location     Type
  7770 ;;                  1    wreg      void 
  7771 ;; Registers used:
  7772 ;;		None
  7773 ;; Tracked objects:
  7774 ;;		On entry : 0/0
  7775 ;;		On exit  : 0/0
  7776 ;;		Unchanged: 0/0
  7777 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7778 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7779 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7780 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7781 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7782 ;;Total ram usage:        0 bytes
  7783 ;; Hardware stack levels used: 1
  7784 ;; This function calls:
  7785 ;;		Nothing
  7786 ;; This function is called by:
  7787 ;;		_I2C_DO_RX_NACK_STOP
  7788 ;;		_I2C_DO_RX_NACK_RESTART
  7789 ;; This function uses a non-reentrant model
  7790 ;;
  7791                           
  7792                           
  7793                           ;psect for function _I2C_MasterSendNack
  7794  0FEF                     _I2C_MasterSendNack:
  7795  0FEF                     i1l2831:	
  7796                           ;incstack = 0
  7797                           ; Regs used in _I2C_MasterSendNack: []
  7798                           
  7799                           
  7800                           ;mcc_generated_files/i2c_master.c: 612:     SSPCON2bits.ACKDT = 1;
  7801  0FEF  0024               	movlb	4	; select bank4
  7802  0FF0  1696               	bsf	22,5	;volatile
  7803                           
  7804                           ;mcc_generated_files/i2c_master.c: 613:     SSPCON2bits.ACKEN = 1;
  7805  0FF1  1616               	bsf	22,4	;volatile
  7806  0FF2                     i1l712:
  7807  0FF2  0008               	return
  7808  0FF3                     __end_of_I2C_MasterSendNack:
  7809                           
  7810                           	psect	text59
  7811  0FDB                     __ptext59:	
  7812 ;; *************** function _I2C_MasterStartRx *****************
  7813 ;; Defined at:
  7814 ;;		line 584 in file "mcc_generated_files/i2c_master.c"
  7815 ;; Parameters:    Size  Location     Type
  7816 ;;		None
  7817 ;; Auto vars:     Size  Location     Type
  7818 ;;		None
  7819 ;; Return value:  Size  Location     Type
  7820 ;;                  1    wreg      void 
  7821 ;; Registers used:
  7822 ;;		None
  7823 ;; Tracked objects:
  7824 ;;		On entry : 0/0
  7825 ;;		On exit  : 0/0
  7826 ;;		Unchanged: 0/0
  7827 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7828 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7829 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7830 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7831 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7832 ;;Total ram usage:        0 bytes
  7833 ;; Hardware stack levels used: 1
  7834 ;; This function calls:
  7835 ;;		Nothing
  7836 ;; This function is called by:
  7837 ;;		_I2C_DO_RCEN
  7838 ;; This function uses a non-reentrant model
  7839 ;;
  7840                           
  7841                           
  7842                           ;psect for function _I2C_MasterStartRx
  7843  0FDB                     _I2C_MasterStartRx:
  7844  0FDB                     i1l2925:	
  7845                           ;incstack = 0
  7846                           ; Regs used in _I2C_MasterStartRx: []
  7847                           
  7848                           
  7849                           ;mcc_generated_files/i2c_master.c: 586:     SSPCON2bits.RCEN = 1;
  7850  0FDB  0024               	movlb	4	; select bank4
  7851  0FDC  1596               	bsf	22,3	;volatile
  7852  0FDD                     i1l697:
  7853  0FDD  0008               	return
  7854  0FDE                     __end_of_I2C_MasterStartRx:
  7855                           
  7856                           	psect	text60
  7857  0002                     __ptext60:	
  7858 ;; *************** function _I2C_CallbackReturnReset *****************
  7859 ;; Defined at:
  7860 ;;		line 526 in file "mcc_generated_files/i2c_master.c"
  7861 ;; Parameters:    Size  Location     Type
  7862 ;;  funPtr          1    9[COMMON] PTR void 
  7863 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  7864 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  7865 ;; Auto vars:     Size  Location     Type
  7866 ;;		None
  7867 ;; Return value:  Size  Location     Type
  7868 ;;                  1    wreg      enum E360
  7869 ;; Registers used:
  7870 ;;		wreg
  7871 ;; Tracked objects:
  7872 ;;		On entry : 0/0
  7873 ;;		On exit  : 0/0
  7874 ;;		Unchanged: 0/0
  7875 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7876 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7877 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7878 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7879 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7880 ;;Total ram usage:        1 bytes
  7881 ;; Hardware stack levels used: 1
  7882 ;; This function calls:
  7883 ;;		Nothing
  7884 ;; This function is called by:
  7885 ;;		_I2C_Open
  7886 ;;		_I2C_DO_TX
  7887 ;;		_I2C_DO_RX
  7888 ;;		_I2C_DO_TX_EMPTY
  7889 ;;		_I2C_DO_ADDRESS_NACK
  7890 ;;		_I2C_DO_RX_EMPTY
  7891 ;; This function uses a non-reentrant model
  7892 ;;
  7893                           
  7894                           
  7895                           ;psect for function _I2C_CallbackReturnReset
  7896  0002                     _I2C_CallbackReturnReset:
  7897  0002                     i1l2939:	
  7898                           ;incstack = 0
  7899                           ; Regs used in _I2C_CallbackReturnReset: [wreg]
  7900                           
  7901                           
  7902                           ;mcc_generated_files/i2c_master.c: 526: i2c_operations_t I2C_CallbackReturnReset(void *f
      +                          unPtr);mcc_generated_files/i2c_master.c: 527: {;mcc_generated_files/i2c_master.c: 528:  
      +                             return I2C_RESET_LINK;
  7903  0002  3005               	movlw	5
  7904  0003                     i1l669:
  7905  0003  0008               	return
  7906  0004                     __end_of_I2C_CallbackReturnReset:
  7907                           
  7908                           	psect	text61
  7909  0FD3                     __ptext61:	
  7910 ;; *************** function _I2C_CallbackReturnStop *****************
  7911 ;; Defined at:
  7912 ;;		line 521 in file "mcc_generated_files/i2c_master.c"
  7913 ;; Parameters:    Size  Location     Type
  7914 ;;  funPtr          1    9[COMMON] PTR void 
  7915 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  7916 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  7917 ;; Auto vars:     Size  Location     Type
  7918 ;;		None
  7919 ;; Return value:  Size  Location     Type
  7920 ;;                  1    wreg      enum E360
  7921 ;; Registers used:
  7922 ;;		wreg
  7923 ;; Tracked objects:
  7924 ;;		On entry : 0/0
  7925 ;;		On exit  : 0/0
  7926 ;;		Unchanged: 0/0
  7927 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7928 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7929 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7930 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7931 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7932 ;;Total ram usage:        1 bytes
  7933 ;; Hardware stack levels used: 1
  7934 ;; This function calls:
  7935 ;;		Nothing
  7936 ;; This function is called by:
  7937 ;;		_I2C_SetCallback
  7938 ;;		_I2C_Open
  7939 ;;		_I2C_DO_TX
  7940 ;;		_I2C_DO_RX
  7941 ;;		_I2C_DO_TX_EMPTY
  7942 ;;		_I2C_DO_ADDRESS_NACK
  7943 ;;		_I2C_DO_RX_EMPTY
  7944 ;; This function uses a non-reentrant model
  7945 ;;
  7946                           
  7947                           
  7948                           ;psect for function _I2C_CallbackReturnStop
  7949  0FD3                     _I2C_CallbackReturnStop:
  7950  0FD3                     i1l2935:	
  7951                           ;incstack = 0
  7952                           ; Regs used in _I2C_CallbackReturnStop: [wreg]
  7953                           
  7954                           
  7955                           ;mcc_generated_files/i2c_master.c: 521: i2c_operations_t I2C_CallbackReturnStop(void *fu
      +                          nPtr);mcc_generated_files/i2c_master.c: 522: {;mcc_generated_files/i2c_master.c: 523:   
      +                            return I2C_STOP;
  7956  0FD3  3001               	movlw	1
  7957  0FD4                     i1l666:
  7958  0FD4  0008               	return
  7959  0FD5                     __end_of_I2C_CallbackReturnStop:
  7960                           
  7961                           	psect	text62
  7962  05F2                     __ptext62:	
  7963 ;; *************** function _rdBlkRegCompleteHandler *****************
  7964 ;; Defined at:
  7965 ;;		line 170 in file "mcc_generated_files/examples/i2c_master_example.c"
  7966 ;; Parameters:    Size  Location     Type
  7967 ;;  ptr             1    9[COMMON] PTR void 
  7968 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  7969 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  7970 ;; Auto vars:     Size  Location     Type
  7971 ;;		None
  7972 ;; Return value:  Size  Location     Type
  7973 ;;                  1    wreg      enum E360
  7974 ;; Registers used:
  7975 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7976 ;; Tracked objects:
  7977 ;;		On entry : 0/0
  7978 ;;		On exit  : 0/0
  7979 ;;		Unchanged: 0/0
  7980 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7981 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7982 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7983 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7984 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7985 ;;Total ram usage:        1 bytes
  7986 ;; Hardware stack levels used: 1
  7987 ;; Hardware stack levels required when called: 2
  7988 ;; This function calls:
  7989 ;;		_I2C_SetBuffer
  7990 ;;		_I2C_SetDataCompleteCallback
  7991 ;; This function is called by:
  7992 ;;		_I2C_ReadDataBlock
  7993 ;;		_I2C_DO_TX
  7994 ;;		_I2C_DO_RX
  7995 ;;		_I2C_DO_TX_EMPTY
  7996 ;;		_I2C_DO_ADDRESS_NACK
  7997 ;;		_I2C_DO_RX_EMPTY
  7998 ;; This function uses a non-reentrant model
  7999 ;;
  8000                           
  8001                           
  8002                           ;psect for function _rdBlkRegCompleteHandler
  8003  05F2                     _rdBlkRegCompleteHandler:
  8004  05F2                     i1l2877:	
  8005                           ;incstack = 0
  8006                           ; Regs used in _rdBlkRegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
  8007                           
  8008                           
  8009                           ;mcc_generated_files/examples/i2c_master_example.c: 170: static i2c_operations_t rdBlkRe
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 171: {;mc
      +                          c_generated_files/examples/i2c_master_example.c: 172:     I2C_SetBuffer(((i2c_buffer_t *
      +                          )ptr)->data,((i2c_buffer_t*)ptr)->len);
  8010  05F2  0879               	movf	rdBlkRegCompleteHandler@ptr,w
  8011  05F3  0086               	movwf	6
  8012  05F4  0187               	clrf	7
  8013  05F5  3F40               	moviw [0]fsr1
  8014  05F6  00F0               	movwf	I2C_SetBuffer@bufferSize
  8015  05F7  3F41               	moviw [1]fsr1
  8016  05F8  00F1               	movwf	I2C_SetBuffer@bufferSize+1
  8017  05F9  0879               	movf	rdBlkRegCompleteHandler@ptr,w
  8018  05FA  3E02               	addlw	2
  8019  05FB  0086               	movwf	6
  8020  05FC  0187               	clrf	7
  8021  05FD  0801               	movf	1,w
  8022  05FE  3186  26FA  3185   	fcall	_I2C_SetBuffer
  8023                           
  8024                           ;mcc_generated_files/examples/i2c_master_example.c: 173:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
  8025  0601  3000               	movlw	0
  8026  0602  00F5               	movwf	I2C_SetDataCompleteCallback@cb
  8027  0603  00F6               	movwf	I2C_SetDataCompleteCallback@cb+1
  8028  0604  01F7               	clrf	I2C_SetDataCompleteCallback@ptr
  8029  0605  3187  2727  3185   	fcall	_I2C_SetDataCompleteCallback
  8030  0608                     i1l2879:
  8031                           
  8032                           ;mcc_generated_files/examples/i2c_master_example.c: 174:     return I2C_RESTART_READ;
  8033  0608  3002               	movlw	2
  8034  0609                     i1l104:
  8035  0609  0008               	return
  8036  060A                     __end_of_rdBlkRegCompleteHandler:
  8037                           
  8038                           	psect	text63
  8039  0686                     __ptext63:	
  8040 ;; *************** function _wr1RegCompleteHandler *****************
  8041 ;; Defined at:
  8042 ;;		line 156 in file "mcc_generated_files/examples/i2c_master_example.c"
  8043 ;; Parameters:    Size  Location     Type
  8044 ;;  ptr             1    9[COMMON] PTR void 
  8045 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  8046 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  8047 ;; Auto vars:     Size  Location     Type
  8048 ;;		None
  8049 ;; Return value:  Size  Location     Type
  8050 ;;                  1    wreg      enum E360
  8051 ;; Registers used:
  8052 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8053 ;; Tracked objects:
  8054 ;;		On entry : 0/0
  8055 ;;		On exit  : 0/0
  8056 ;;		Unchanged: 0/0
  8057 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8058 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8059 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8060 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8061 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8062 ;;Total ram usage:        1 bytes
  8063 ;; Hardware stack levels used: 1
  8064 ;; Hardware stack levels required when called: 2
  8065 ;; This function calls:
  8066 ;;		_I2C_SetBuffer
  8067 ;;		_I2C_SetDataCompleteCallback
  8068 ;; This function is called by:
  8069 ;;		_I2C_Write1ByteRegister
  8070 ;;		_I2C_DO_TX
  8071 ;;		_I2C_DO_RX
  8072 ;;		_I2C_DO_TX_EMPTY
  8073 ;;		_I2C_DO_ADDRESS_NACK
  8074 ;;		_I2C_DO_RX_EMPTY
  8075 ;; This function uses a non-reentrant model
  8076 ;;
  8077                           
  8078                           
  8079                           ;psect for function _wr1RegCompleteHandler
  8080  0686                     _wr1RegCompleteHandler:
  8081  0686                     i1l2861:	
  8082                           ;incstack = 0
  8083                           ; Regs used in _wr1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  8084                           
  8085                           
  8086                           ;mcc_generated_files/examples/i2c_master_example.c: 156: static i2c_operations_t wr1RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 157: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 158:     I2C_SetBuffer(ptr,1);
  8087  0686  3001               	movlw	1
  8088  0687  00F0               	movwf	I2C_SetBuffer@bufferSize
  8089  0688  3000               	movlw	0
  8090  0689  00F1               	movwf	I2C_SetBuffer@bufferSize+1
  8091  068A  0879               	movf	wr1RegCompleteHandler@ptr,w
  8092  068B  3186  26FA  3186   	fcall	_I2C_SetBuffer
  8093  068E                     i1l2863:
  8094                           
  8095                           ;mcc_generated_files/examples/i2c_master_example.c: 159:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
  8096  068E  3000               	movlw	0
  8097  068F  00F5               	movwf	I2C_SetDataCompleteCallback@cb
  8098  0690  00F6               	movwf	I2C_SetDataCompleteCallback@cb+1
  8099  0691  01F7               	clrf	I2C_SetDataCompleteCallback@ptr
  8100  0692  3187  2727  3186   	fcall	_I2C_SetDataCompleteCallback
  8101  0695                     i1l2865:
  8102                           
  8103                           ;mcc_generated_files/examples/i2c_master_example.c: 160:     return I2C_CONTINUE;
  8104  0695  3004               	movlw	4
  8105  0696                     i1l98:
  8106  0696  0008               	return
  8107  0697                     __end_of_wr1RegCompleteHandler:
  8108                           
  8109                           	psect	text64
  8110  0697                     __ptext64:	
  8111 ;; *************** function _rd2RegCompleteHandler *****************
  8112 ;; Defined at:
  8113 ;;		line 149 in file "mcc_generated_files/examples/i2c_master_example.c"
  8114 ;; Parameters:    Size  Location     Type
  8115 ;;  ptr             1    9[COMMON] PTR void 
  8116 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  8117 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  8118 ;; Auto vars:     Size  Location     Type
  8119 ;;		None
  8120 ;; Return value:  Size  Location     Type
  8121 ;;                  1    wreg      enum E360
  8122 ;; Registers used:
  8123 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8124 ;; Tracked objects:
  8125 ;;		On entry : 0/0
  8126 ;;		On exit  : 0/0
  8127 ;;		Unchanged: 0/0
  8128 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8129 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8130 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8131 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8132 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8133 ;;Total ram usage:        1 bytes
  8134 ;; Hardware stack levels used: 1
  8135 ;; Hardware stack levels required when called: 2
  8136 ;; This function calls:
  8137 ;;		_I2C_SetBuffer
  8138 ;;		_I2C_SetDataCompleteCallback
  8139 ;; This function is called by:
  8140 ;;		_I2C_Read2ByteRegister
  8141 ;;		_I2C_DO_TX
  8142 ;;		_I2C_DO_RX
  8143 ;;		_I2C_DO_TX_EMPTY
  8144 ;;		_I2C_DO_ADDRESS_NACK
  8145 ;;		_I2C_DO_RX_EMPTY
  8146 ;; This function uses a non-reentrant model
  8147 ;;
  8148                           
  8149                           
  8150                           ;psect for function _rd2RegCompleteHandler
  8151  0697                     _rd2RegCompleteHandler:
  8152  0697                     i1l2853:	
  8153                           ;incstack = 0
  8154                           ; Regs used in _rd2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  8155                           
  8156                           
  8157                           ;mcc_generated_files/examples/i2c_master_example.c: 149: static i2c_operations_t rd2RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 150: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 151:     I2C_SetBuffer(ptr,2);
  8158  0697  3002               	movlw	2
  8159  0698  00F0               	movwf	I2C_SetBuffer@bufferSize
  8160  0699  3000               	movlw	0
  8161  069A  00F1               	movwf	I2C_SetBuffer@bufferSize+1
  8162  069B  0879               	movf	rd2RegCompleteHandler@ptr,w
  8163  069C  3186  26FA  3186   	fcall	_I2C_SetBuffer
  8164  069F                     i1l2855:
  8165                           
  8166                           ;mcc_generated_files/examples/i2c_master_example.c: 152:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
  8167  069F  3000               	movlw	0
  8168  06A0  00F5               	movwf	I2C_SetDataCompleteCallback@cb
  8169  06A1  00F6               	movwf	I2C_SetDataCompleteCallback@cb+1
  8170  06A2  01F7               	clrf	I2C_SetDataCompleteCallback@ptr
  8171  06A3  3187  2727  3186   	fcall	_I2C_SetDataCompleteCallback
  8172  06A6                     i1l2857:
  8173                           
  8174                           ;mcc_generated_files/examples/i2c_master_example.c: 153:     return I2C_RESTART_READ;
  8175  06A6  3002               	movlw	2
  8176  06A7                     i1l95:
  8177  06A7  0008               	return
  8178  06A8                     __end_of_rd2RegCompleteHandler:
  8179                           
  8180                           	psect	text65
  8181  06A8                     __ptext65:	
  8182 ;; *************** function _rd1RegCompleteHandler *****************
  8183 ;; Defined at:
  8184 ;;		line 142 in file "mcc_generated_files/examples/i2c_master_example.c"
  8185 ;; Parameters:    Size  Location     Type
  8186 ;;  ptr             1    9[COMMON] PTR void 
  8187 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  8188 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  8189 ;; Auto vars:     Size  Location     Type
  8190 ;;		None
  8191 ;; Return value:  Size  Location     Type
  8192 ;;                  1    wreg      enum E360
  8193 ;; Registers used:
  8194 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8195 ;; Tracked objects:
  8196 ;;		On entry : 0/0
  8197 ;;		On exit  : 0/0
  8198 ;;		Unchanged: 0/0
  8199 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8200 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8201 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8202 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8203 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8204 ;;Total ram usage:        1 bytes
  8205 ;; Hardware stack levels used: 1
  8206 ;; Hardware stack levels required when called: 2
  8207 ;; This function calls:
  8208 ;;		_I2C_SetBuffer
  8209 ;;		_I2C_SetDataCompleteCallback
  8210 ;; This function is called by:
  8211 ;;		_I2C_Read1ByteRegister
  8212 ;;		_I2C_DO_TX
  8213 ;;		_I2C_DO_RX
  8214 ;;		_I2C_DO_TX_EMPTY
  8215 ;;		_I2C_DO_ADDRESS_NACK
  8216 ;;		_I2C_DO_RX_EMPTY
  8217 ;; This function uses a non-reentrant model
  8218 ;;
  8219                           
  8220                           
  8221                           ;psect for function _rd1RegCompleteHandler
  8222  06A8                     _rd1RegCompleteHandler:
  8223  06A8                     i1l2845:	
  8224                           ;incstack = 0
  8225                           ; Regs used in _rd1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  8226                           
  8227                           
  8228                           ;mcc_generated_files/examples/i2c_master_example.c: 142: static i2c_operations_t rd1RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 143: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 144:     I2C_SetBuffer(ptr,1);
  8229  06A8  3001               	movlw	1
  8230  06A9  00F0               	movwf	I2C_SetBuffer@bufferSize
  8231  06AA  3000               	movlw	0
  8232  06AB  00F1               	movwf	I2C_SetBuffer@bufferSize+1
  8233  06AC  0879               	movf	rd1RegCompleteHandler@ptr,w
  8234  06AD  3186  26FA  3186   	fcall	_I2C_SetBuffer
  8235  06B0                     i1l2847:
  8236                           
  8237                           ;mcc_generated_files/examples/i2c_master_example.c: 145:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
  8238  06B0  3000               	movlw	0
  8239  06B1  00F5               	movwf	I2C_SetDataCompleteCallback@cb
  8240  06B2  00F6               	movwf	I2C_SetDataCompleteCallback@cb+1
  8241  06B3  01F7               	clrf	I2C_SetDataCompleteCallback@ptr
  8242  06B4  3187  2727  3186   	fcall	_I2C_SetDataCompleteCallback
  8243  06B7                     i1l2849:
  8244                           
  8245                           ;mcc_generated_files/examples/i2c_master_example.c: 146:     return I2C_RESTART_READ;
  8246  06B7  3002               	movlw	2
  8247  06B8                     i1l92:
  8248  06B8  0008               	return
  8249  06B9                     __end_of_rd1RegCompleteHandler:
  8250                           
  8251                           	psect	text66
  8252  06B9                     __ptext66:	
  8253 ;; *************** function _wr2RegCompleteHandler *****************
  8254 ;; Defined at:
  8255 ;;		line 163 in file "mcc_generated_files/examples/i2c_master_example.c"
  8256 ;; Parameters:    Size  Location     Type
  8257 ;;  ptr             1    9[COMMON] PTR void 
  8258 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  8259 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  8260 ;; Auto vars:     Size  Location     Type
  8261 ;;		None
  8262 ;; Return value:  Size  Location     Type
  8263 ;;                  1    wreg      enum E360
  8264 ;; Registers used:
  8265 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8266 ;; Tracked objects:
  8267 ;;		On entry : 0/0
  8268 ;;		On exit  : 0/0
  8269 ;;		Unchanged: 0/0
  8270 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8271 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8272 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8273 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8274 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8275 ;;Total ram usage:        1 bytes
  8276 ;; Hardware stack levels used: 1
  8277 ;; Hardware stack levels required when called: 2
  8278 ;; This function calls:
  8279 ;;		_I2C_SetBuffer
  8280 ;;		_I2C_SetDataCompleteCallback
  8281 ;; This function is called by:
  8282 ;;		_I2C_Write2ByteRegister
  8283 ;;		_I2C_DO_TX
  8284 ;;		_I2C_DO_RX
  8285 ;;		_I2C_DO_TX_EMPTY
  8286 ;;		_I2C_DO_ADDRESS_NACK
  8287 ;;		_I2C_DO_RX_EMPTY
  8288 ;; This function uses a non-reentrant model
  8289 ;;
  8290                           
  8291                           
  8292                           ;psect for function _wr2RegCompleteHandler
  8293  06B9                     _wr2RegCompleteHandler:
  8294  06B9                     i1l2869:	
  8295                           ;incstack = 0
  8296                           ; Regs used in _wr2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  8297                           
  8298                           
  8299                           ;mcc_generated_files/examples/i2c_master_example.c: 163: static i2c_operations_t wr2RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 164: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 165:     I2C_SetBuffer(ptr,2);
  8300  06B9  3002               	movlw	2
  8301  06BA  00F0               	movwf	I2C_SetBuffer@bufferSize
  8302  06BB  3000               	movlw	0
  8303  06BC  00F1               	movwf	I2C_SetBuffer@bufferSize+1
  8304  06BD  0879               	movf	wr2RegCompleteHandler@ptr,w
  8305  06BE  3186  26FA  3186   	fcall	_I2C_SetBuffer
  8306  06C1                     i1l2871:
  8307                           
  8308                           ;mcc_generated_files/examples/i2c_master_example.c: 166:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
  8309  06C1  3000               	movlw	0
  8310  06C2  00F5               	movwf	I2C_SetDataCompleteCallback@cb
  8311  06C3  00F6               	movwf	I2C_SetDataCompleteCallback@cb+1
  8312  06C4  01F7               	clrf	I2C_SetDataCompleteCallback@ptr
  8313  06C5  3187  2727  3186   	fcall	_I2C_SetDataCompleteCallback
  8314  06C8                     i1l2873:
  8315                           
  8316                           ;mcc_generated_files/examples/i2c_master_example.c: 167:     return I2C_CONTINUE;
  8317  06C8  3004               	movlw	4
  8318  06C9                     i1l101:
  8319  06C9  0008               	return
  8320  06CA                     __end_of_wr2RegCompleteHandler:
  8321                           
  8322                           	psect	text67
  8323  0727                     __ptext67:	
  8324 ;; *************** function _I2C_SetDataCompleteCallback *****************
  8325 ;; Defined at:
  8326 ;;		line 274 in file "mcc_generated_files/i2c_master.c"
  8327 ;; Parameters:    Size  Location     Type
  8328 ;;  cb              2    5[COMMON] PTR FTN(PTR void ,)enum 
  8329 ;;		 -> Absolute function(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), wr1RegCompleteHandler(1), 
  8330 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
  8331 ;;  ptr             1    7[COMMON] PTR void 
  8332 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  8333 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  8334 ;; Auto vars:     Size  Location     Type
  8335 ;;		None
  8336 ;; Return value:  Size  Location     Type
  8337 ;;                  1    wreg      void 
  8338 ;; Registers used:
  8339 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8340 ;; Tracked objects:
  8341 ;;		On entry : 0/0
  8342 ;;		On exit  : 0/0
  8343 ;;		Unchanged: 0/0
  8344 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8345 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8346 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8347 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8348 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8349 ;;Total ram usage:        4 bytes
  8350 ;; Hardware stack levels used: 1
  8351 ;; Hardware stack levels required when called: 1
  8352 ;; This function calls:
  8353 ;;		_I2C_SetCallback
  8354 ;; This function is called by:
  8355 ;;		_rd1RegCompleteHandler
  8356 ;;		_rd2RegCompleteHandler
  8357 ;;		_wr1RegCompleteHandler
  8358 ;;		_wr2RegCompleteHandler
  8359 ;;		_rdBlkRegCompleteHandler
  8360 ;;		_I2C_Read1ByteRegister
  8361 ;;		_I2C_Read2ByteRegister
  8362 ;;		_I2C_Write1ByteRegister
  8363 ;;		_I2C_Write2ByteRegister
  8364 ;;		_I2C_ReadDataBlock
  8365 ;; This function uses a non-reentrant model
  8366 ;;
  8367                           
  8368                           
  8369                           ;psect for function _I2C_SetDataCompleteCallback
  8370  0727                     _I2C_SetDataCompleteCallback:
  8371  0727                     i1l2817:	
  8372                           ;incstack = 0
  8373                           ; Regs used in _I2C_SetDataCompleteCallback: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
  8374                           
  8375                           
  8376                           ;mcc_generated_files/i2c_master.c: 274: void I2C_SetDataCompleteCallback(i2c_callback_t 
      +                          cb, void *ptr);mcc_generated_files/i2c_master.c: 275: {;mcc_generated_files/i2c_master.c
      +                          : 276:     I2C_SetCallback(I2C_DATA_COMPLETE, cb, ptr);
  8377  0727  0876               	movf	I2C_SetDataCompleteCallback@cb+1,w
  8378  0728  00F1               	movwf	I2C_SetCallback@cb+1
  8379  0729  0875               	movf	I2C_SetDataCompleteCallback@cb,w
  8380  072A  00F0               	movwf	I2C_SetCallback@cb
  8381  072B  0877               	movf	I2C_SetDataCompleteCallback@ptr,w
  8382  072C  00F8               	movwf	??_I2C_SetDataCompleteCallback
  8383  072D  0878               	movf	??_I2C_SetDataCompleteCallback,w
  8384  072E  00F2               	movwf	I2C_SetCallback@ptr
  8385  072F  3000               	movlw	0
  8386  0730  3185  252E  3187   	fcall	_I2C_SetCallback
  8387  0733                     i1l540:
  8388  0733  0008               	return
  8389  0734                     __end_of_I2C_SetDataCompleteCallback:
  8390                           
  8391                           	psect	text68
  8392  052E                     __ptext68:	
  8393 ;; *************** function _I2C_SetCallback *****************
  8394 ;; Defined at:
  8395 ;;		line 304 in file "mcc_generated_files/i2c_master.c"
  8396 ;; Parameters:    Size  Location     Type
  8397 ;;  idx             1    wreg     enum E3356
  8398 ;;  cb              2    0[COMMON] PTR FTN(PTR void ,)enum 
  8399 ;;		 -> Absolute function(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), wr1RegCompleteHandler(1), 
  8400 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
  8401 ;;  ptr             1    2[COMMON] PTR void 
  8402 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  8403 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  8404 ;; Auto vars:     Size  Location     Type
  8405 ;;  idx             1    4[COMMON] enum E3356
  8406 ;; Return value:  Size  Location     Type
  8407 ;;                  1    wreg      void 
  8408 ;; Registers used:
  8409 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8410 ;; Tracked objects:
  8411 ;;		On entry : 0/0
  8412 ;;		On exit  : 0/0
  8413 ;;		Unchanged: 0/0
  8414 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8415 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8416 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8417 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8418 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8419 ;;Total ram usage:        5 bytes
  8420 ;; Hardware stack levels used: 1
  8421 ;; This function calls:
  8422 ;;		Nothing
  8423 ;; This function is called by:
  8424 ;;		_I2C_SetDataCompleteCallback
  8425 ;;		_I2C_SetWriteCollisionCallback
  8426 ;;		_I2C_SetAddressNackCallback
  8427 ;;		_I2C_SetDataNackCallback
  8428 ;;		_I2C_SetTimeoutCallback
  8429 ;; This function uses a non-reentrant model
  8430 ;;
  8431                           
  8432                           
  8433                           ;psect for function _I2C_SetCallback
  8434  052E                     _I2C_SetCallback:
  8435                           
  8436                           ;incstack = 0
  8437                           ; Regs used in _I2C_SetCallback: [wreg+fsr1l+fsr1h+status,2+status,0]
  8438                           ;I2C_SetCallback@idx stored from wreg
  8439  052E  00F4               	movwf	I2C_SetCallback@idx
  8440  052F                     i1l2807:
  8441                           
  8442                           ;mcc_generated_files/i2c_master.c: 304: static void I2C_SetCallback(i2c_callbackIndex_t 
      +                          idx, i2c_callback_t cb, void *ptr);mcc_generated_files/i2c_master.c: 305: {;mcc_generate
      +                          d_files/i2c_master.c: 306:     if(cb)
  8443  052F  0870               	movf	I2C_SetCallback@cb,w
  8444  0530  0471               	iorwf	I2C_SetCallback@cb+1,w
  8445  0531  1903               	btfsc	3,2
  8446  0532  2D34               	goto	u73_21
  8447  0533  2D35               	goto	u73_20
  8448  0534                     u73_21:
  8449  0534  2D46               	goto	i1l2811
  8450  0535                     u73_20:
  8451  0535                     i1l2809:
  8452                           
  8453                           ;mcc_generated_files/i2c_master.c: 307:     {;mcc_generated_files/i2c_master.c: 308:    
      +                               I2C_Status.callbackTable[idx] = cb;
  8454  0535  3574               	lslf	I2C_SetCallback@idx,w
  8455  0536  3EC0               	addlw	(low (_I2C_Status| 0))& (0+255)
  8456  0537  0086               	movwf	6
  8457  0538  0187               	clrf	7
  8458  0539  0870               	movf	I2C_SetCallback@cb,w
  8459  053A  3FC0               	movwi [0]fsr1
  8460  053B  0871               	movf	I2C_SetCallback@cb+1,w
  8461  053C  3FC1               	movwi [1]fsr1
  8462                           
  8463                           ;mcc_generated_files/i2c_master.c: 309:         I2C_Status.callbackPayload[idx] = ptr;
  8464  053D  0872               	movf	I2C_SetCallback@ptr,w
  8465  053E  00F3               	movwf	??_I2C_SetCallback
  8466  053F  0874               	movf	I2C_SetCallback@idx,w
  8467  0540  3ECC               	addlw	(low ((_I2C_Status| 0+12)))& (0+255)
  8468  0541  0086               	movwf	6
  8469  0542  0187               	clrf	7
  8470  0543  0873               	movf	??_I2C_SetCallback,w
  8471  0544  0081               	movwf	1
  8472                           
  8473                           ;mcc_generated_files/i2c_master.c: 310:     }
  8474  0545  2D53               	goto	i1l560
  8475  0546                     i1l2811:
  8476                           
  8477                           ;mcc_generated_files/i2c_master.c: 312:     {;mcc_generated_files/i2c_master.c: 313:    
      +                               I2C_Status.callbackTable[idx] = I2C_CallbackReturnStop;
  8478  0546  3574               	lslf	I2C_SetCallback@idx,w
  8479  0547  3EC0               	addlw	(low (_I2C_Status| 0))& (0+255)
  8480  0548  0086               	movwf	6
  8481  0549  0187               	clrf	7
  8482  054A  30D3               	movlw	low _I2C_CallbackReturnStop
  8483  054B  3FC0               	movwi [0]fsr1
  8484  054C  300F               	movlw	high _I2C_CallbackReturnStop
  8485  054D  3FC1               	movwi [1]fsr1
  8486                           
  8487                           ;mcc_generated_files/i2c_master.c: 314:         I2C_Status.callbackPayload[idx] = ((void
      +                          *)0);
  8488  054E  0874               	movf	I2C_SetCallback@idx,w
  8489  054F  3ECC               	addlw	(low ((_I2C_Status| 0+12)))& (0+255)
  8490  0550  0086               	movwf	6
  8491  0551  0187               	clrf	7
  8492  0552  0181               	clrf	1
  8493  0553                     i1l560:
  8494  0553  0008               	return
  8495  0554                     __end_of_I2C_SetCallback:
  8496                           
  8497                           	psect	text69
  8498  06FA                     __ptext69:	
  8499 ;; *************** function _I2C_SetBuffer *****************
  8500 ;; Defined at:
  8501 ;;		line 264 in file "mcc_generated_files/i2c_master.c"
  8502 ;; Parameters:    Size  Location     Type
  8503 ;;  buffer          1    wreg     PTR void 
  8504 ;;		 -> I2C_ReadDataBlock@reg(1), I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@reg(1), I2C_Write2ByteRegiste
      +r@data(2), 
  8505 ;;		 -> I2C_Write1ByteRegister@reg(1), I2C_Write1ByteRegister@data(1), I2C_Read2ByteRegister@reg(1), I2C_Read2ByteRegist
      +er@returnValue(2), 
  8506 ;;		 -> NULL(0), I2C_Read1ByteRegister@reg(1), I2C_Read1ByteRegister@returnValue(1), 
  8507 ;;  bufferSize      2    0[COMMON] unsigned int 
  8508 ;; Auto vars:     Size  Location     Type
  8509 ;;  buffer          1    3[COMMON] PTR void 
  8510 ;;		 -> I2C_ReadDataBlock@reg(1), I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@reg(1), I2C_Write2ByteRegiste
      +r@data(2), 
  8511 ;;		 -> I2C_Write1ByteRegister@reg(1), I2C_Write1ByteRegister@data(1), I2C_Read2ByteRegister@reg(1), I2C_Read2ByteRegist
      +er@returnValue(2), 
  8512 ;;		 -> NULL(0), I2C_Read1ByteRegister@reg(1), I2C_Read1ByteRegister@returnValue(1), 
  8513 ;; Return value:  Size  Location     Type
  8514 ;;                  1    wreg      void 
  8515 ;; Registers used:
  8516 ;;		wreg
  8517 ;; Tracked objects:
  8518 ;;		On entry : 0/0
  8519 ;;		On exit  : 0/0
  8520 ;;		Unchanged: 0/0
  8521 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8522 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8523 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8524 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8525 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8526 ;;Total ram usage:        4 bytes
  8527 ;; Hardware stack levels used: 1
  8528 ;; This function calls:
  8529 ;;		Nothing
  8530 ;; This function is called by:
  8531 ;;		_rd1RegCompleteHandler
  8532 ;;		_rd2RegCompleteHandler
  8533 ;;		_wr1RegCompleteHandler
  8534 ;;		_wr2RegCompleteHandler
  8535 ;;		_rdBlkRegCompleteHandler
  8536 ;;		_I2C_Read1ByteRegister
  8537 ;;		_I2C_Read2ByteRegister
  8538 ;;		_I2C_Write1ByteRegister
  8539 ;;		_I2C_Write2ByteRegister
  8540 ;;		_I2C_WriteNBytes
  8541 ;;		_I2C_ReadNBytes
  8542 ;;		_I2C_ReadDataBlock
  8543 ;; This function uses a non-reentrant model
  8544 ;;
  8545                           
  8546                           
  8547                           ;psect for function _I2C_SetBuffer
  8548  06FA                     _I2C_SetBuffer:
  8549                           
  8550                           ;incstack = 0
  8551                           ; Regs used in _I2C_SetBuffer: [wreg]
  8552                           ;I2C_SetBuffer@buffer stored from wreg
  8553  06FA  00F3               	movwf	I2C_SetBuffer@buffer
  8554  06FB                     i1l2819:
  8555                           
  8556                           ;mcc_generated_files/i2c_master.c: 264: void I2C_SetBuffer(void *buffer, size_t bufferSi
      +                          ze);mcc_generated_files/i2c_master.c: 265: {;mcc_generated_files/i2c_master.c: 266:     
      +                          if(I2C_Status.bufferFree)
  8557  06FB  0021               	movlb	1	; select bank1
  8558  06FC  1DDC               	btfss	(_I2C_Status^(0+128)+28),3
  8559  06FD  2EFF               	goto	u76_21
  8560  06FE  2F00               	goto	u76_20
  8561  06FF                     u76_21:
  8562  06FF  2F09               	goto	i1l537
  8563  0700                     u76_20:
  8564  0700                     i1l2821:
  8565                           
  8566                           ;mcc_generated_files/i2c_master.c: 267:     {;mcc_generated_files/i2c_master.c: 268:    
      +                               I2C_Status.data_ptr = buffer;
  8567  0700  0873               	movf	I2C_SetBuffer@buffer,w
  8568  0701  00F2               	movwf	??_I2C_SetBuffer
  8569  0702  0872               	movf	??_I2C_SetBuffer,w
  8570  0703  00D7               	movwf	(low ((_I2C_Status| 0+23)))^(0+128)
  8571                           
  8572                           ;mcc_generated_files/i2c_master.c: 269:         I2C_Status.data_length = bufferSize;
  8573  0704  0871               	movf	I2C_SetBuffer@bufferSize+1,w
  8574  0705  00D9               	movwf	((_I2C_Status+1)^(0+128)+24)
  8575  0706  0870               	movf	I2C_SetBuffer@bufferSize,w
  8576  0707  00D8               	movwf	(_I2C_Status^(0+128)+24)
  8577  0708                     i1l2823:
  8578                           
  8579                           ;mcc_generated_files/i2c_master.c: 270:         I2C_Status.bufferFree = 0;
  8580  0708  11DC               	bcf	(_I2C_Status^(0+128)+28),3
  8581  0709                     i1l537:
  8582  0709  0008               	return
  8583  070A                     __end_of_I2C_SetBuffer:
  8584                           
  8585                           	psect	text70
  8586  0FD8                     __ptext70:	
  8587 ;; *************** function _I2C_MasterStop *****************
  8588 ;; Defined at:
  8589 ;;		line 594 in file "mcc_generated_files/i2c_master.c"
  8590 ;; Parameters:    Size  Location     Type
  8591 ;;		None
  8592 ;; Auto vars:     Size  Location     Type
  8593 ;;		None
  8594 ;; Return value:  Size  Location     Type
  8595 ;;                  1    wreg      void 
  8596 ;; Registers used:
  8597 ;;		None
  8598 ;; Tracked objects:
  8599 ;;		On entry : 0/0
  8600 ;;		On exit  : 0/0
  8601 ;;		Unchanged: 0/0
  8602 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8603 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8604 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8605 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8606 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8607 ;;Total ram usage:        0 bytes
  8608 ;; Hardware stack levels used: 1
  8609 ;; This function calls:
  8610 ;;		Nothing
  8611 ;; This function is called by:
  8612 ;;		_I2C_DO_SEND_STOP
  8613 ;; This function uses a non-reentrant model
  8614 ;;
  8615                           
  8616                           
  8617                           ;psect for function _I2C_MasterStop
  8618  0FD8                     _I2C_MasterStop:
  8619  0FD8                     i1l2829:	
  8620                           ;incstack = 0
  8621                           ; Regs used in _I2C_MasterStop: []
  8622                           
  8623                           
  8624                           ;mcc_generated_files/i2c_master.c: 596:     SSPCON2bits.PEN = 1;
  8625  0FD8  0024               	movlb	4	; select bank4
  8626  0FD9  1516               	bsf	22,2	;volatile
  8627  0FDA                     i1l703:
  8628  0FDA  0008               	return
  8629  0FDB                     __end_of_I2C_MasterStop:
  8630                           
  8631                           	psect	text71
  8632  0FD5                     __ptext71:	
  8633 ;; *************** function _I2C_MasterEnableRestart *****************
  8634 ;; Defined at:
  8635 ;;		line 574 in file "mcc_generated_files/i2c_master.c"
  8636 ;; Parameters:    Size  Location     Type
  8637 ;;		None
  8638 ;; Auto vars:     Size  Location     Type
  8639 ;;		None
  8640 ;; Return value:  Size  Location     Type
  8641 ;;                  1    wreg      void 
  8642 ;; Registers used:
  8643 ;;		None
  8644 ;; Tracked objects:
  8645 ;;		On entry : 0/0
  8646 ;;		On exit  : 0/0
  8647 ;;		Unchanged: 0/0
  8648 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8649 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8650 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8651 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8652 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8653 ;;Total ram usage:        0 bytes
  8654 ;; Hardware stack levels used: 1
  8655 ;; This function calls:
  8656 ;;		Nothing
  8657 ;; This function is called by:
  8658 ;;		_I2C_DO_SEND_RESTART_READ
  8659 ;;		_I2C_DO_SEND_RESTART_WRITE
  8660 ;;		_I2C_DO_SEND_RESTART
  8661 ;;		_I2C_DO_RX_EMPTY
  8662 ;; This function uses a non-reentrant model
  8663 ;;
  8664                           
  8665                           
  8666                           ;psect for function _I2C_MasterEnableRestart
  8667  0FD5                     _I2C_MasterEnableRestart:
  8668  0FD5                     i1l2827:	
  8669                           ;incstack = 0
  8670                           ; Regs used in _I2C_MasterEnableRestart: []
  8671                           
  8672                           
  8673                           ;mcc_generated_files/i2c_master.c: 576:     SSPCON2bits.RSEN = 1;
  8674  0FD5  0024               	movlb	4	; select bank4
  8675  0FD6  1496               	bsf	22,1	;volatile
  8676  0FD7                     i1l691:
  8677  0FD7  0008               	return
  8678  0FD8                     __end_of_I2C_MasterEnableRestart:
  8679                           
  8680                           	psect	text72
  8681  0576                     __ptext72:	
  8682 ;; *************** function _EUSART_Transmit_ISR *****************
  8683 ;; Defined at:
  8684 ;;		line 206 in file "mcc_generated_files/eusart.c"
  8685 ;; Parameters:    Size  Location     Type
  8686 ;;		None
  8687 ;; Auto vars:     Size  Location     Type
  8688 ;;		None
  8689 ;; Return value:  Size  Location     Type
  8690 ;;                  1    wreg      void 
  8691 ;; Registers used:
  8692 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8693 ;; Tracked objects:
  8694 ;;		On entry : 0/0
  8695 ;;		On exit  : 0/0
  8696 ;;		Unchanged: 0/0
  8697 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8698 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8699 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8700 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8701 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8702 ;;Total ram usage:        1 bytes
  8703 ;; Hardware stack levels used: 1
  8704 ;; This function calls:
  8705 ;;		Nothing
  8706 ;; This function is called by:
  8707 ;;		_EUSART_Initialize
  8708 ;;		_INTERRUPT_InterruptManager
  8709 ;; This function uses a non-reentrant model
  8710 ;;
  8711                           
  8712                           
  8713                           ;psect for function _EUSART_Transmit_ISR
  8714  0576                     _EUSART_Transmit_ISR:
  8715  0576                     i1l3333:	
  8716                           ;incstack = 0
  8717                           ; Regs used in _EUSART_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
  8718                           
  8719                           
  8720                           ;mcc_generated_files/eusart.c: 210:     if(sizeof(eusartTxBuffer) > eusartTxBufferRemain
      +                          ing)
  8721  0576  3008               	movlw	8
  8722  0577  0020               	movlb	0	; select bank0
  8723  0578  0243               	subwf	_eusartTxBufferRemaining,w	;volatile
  8724  0579  1803               	skipnc
  8725  057A  2D7C               	goto	u97_21
  8726  057B  2D7D               	goto	u97_20
  8727  057C                     u97_21:
  8728  057C  2D95               	goto	i1l332
  8729  057D                     u97_20:
  8730  057D                     i1l3335:
  8731                           
  8732                           ;mcc_generated_files/eusart.c: 211:     {;mcc_generated_files/eusart.c: 212:         TXR
      +                          EG = eusartTxBuffer[eusartTxTail++];
  8733  057D  0844               	movf	_eusartTxTail,w
  8734  057E  3EE5               	addlw	(low (_eusartTxBuffer| 0))& (0+255)
  8735  057F  0086               	movwf	6
  8736  0580  0187               	clrf	7
  8737  0581  0801               	movf	1,w
  8738  0582  0023               	movlb	3	; select bank3
  8739  0583  009A               	movwf	26	;volatile
  8740  0584                     i1l3337:
  8741  0584  3001               	movlw	1
  8742  0585  00F0               	movwf	??_EUSART_Transmit_ISR
  8743  0586  0870               	movf	??_EUSART_Transmit_ISR,w
  8744  0587  0020               	movlb	0	; select bank0
  8745  0588  07C4               	addwf	_eusartTxTail,f	;volatile
  8746  0589                     i1l3339:
  8747                           
  8748                           ;mcc_generated_files/eusart.c: 213:         if(sizeof(eusartTxBuffer) <= eusartTxTail)
  8749  0589  3008               	movlw	8
  8750  058A  0244               	subwf	_eusartTxTail,w	;volatile
  8751  058B  1C03               	skipc
  8752  058C  2D8E               	goto	u98_21
  8753  058D  2D8F               	goto	u98_20
  8754  058E                     u98_21:
  8755  058E  2D90               	goto	i1l3343
  8756  058F                     u98_20:
  8757  058F                     i1l3341:
  8758                           
  8759                           ;mcc_generated_files/eusart.c: 214:         {;mcc_generated_files/eusart.c: 215:        
      +                               eusartTxTail = 0;
  8760  058F  01C4               	clrf	_eusartTxTail	;volatile
  8761  0590                     i1l3343:
  8762                           
  8763                           ;mcc_generated_files/eusart.c: 217:         eusartTxBufferRemaining++;
  8764  0590  3001               	movlw	1
  8765  0591  00F0               	movwf	??_EUSART_Transmit_ISR
  8766  0592  0870               	movf	??_EUSART_Transmit_ISR,w
  8767  0593  07C3               	addwf	_eusartTxBufferRemaining,f	;volatile
  8768                           
  8769                           ;mcc_generated_files/eusart.c: 218:     }
  8770  0594  2D97               	goto	i1l335
  8771  0595                     i1l332:	
  8772                           ;mcc_generated_files/eusart.c: 219:     else
  8773                           
  8774                           
  8775                           ;mcc_generated_files/eusart.c: 220:     {;mcc_generated_files/eusart.c: 221:         PIE
      +                          1bits.TXIE = 0;
  8776  0595  0021               	movlb	1	; select bank1
  8777  0596  1211               	bcf	17,4	;volatile
  8778  0597                     i1l335:
  8779  0597  0008               	return
  8780  0598                     __end_of_EUSART_Transmit_ISR:
  8781                           
  8782                           	psect	text73
  8783  038D                     __ptext73:	
  8784 ;; *************** function _EUSART_Receive_ISR *****************
  8785 ;; Defined at:
  8786 ;;		line 225 in file "mcc_generated_files/eusart.c"
  8787 ;; Parameters:    Size  Location     Type
  8788 ;;		None
  8789 ;; Auto vars:     Size  Location     Type
  8790 ;;		None
  8791 ;; Return value:  Size  Location     Type
  8792 ;;                  1    wreg      void 
  8793 ;; Registers used:
  8794 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8795 ;; Tracked objects:
  8796 ;;		On entry : 0/0
  8797 ;;		On exit  : 0/0
  8798 ;;		Unchanged: 0/0
  8799 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8800 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8801 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8802 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8803 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8804 ;;Total ram usage:        0 bytes
  8805 ;; Hardware stack levels used: 1
  8806 ;; Hardware stack levels required when called: 2
  8807 ;; This function calls:
  8808 ;;		Absolute function
  8809 ;;		_EUSART_DefaultErrorHandler
  8810 ;;		_EUSART_DefaultFramingErrorHandler
  8811 ;;		_EUSART_DefaultOverrunErrorHandler
  8812 ;;		_EUSART_RxDataHandler
  8813 ;; This function is called by:
  8814 ;;		_EUSART_Initialize
  8815 ;;		_INTERRUPT_InterruptManager
  8816 ;; This function uses a non-reentrant model
  8817 ;;
  8818                           
  8819                           
  8820                           ;psect for function _EUSART_Receive_ISR
  8821  038D                     _EUSART_Receive_ISR:
  8822  038D                     i1l3345:	
  8823                           ;incstack = 0
  8824                           ; Regs used in _EUSART_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8825                           
  8826                           
  8827                           ;mcc_generated_files/eusart.c: 228:     eusartRxStatusBuffer[eusartRxHead].status = 0;
  8828  038D  0020               	movlb	0	; select bank0
  8829  038E  0842               	movf	_eusartRxHead,w	;volatile
  8830  038F  3E20               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  8831  0390  0086               	movwf	6
  8832  0391  0187               	clrf	7
  8833  0392  0181               	clrf	1
  8834  0393                     i1l3347:
  8835                           
  8836                           ;mcc_generated_files/eusart.c: 230:     if(RCSTAbits.FERR){
  8837  0393  0023               	movlb	3	; select bank3
  8838  0394  1D1D               	btfss	29,2	;volatile
  8839  0395  2B97               	goto	u99_21
  8840  0396  2B98               	goto	u99_20
  8841  0397                     u99_21:
  8842  0397  2BA3               	goto	i1l3353
  8843  0398                     u99_20:
  8844  0398                     i1l3349:
  8845                           
  8846                           ;mcc_generated_files/eusart.c: 231:         eusartRxStatusBuffer[eusartRxHead].ferr = 1;
  8847  0398  0020               	movlb	0	; select bank0
  8848  0399  0842               	movf	_eusartRxHead,w	;volatile
  8849  039A  3E20               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  8850  039B  0086               	movwf	6
  8851  039C  0187               	clrf	7
  8852  039D  1481               	bsf	1,1
  8853  039E                     i1l3351:
  8854                           
  8855                           ;mcc_generated_files/eusart.c: 232:         EUSART_FramingErrorHandler();
  8856  039E  0835               	movf	_EUSART_FramingErrorHandler+1,w
  8857  039F  008A               	movwf	10
  8858  03A0  0834               	movf	_EUSART_FramingErrorHandler,w
  8859  03A1  000A               	callw
  8860  03A2  3183               	pagesel	$
  8861  03A3                     i1l3353:
  8862                           
  8863                           ;mcc_generated_files/eusart.c: 235:     if(RCSTAbits.OERR){
  8864  03A3  0023               	movlb	3	; select bank3
  8865  03A4  1C9D               	btfss	29,1	;volatile
  8866  03A5  2BA7               	goto	u100_21
  8867  03A6  2BA8               	goto	u100_20
  8868  03A7                     u100_21:
  8869  03A7  2BB3               	goto	i1l3359
  8870  03A8                     u100_20:
  8871  03A8                     i1l3355:
  8872                           
  8873                           ;mcc_generated_files/eusart.c: 236:         eusartRxStatusBuffer[eusartRxHead].oerr = 1;
  8874  03A8  0020               	movlb	0	; select bank0
  8875  03A9  0842               	movf	_eusartRxHead,w	;volatile
  8876  03AA  3E20               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  8877  03AB  0086               	movwf	6
  8878  03AC  0187               	clrf	7
  8879  03AD  1501               	bsf	1,2
  8880  03AE                     i1l3357:
  8881                           
  8882                           ;mcc_generated_files/eusart.c: 237:         EUSART_OverrunErrorHandler();
  8883  03AE  0833               	movf	_EUSART_OverrunErrorHandler+1,w
  8884  03AF  008A               	movwf	10
  8885  03B0  0832               	movf	_EUSART_OverrunErrorHandler,w
  8886  03B1  000A               	callw
  8887  03B2  3183               	pagesel	$
  8888  03B3                     i1l3359:
  8889                           
  8890                           ;mcc_generated_files/eusart.c: 240:     if(eusartRxStatusBuffer[eusartRxHead].status){
  8891  03B3  0020               	movlb	0	; select bank0
  8892  03B4  0842               	movf	_eusartRxHead,w	;volatile
  8893  03B5  3E20               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  8894  03B6  0086               	movwf	6
  8895  03B7  0187               	clrf	7
  8896  03B8  0801               	movf	1,w
  8897  03B9  1903               	btfsc	3,2
  8898  03BA  2BBC               	goto	u101_21
  8899  03BB  2BBD               	goto	u101_20
  8900  03BC                     u101_21:
  8901  03BC  2BC3               	goto	i1l3363
  8902  03BD                     u101_20:
  8903  03BD                     i1l3361:
  8904                           
  8905                           ;mcc_generated_files/eusart.c: 241:         EUSART_ErrorHandler();
  8906  03BD  0831               	movf	_EUSART_ErrorHandler+1,w
  8907  03BE  008A               	movwf	10
  8908  03BF  0830               	movf	_EUSART_ErrorHandler,w
  8909  03C0  000A               	callw
  8910  03C1  3183               	pagesel	$
  8911                           
  8912                           ;mcc_generated_files/eusart.c: 242:     } else {
  8913  03C2  2BC6               	goto	i1l342
  8914  03C3                     i1l3363:
  8915                           
  8916                           ;mcc_generated_files/eusart.c: 243:         EUSART_RxDataHandler();
  8917  03C3  3185  25D8  3183   	fcall	_EUSART_RxDataHandler
  8918  03C6                     i1l342:
  8919  03C6  0008               	return
  8920  03C7                     __end_of_EUSART_Receive_ISR:
  8921                           
  8922                           	psect	text74
  8923  0FEB                     __ptext74:	
  8924 ;; *************** function _EUSART_DefaultOverrunErrorHandler *****************
  8925 ;; Defined at:
  8926 ;;		line 261 in file "mcc_generated_files/eusart.c"
  8927 ;; Parameters:    Size  Location     Type
  8928 ;;		None
  8929 ;; Auto vars:     Size  Location     Type
  8930 ;;		None
  8931 ;; Return value:  Size  Location     Type
  8932 ;;                  1    wreg      void 
  8933 ;; Registers used:
  8934 ;;		None
  8935 ;; Tracked objects:
  8936 ;;		On entry : 0/0
  8937 ;;		On exit  : 0/0
  8938 ;;		Unchanged: 0/0
  8939 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8940 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8941 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8942 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8943 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8944 ;;Total ram usage:        0 bytes
  8945 ;; Hardware stack levels used: 1
  8946 ;; This function calls:
  8947 ;;		Nothing
  8948 ;; This function is called by:
  8949 ;;		_EUSART_Initialize
  8950 ;;		_EUSART_Receive_ISR
  8951 ;; This function uses a non-reentrant model
  8952 ;;
  8953                           
  8954                           
  8955                           ;psect for function _EUSART_DefaultOverrunErrorHandler
  8956  0FEB                     _EUSART_DefaultOverrunErrorHandler:
  8957  0FEB                     i1l3261:	
  8958                           ;incstack = 0
  8959                           ; Regs used in _EUSART_DefaultOverrunErrorHandler: []
  8960                           
  8961                           
  8962                           ;mcc_generated_files/eusart.c: 264:     RCSTAbits.CREN = 0;
  8963  0FEB  0023               	movlb	3	; select bank3
  8964  0FEC  121D               	bcf	29,4	;volatile
  8965                           
  8966                           ;mcc_generated_files/eusart.c: 265:     RCSTAbits.CREN = 1;
  8967  0FED  161D               	bsf	29,4	;volatile
  8968  0FEE                     i1l352:
  8969  0FEE  0008               	return
  8970  0FEF                     __end_of_EUSART_DefaultOverrunErrorHandler:
  8971                           
  8972                           	psect	text75
  8973  0FD1                     __ptext75:	
  8974 ;; *************** function _EUSART_DefaultFramingErrorHandler *****************
  8975 ;; Defined at:
  8976 ;;		line 259 in file "mcc_generated_files/eusart.c"
  8977 ;; Parameters:    Size  Location     Type
  8978 ;;		None
  8979 ;; Auto vars:     Size  Location     Type
  8980 ;;		None
  8981 ;; Return value:  Size  Location     Type
  8982 ;;                  1    wreg      void 
  8983 ;; Registers used:
  8984 ;;		None
  8985 ;; Tracked objects:
  8986 ;;		On entry : 0/0
  8987 ;;		On exit  : 0/0
  8988 ;;		Unchanged: 0/0
  8989 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8990 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8991 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8992 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8993 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8994 ;;Total ram usage:        0 bytes
  8995 ;; Hardware stack levels used: 1
  8996 ;; This function calls:
  8997 ;;		Nothing
  8998 ;; This function is called by:
  8999 ;;		_EUSART_Initialize
  9000 ;;		_EUSART_Receive_ISR
  9001 ;; This function uses a non-reentrant model
  9002 ;;
  9003                           
  9004                           
  9005                           ;psect for function _EUSART_DefaultFramingErrorHandler
  9006  0FD1                     _EUSART_DefaultFramingErrorHandler:
  9007  0FD1                     i1l349:	
  9008                           ;incstack = 0
  9009                           ; Regs used in _EUSART_DefaultFramingErrorHandler: []
  9010                           
  9011  0FD1  0008               	return
  9012  0FD2                     __end_of_EUSART_DefaultFramingErrorHandler:
  9013                           
  9014                           	psect	text76
  9015  0FE7                     __ptext76:	
  9016 ;; *************** function _EUSART_DefaultErrorHandler *****************
  9017 ;; Defined at:
  9018 ;;		line 269 in file "mcc_generated_files/eusart.c"
  9019 ;; Parameters:    Size  Location     Type
  9020 ;;		None
  9021 ;; Auto vars:     Size  Location     Type
  9022 ;;		None
  9023 ;; Return value:  Size  Location     Type
  9024 ;;                  1    wreg      void 
  9025 ;; Registers used:
  9026 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9027 ;; Tracked objects:
  9028 ;;		On entry : 0/0
  9029 ;;		On exit  : 0/0
  9030 ;;		Unchanged: 0/0
  9031 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9032 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9033 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9034 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9035 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9036 ;;Total ram usage:        0 bytes
  9037 ;; Hardware stack levels used: 1
  9038 ;; Hardware stack levels required when called: 1
  9039 ;; This function calls:
  9040 ;;		_EUSART_RxDataHandler
  9041 ;; This function is called by:
  9042 ;;		_EUSART_Initialize
  9043 ;;		_EUSART_Receive_ISR
  9044 ;; This function uses a non-reentrant model
  9045 ;;
  9046                           
  9047                           
  9048                           ;psect for function _EUSART_DefaultErrorHandler
  9049  0FE7                     _EUSART_DefaultErrorHandler:
  9050  0FE7                     i1l3263:	
  9051                           ;incstack = 0
  9052                           ; Regs used in _EUSART_DefaultErrorHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  9053                           
  9054                           
  9055                           ;mcc_generated_files/eusart.c: 270:     EUSART_RxDataHandler();
  9056  0FE7  3185  25D8  318F   	fcall	_EUSART_RxDataHandler
  9057  0FEA                     i1l355:
  9058  0FEA  0008               	return
  9059  0FEB                     __end_of_EUSART_DefaultErrorHandler:
  9060                           
  9061                           	psect	text77
  9062  05D8                     __ptext77:	
  9063 ;; *************** function _EUSART_RxDataHandler *****************
  9064 ;; Defined at:
  9065 ;;		line 249 in file "mcc_generated_files/eusart.c"
  9066 ;; Parameters:    Size  Location     Type
  9067 ;;		None
  9068 ;; Auto vars:     Size  Location     Type
  9069 ;;		None
  9070 ;; Return value:  Size  Location     Type
  9071 ;;                  1    wreg      void 
  9072 ;; Registers used:
  9073 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9074 ;; Tracked objects:
  9075 ;;		On entry : 0/0
  9076 ;;		On exit  : 0/0
  9077 ;;		Unchanged: 0/0
  9078 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9079 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9080 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9081 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9082 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9083 ;;Total ram usage:        1 bytes
  9084 ;; Hardware stack levels used: 1
  9085 ;; This function calls:
  9086 ;;		Nothing
  9087 ;; This function is called by:
  9088 ;;		_EUSART_Receive_ISR
  9089 ;;		_EUSART_DefaultErrorHandler
  9090 ;; This function uses a non-reentrant model
  9091 ;;
  9092                           
  9093                           
  9094                           ;psect for function _EUSART_RxDataHandler
  9095  05D8                     _EUSART_RxDataHandler:
  9096  05D8                     i1l2969:	
  9097                           ;incstack = 0
  9098                           ; Regs used in _EUSART_RxDataHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
  9099                           
  9100                           
  9101                           ;mcc_generated_files/eusart.c: 251:     eusartRxBuffer[eusartRxHead++] = RCREG;
  9102  05D8  0023               	movlb	3	; select bank3
  9103  05D9  0819               	movf	25,w	;volatile
  9104  05DA  00F0               	movwf	??_EUSART_RxDataHandler
  9105  05DB  0020               	movlb	0	; select bank0
  9106  05DC  0842               	movf	_eusartRxHead,w
  9107  05DD  3EDD               	addlw	(low (_eusartRxBuffer| 0))& (0+255)
  9108  05DE  0086               	movwf	6
  9109  05DF  0187               	clrf	7
  9110  05E0  0870               	movf	??_EUSART_RxDataHandler,w
  9111  05E1  0081               	movwf	1
  9112  05E2                     i1l2971:
  9113  05E2  3001               	movlw	1
  9114  05E3  00F0               	movwf	??_EUSART_RxDataHandler
  9115  05E4  0870               	movf	??_EUSART_RxDataHandler,w
  9116  05E5  07C2               	addwf	_eusartRxHead,f	;volatile
  9117  05E6                     i1l2973:
  9118                           
  9119                           ;mcc_generated_files/eusart.c: 252:     if(sizeof(eusartRxBuffer) <= eusartRxHead)
  9120  05E6  3008               	movlw	8
  9121  05E7  0242               	subwf	_eusartRxHead,w	;volatile
  9122  05E8  1C03               	skipc
  9123  05E9  2DEB               	goto	u82_21
  9124  05EA  2DEC               	goto	u82_20
  9125  05EB                     u82_21:
  9126  05EB  2DED               	goto	i1l2977
  9127  05EC                     u82_20:
  9128  05EC                     i1l2975:
  9129                           
  9130                           ;mcc_generated_files/eusart.c: 253:     {;mcc_generated_files/eusart.c: 254:         eus
      +                          artRxHead = 0;
  9131  05EC  01C2               	clrf	_eusartRxHead	;volatile
  9132  05ED                     i1l2977:
  9133                           
  9134                           ;mcc_generated_files/eusart.c: 256:     eusartRxCount++;
  9135  05ED  3001               	movlw	1
  9136  05EE  00F0               	movwf	??_EUSART_RxDataHandler
  9137  05EF  0870               	movf	??_EUSART_RxDataHandler,w
  9138  05F0  07C0               	addwf	_eusartRxCount,f	;volatile
  9139  05F1                     i1l346:
  9140  05F1  0008               	return
  9141  05F2                     __end_of_EUSART_RxDataHandler:
  9142  007E                     btemp	set	126	;btemp
  9143  007E                     int$flags	set	126
  9144  007E                     wtemp0	set	126
  9145                           
  9146                           	psect	idloc
  9147                           
  9148                           ;Config register IDLOC0 @ 0x8000
  9149                           ;	unspecified, using default values
  9150  8000                     	org	32768
  9151  8000  3FFF               	dw	16383
  9152                           
  9153                           ;Config register IDLOC1 @ 0x8001
  9154                           ;	unspecified, using default values
  9155  8001                     	org	32769
  9156  8001  3FFF               	dw	16383
  9157                           
  9158                           ;Config register IDLOC2 @ 0x8002
  9159                           ;	unspecified, using default values
  9160  8002                     	org	32770
  9161  8002  3FFF               	dw	16383
  9162                           
  9163                           ;Config register IDLOC3 @ 0x8003
  9164                           ;	unspecified, using default values
  9165  8003                     	org	32771
  9166  8003  3FFF               	dw	16383
  9167                           
  9168                           	psect	config
  9169                           
  9170                           ;Config register CONFIG1 @ 0x8007
  9171                           ;	Oscillator Selection
  9172                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  9173                           ;	Watchdog Timer Enable
  9174                           ;	WDTE = OFF, WDT disabled
  9175                           ;	Power-up Timer Enable
  9176                           ;	PWRTE = OFF, PWRT disabled
  9177                           ;	MCLR Pin Function Select
  9178                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  9179                           ;	Flash Program Memory Code Protection
  9180                           ;	CP = OFF, Program memory code protection is disabled
  9181                           ;	Data Memory Code Protection
  9182                           ;	CPD = OFF, Data memory code protection is disabled
  9183                           ;	Brown-out Reset Enable
  9184                           ;	BOREN = ON, Brown-out Reset enabled
  9185                           ;	Clock Out Enable
  9186                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  9187                           ;	Internal/External Switchover
  9188                           ;	IESO = ON, Internal/External Switchover mode is enabled
  9189                           ;	Fail-Safe Clock Monitor Enable
  9190                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  9191  8007                     	org	32775
  9192  8007  3FE4               	dw	16356
  9193                           
  9194                           ;Config register CONFIG2 @ 0x8008
  9195                           ;	Flash Memory Self-Write Protection
  9196                           ;	WRT = OFF, Write protection off
  9197                           ;	PLL Enable
  9198                           ;	PLLEN = ON, 4x PLL enabled
  9199                           ;	Stack Overflow/Underflow Reset Enable
  9200                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  9201                           ;	Brown-out Reset Voltage Selection
  9202                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  9203                           ;	Low-Voltage Programming Enable
  9204                           ;	LVP = ON, Low-voltage programming enabled
  9205  8008                     	org	32776
  9206  8008  3FFF               	dw	16383

Data Sizes:
    Strings     95
    Constant    32
    Data        1
    BSS         116
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      14
    BANK0            80     36      75
    BANK1            80      3      80
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    I2C_Read1ByteRegister@returnValue.data	PTR unsigned char  size(1) Largest target is 0

    I2C_Read2ByteRegister@returnValue.data	PTR unsigned char  size(1) Largest target is 0

    I2C_Write1ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    I2C_Write2ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    I2C_DO_TX$2293$0	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C_DO_TX$2298	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C_DO_TX$2293	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_MasterFsm$2292	const PTR FTN()enum E3338 size(2) Largest target is 1
		 -> I2C_DO_ADDRESS_NACK(), I2C_DO_RESET(), I2C_DO_RX_NACK_RESTART(), I2C_DO_RX_NACK_STOP(), 
		 -> I2C_DO_RX_ACK(), I2C_DO_SEND_STOP(), I2C_DO_SEND_RESTART(), I2C_DO_SEND_RESTART_WRITE(), 
		 -> I2C_DO_SEND_RESTART_READ(), I2C_DO_TX_EMPTY(), I2C_DO_RCEN(), I2C_DO_RX(), 
		 -> I2C_DO_TX(), I2C_DO_SEND_ADR_WRITE(), I2C_DO_SEND_ADR_READ(), I2C_DO_IDLE(), 

    I2C_CallbackReturnStop@funPtr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C_CallbackReturnReset@funPtr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    Absolute function$0	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK0[1]), 

    S800$0$0	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S1896_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK0[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_7(CODE[16]), STR_6(CODE[15]), STR_5(CODE[9]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 16
		 -> STR_7(CODE[16]), STR_6(CODE[15]), STR_5(CODE[9]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_7(CODE[16]), STR_6(CODE[15]), STR_5(CODE[9]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    LCD_Write_String@Str	PTR unsigned char  size(2) Largest target is 17
		 -> STR_4(CODE[17]), STR_3(CODE[14]), STR_2(CODE[8]), STR_1(CODE[16]), 

    I2C_SetCallback@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C_SetCallback@cb	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> Absolute function(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), wr1RegCompleteHandler(), 
		 -> rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_SetDataCompleteCallback@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C_SetDataCompleteCallback@cb	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> Absolute function(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), wr1RegCompleteHandler(), 
		 -> rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_SetBuffer@buffer	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@reg(COMMON[1]), I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@reg(COMMON[1]), I2C_Write2ByteRegister@data(COMMON[2]), 
		 -> I2C_Write1ByteRegister@reg(COMMON[1]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@reg(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@reg(COMMON[1]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    S800$data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@reg(COMMON[1]), I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@reg(COMMON[1]), I2C_Write2ByteRegister@data(COMMON[2]), 
		 -> I2C_Write1ByteRegister@reg(COMMON[1]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@reg(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@reg(COMMON[1]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C_Status.data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@reg(COMMON[1]), I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@reg(COMMON[1]), I2C_Write2ByteRegister@data(COMMON[2]), 
		 -> I2C_Write1ByteRegister@reg(COMMON[1]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@reg(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@reg(COMMON[1]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    S800$callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C_Status.callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    S800$callbackTable	PTR FTN(PTR void ,)enum E360[6] size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_Status.callbackTable	PTR FTN(PTR void ,)enum E360[6] size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    i2c_fsmStateTable	const PTR FTN()enum E3338[16] size(2) Largest target is 1
		 -> I2C_DO_ADDRESS_NACK(), I2C_DO_RESET(), I2C_DO_RX_NACK_RESTART(), I2C_DO_RX_NACK_STOP(), 
		 -> I2C_DO_RX_ACK(), I2C_DO_SEND_STOP(), I2C_DO_SEND_RESTART(), I2C_DO_SEND_RESTART_WRITE(), 
		 -> I2C_DO_SEND_RESTART_READ(), I2C_DO_TX_EMPTY(), I2C_DO_RCEN(), I2C_DO_RX(), 
		 -> I2C_DO_TX(), I2C_DO_SEND_ADR_WRITE(), I2C_DO_SEND_ADR_READ(), I2C_DO_IDLE(), 

    MSSP_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C_MasterIsr(), Absolute function(), 

    EUSART_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), 

    EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_Receive_ISR(), 

    EUSART_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), 

    EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_Transmit_ISR(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultErrorHandler(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultOverrunErrorHandler(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultFramingErrorHandler(), 

    rdBlkRegCompleteHandler@ptr.data	PTR unsigned char  size(1) Largest target is 0

    rdBlkRegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    wr2RegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    wr1RegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    rd2RegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    rd1RegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    S95$data	PTR unsigned char  size(1) Largest target is 0

    bufferBlock.data	PTR unsigned char  size(1) Largest target is 0


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _I2C_MasterFsm->_I2C_DO_ADDRESS_NACK
    _I2C_MasterFsm->_I2C_DO_RX
    _I2C_MasterFsm->_I2C_DO_TX
    _I2C_MasterFsm->_I2C_DO_TX_EMPTY
    _I2C_DO_TX_EMPTY->_I2C_CallbackReturnReset
    _I2C_DO_TX_EMPTY->_I2C_CallbackReturnStop
    _I2C_DO_TX_EMPTY->_rd1RegCompleteHandler
    _I2C_DO_TX_EMPTY->_rd2RegCompleteHandler
    _I2C_DO_TX_EMPTY->_rdBlkRegCompleteHandler
    _I2C_DO_TX_EMPTY->_wr1RegCompleteHandler
    _I2C_DO_TX_EMPTY->_wr2RegCompleteHandler
    _I2C_DO_TX->_I2C_CallbackReturnReset
    _I2C_DO_TX->_I2C_CallbackReturnStop
    _I2C_DO_TX->_rd1RegCompleteHandler
    _I2C_DO_TX->_rd2RegCompleteHandler
    _I2C_DO_TX->_rdBlkRegCompleteHandler
    _I2C_DO_TX->_wr1RegCompleteHandler
    _I2C_DO_TX->_wr2RegCompleteHandler
    _I2C_DO_SEND_ADR_WRITE->_I2C_MasterSendTxData
    _I2C_DO_RX->_I2C_CallbackReturnReset
    _I2C_DO_RX->_I2C_CallbackReturnStop
    _I2C_DO_RX->_rd1RegCompleteHandler
    _I2C_DO_RX->_rd2RegCompleteHandler
    _I2C_DO_RX->_rdBlkRegCompleteHandler
    _I2C_DO_RX->_wr1RegCompleteHandler
    _I2C_DO_RX->_wr2RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_I2C_CallbackReturnReset
    _I2C_DO_ADDRESS_NACK->_I2C_CallbackReturnStop
    _I2C_DO_ADDRESS_NACK->_rd1RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_rd2RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_rdBlkRegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_wr1RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_wr2RegCompleteHandler
    _wr2RegCompleteHandler->_I2C_SetDataCompleteCallback
    _wr1RegCompleteHandler->_I2C_SetDataCompleteCallback
    _rdBlkRegCompleteHandler->_I2C_SetDataCompleteCallback
    _rd2RegCompleteHandler->_I2C_SetDataCompleteCallback
    _rd1RegCompleteHandler->_I2C_SetDataCompleteCallback
    _I2C_SetDataCompleteCallback->_I2C_SetCallback
    _EUSART_Receive_ISR->_EUSART_RxDataHandler
    _EUSART_DefaultErrorHandler->_EUSART_RxDataHandler

Critical Paths under _main in BANK0

    _main->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_fputc
    _fputc->_putch
    _putch->_EUSART_Write
    _SYSTEM_Initialize->_EUSART_Initialize
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    _EUSART_Initialize->_EUSART_SetRxInterruptHandler
    _EUSART_Initialize->_EUSART_SetTxInterruptHandler
    _LCD_Write_String->_LCD_Write_Char
    _LCD_Write_Char->_LCD_Write_4Bit
    _LCD_Set_Cursor->_LCD_CMD
    _LCD_Init->_LCD_CMD
    _LCD_CMD->_LCD_Write_4Bit
    _LCD_Write_4Bit->_IO_Expander_Write
    _IO_Expander_Write->_I2C_Master_Write

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _I2C_MasterIsr->_I2C_MasterFsm

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0    4648
                                             34 BANK0      2     2      0
                                              0 BANK1      3     3      0
                  _ADC_GetConversion
                        _EUSART_Read
                    _I2C_Master_Init
                           _LCD_Init
                     _LCD_Set_Cursor
                   _LCD_Write_String
                  _SYSTEM_Initialize
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                               6     4      2    2242
                                             30 BANK0      4     2      2
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     5      3    1897
                                             22 BANK0      8     5      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           40    38      2    1471
                                             14 BANK0      8     6      2
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3     957
                                              6 BANK0      8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0      93
                                              5 BANK0      1     1      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (6) _EUSART_Write                                         2     2      0      62
                                              3 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     605
                     _ADC_Initialize
                  _EUSART_Initialize
                     _I2C_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    1     1      0     605
                                              5 BANK0      1     1      0
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetTxInterruptHandler                         2     0      2     121
                                              3 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetRxInterruptHandler                         2     0      2     121
                                              3 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2     121
                                              3 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2     121
                                              3 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2     121
                                              3 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_Write_String                                     5     3      2     679
                                              9 BANK0      5     3      2
                     _LCD_Write_Char
 ---------------------------------------------------------------------------------
 (2) _LCD_Write_Char                                       2     2      0     189
                                              7 BANK0      2     2      0
                     _LCD_Write_4Bit
 ---------------------------------------------------------------------------------
 (1) _LCD_Set_Cursor                                       4     3      1     704
                                              9 BANK0      4     3      1
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             3     3      0     282
                                              9 BANK0      3     3      0
                  _IO_Expander_Write
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _LCD_CMD                                              2     2      0     189
                                              7 BANK0      2     2      0
                     _LCD_Write_4Bit
 ---------------------------------------------------------------------------------
 (3) _LCD_Write_4Bit                                       2     2      0     127
                                              5 BANK0      2     2      0
                  _IO_Expander_Write
 ---------------------------------------------------------------------------------
 (4) _IO_Expander_Write                                    1     1      0      62
                                              4 BANK0      1     1      0
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Write                                     1     1      0      31
                                              3 BANK0      1     1      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (6) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART_Read                                          2     2      0      37
                                              3 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _ADC_GetConversion                                    4     2      2      31
                                              3 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _INTERRUPT_InterruptManager                           0     0      0   78254
                   Absolute function *
                 _EUSART_Receive_ISR *
                _EUSART_Transmit_ISR *
                      _I2C_MasterIsr *
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterIsr                                        0     0      0   78254
                      _I2C_MasterFsm
 ---------------------------------------------------------------------------------
 (9) _I2C_MasterFsm                                        3     3      0   78254
                                              0 BANK0      3     3      0
                _I2C_DO_ADDRESS_NACK *
                        _I2C_DO_IDLE *
                        _I2C_DO_RCEN *
                       _I2C_DO_RESET *
                          _I2C_DO_RX *
                      _I2C_DO_RX_ACK *
             _I2C_DO_RX_NACK_RESTART *
                _I2C_DO_RX_NACK_STOP *
               _I2C_DO_SEND_ADR_READ *
              _I2C_DO_SEND_ADR_WRITE *
                _I2C_DO_SEND_RESTART *
           _I2C_DO_SEND_RESTART_READ *
          _I2C_DO_SEND_RESTART_WRITE *
                   _I2C_DO_SEND_STOP *
                          _I2C_DO_TX *
                    _I2C_DO_TX_EMPTY *
                 _I2C_MasterClearIrq
                   _I2C_MasterIsNack
 ---------------------------------------------------------------------------------
 (10) _I2C_MasterClearIrq                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C_DO_TX_EMPTY                                     3     3      0   19547
                                             10 COMMON     3     3      0
                   Absolute function *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
                _I2C_DO_SEND_RESTART
                   _I2C_DO_SEND_STOP
                   _I2C_MasterSetIrq
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (11) _I2C_MasterSetIrq                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C_DO_TX                                           3     3      0   19569
                                             10 COMMON     3     3      0
                   Absolute function *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
           _I2C_DO_SEND_RESTART_READ
          _I2C_DO_SEND_RESTART_WRITE
                   _I2C_DO_SEND_STOP
                   _I2C_MasterIsNack
               _I2C_MasterSendTxData
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (10) _I2C_MasterIsNack                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C_DO_SEND_RESTART_WRITE                           0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (11) _I2C_DO_SEND_RESTART_READ                            0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (10) _I2C_DO_SEND_ADR_WRITE                               0     0      0      22
               _I2C_MasterSendTxData
 ---------------------------------------------------------------------------------
 (10) _I2C_DO_SEND_ADR_READ                                0     0      0      22
               _I2C_MasterSendTxData
 ---------------------------------------------------------------------------------
 (11) _I2C_MasterSendTxData                                1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (10) _I2C_DO_RX_ACK                                       0     0      0       0
                  _I2C_MasterSendAck
 ---------------------------------------------------------------------------------
 (10) _I2C_DO_RX                                           3     3      0   19547
                                             10 COMMON     3     3      0
                   Absolute function *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
             _I2C_DO_RX_NACK_RESTART
                _I2C_DO_RX_NACK_STOP
                _I2C_MasterGetRxData
                  _I2C_MasterSendAck
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (11) _I2C_MasterSendAck                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C_MasterGetRxData                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C_DO_RX_NACK_STOP                                 0     0      0       0
                 _I2C_MasterSendNack
 ---------------------------------------------------------------------------------
 (10) _I2C_DO_RX_NACK_RESTART                              0     0      0       0
                 _I2C_MasterSendNack
 ---------------------------------------------------------------------------------
 (11) _I2C_MasterSendNack                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C_DO_RESET                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C_DO_RCEN                                         0     0      0       0
                  _I2C_MasterStartRx
 ---------------------------------------------------------------------------------
 (11) _I2C_MasterStartRx                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C_DO_IDLE                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C_DO_ADDRESS_NACK                                 3     3      0   19547
                                             10 COMMON     3     3      0
                   Absolute function *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
                _I2C_DO_SEND_RESTART
                   _I2C_DO_SEND_STOP
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (11) _wr2RegCompleteHandler                               1     0      1    3852
                                              9 COMMON     1     0      1
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _wr1RegCompleteHandler                               1     0      1    3852
                                              9 COMMON     1     0      1
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _rdBlkRegCompleteHandler                             1     0      1    3874
                                              9 COMMON     1     0      1
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _rd2RegCompleteHandler                               1     0      1    3852
                                              9 COMMON     1     0      1
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _rd1RegCompleteHandler                               1     0      1    3852
                                              9 COMMON     1     0      1
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (12) _I2C_SetDataCompleteCallback                         4     1      3    2478
                                              5 COMMON     4     1      3
                    _I2C_SetCallback
 ---------------------------------------------------------------------------------
 (13) _I2C_SetCallback                                     5     2      3     914
                                              0 COMMON     5     2      3
 ---------------------------------------------------------------------------------
 (12) _I2C_SetBuffer                                       4     2      2    1352
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (11) _I2C_DO_SEND_STOP                                    0     0      0       0
                     _I2C_MasterStop
 ---------------------------------------------------------------------------------
 (12) _I2C_MasterStop                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C_DO_SEND_RESTART                                 0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (12) _I2C_MasterEnableRestart                             0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C_CallbackReturnStop                              1     0      1       0
                                              9 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (11) _I2C_CallbackReturnReset                             1     0      1     265
                                              9 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (8) _EUSART_Transmit_ISR                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) _EUSART_Receive_ISR                                   0     0      0       0
                   Absolute function *
         _EUSART_DefaultErrorHandler *
  _EUSART_DefaultFramingErrorHandler *
  _EUSART_DefaultOverrunErrorHandler *
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (9) _EUSART_DefaultOverrunErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _EUSART_DefaultFramingErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _EUSART_DefaultErrorHandler                           0     0      0       0
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (9) _EUSART_RxDataHandler                                 1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (11) Absolute function(Fake)                              1     0      1       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_GetConversion
   _EUSART_Read
   _I2C_Master_Init
   _LCD_Init
     _IO_Expander_Write
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _LCD_CMD
       _LCD_Write_4Bit
         _IO_Expander_Write
   _LCD_Set_Cursor
     _LCD_CMD
   _LCD_Write_String
     _LCD_Write_Char
       _LCD_Write_4Bit
   _SYSTEM_Initialize
     _ADC_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
     _I2C_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _WDT_Initialize
   _printf
     _vfprintf
       _vfpfcnvrt
         _fputc
           _putch
             _EUSART_Write

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART_Receive_ISR *
     Absolute function(Fake) *
     _EUSART_DefaultErrorHandler *
       _EUSART_RxDataHandler
     _EUSART_DefaultFramingErrorHandler *
     _EUSART_DefaultOverrunErrorHandler *
     _EUSART_RxDataHandler *
   _EUSART_Transmit_ISR *
   _I2C_MasterIsr *
     _I2C_MasterFsm
       _I2C_DO_ADDRESS_NACK *
         Absolute function(Fake) *
         _I2C_CallbackReturnReset *
         _I2C_CallbackReturnStop *
         _I2C_DO_SEND_RESTART *
           _I2C_MasterEnableRestart
         _I2C_DO_SEND_STOP *
           _I2C_MasterStop
         _rd1RegCompleteHandler *
           _I2C_SetBuffer
           _I2C_SetDataCompleteCallback
             _I2C_SetCallback
         _rd2RegCompleteHandler *
           _I2C_SetBuffer
           _I2C_SetDataCompleteCallback
         _rdBlkRegCompleteHandler *
           _I2C_SetBuffer
           _I2C_SetDataCompleteCallback
         _wr1RegCompleteHandler *
           _I2C_SetBuffer
           _I2C_SetDataCompleteCallback
         _wr2RegCompleteHandler *
           _I2C_SetBuffer
           _I2C_SetDataCompleteCallback
       _I2C_DO_IDLE *
       _I2C_DO_RCEN *
         _I2C_MasterStartRx
       _I2C_DO_RESET *
       _I2C_DO_RX *
         Absolute function(Fake) *
         _I2C_CallbackReturnReset *
         _I2C_CallbackReturnStop *
         _I2C_DO_RX_NACK_RESTART *
           _I2C_MasterSendNack
         _I2C_DO_RX_NACK_STOP *
           _I2C_MasterSendNack
         _I2C_MasterGetRxData *
         _I2C_MasterSendAck *
         _rd1RegCompleteHandler *
         _rd2RegCompleteHandler *
         _rdBlkRegCompleteHandler *
         _wr1RegCompleteHandler *
         _wr2RegCompleteHandler *
       _I2C_DO_RX_ACK *
         _I2C_MasterSendAck
       _I2C_DO_RX_NACK_RESTART *
       _I2C_DO_RX_NACK_STOP *
       _I2C_DO_SEND_ADR_READ *
         _I2C_MasterSendTxData
       _I2C_DO_SEND_ADR_WRITE *
         _I2C_MasterSendTxData
       _I2C_DO_SEND_RESTART *
       _I2C_DO_SEND_RESTART_READ *
         _I2C_MasterEnableRestart
       _I2C_DO_SEND_RESTART_WRITE *
         _I2C_MasterEnableRestart
       _I2C_DO_SEND_STOP *
       _I2C_DO_TX *
         Absolute function(Fake) *
         _I2C_CallbackReturnReset *
         _I2C_CallbackReturnStop *
         _I2C_DO_SEND_RESTART_READ *
         _I2C_DO_SEND_RESTART_WRITE *
         _I2C_DO_SEND_STOP *
         _I2C_MasterIsNack *
         _I2C_MasterSendTxData *
         _rd1RegCompleteHandler *
         _rd2RegCompleteHandler *
         _rdBlkRegCompleteHandler *
         _wr1RegCompleteHandler *
         _wr2RegCompleteHandler *
       _I2C_DO_TX_EMPTY *
         Absolute function(Fake) *
         _I2C_CallbackReturnReset *
         _I2C_CallbackReturnStop *
         _I2C_DO_SEND_RESTART *
         _I2C_DO_SEND_STOP *
         _I2C_MasterSetIrq *
         _rd1RegCompleteHandler *
         _rd2RegCompleteHandler *
         _rdBlkRegCompleteHandler *
         _wr1RegCompleteHandler *
         _wr2RegCompleteHandler *
       _I2C_MasterClearIrq *
       _I2C_MasterIsNack *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      D       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     24      4B       5       93.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      3      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      A9      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      A9      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sat Mar 19 18:09:43 2022

                ?_EUSART_SetRxInterruptHandler 0049                         ??_I2C_DO_SEND_ADR_READ 0070  
                  __size_of_I2C_MasterSendNack 0004                        ??_I2C_DO_SEND_ADR_WRITE 0071  
                                  _SSPSTATbits 0214                                             _RS 007D  
                        ??_I2C_DO_SEND_RESTART 0070                                            l214 05AD  
                                          l143 0575                                            l320 04C1  
                __size_of_I2C_MasterSendTxData 0005                                            l217 05B8  
                                          l314 0505                                            l323 04DA  
                                          l173 0673                                            l510 0760  
                                          l182 07FF                                            l319 04B7  
                                          l176 073A                                            l361 07B0  
                                          l329 0791                                            l370 07AA  
                                          l179 073F                                            l364 07BC  
                                          l358 07B6                                            l199 0782  
                                          l367 07A4                                            l295 034B  
                                          l800 0147                                            l903 05D7  
                                          l912 0426                                            l852 0740  
                                          l780 0106                                            l790 0129  
                                          l782 010B                                            l855 074B  
                                          l783 0109                                            l775 00DA  
                                          l864 07C2                                            l849 0756  
                                          l873 06F3                                            l858 07C8  
                                          l786 0110                                            l875 06F8  
                                          l891 064C                                            l876 06F9  
                                          l796 013C                                            l885 01EF  
                                          l894 0636                                            l888 0660  
                                          l897 0620                                            _PEN 10B2  
                                          _SEN 10B0                         ??_EUSART_RxDataHandler 0070  
               ?_EUSART_SetFramingErrorHandler 0049                                            wreg 0009  
                              __end_of_LCD_CMD 0637                                   ?_EUSART_Read 0070  
                     ??_I2C_CallbackReturnStop 007A                                   _I2C_DO_RESET 07CF  
                          LCD_Write_String@Str 004F                                 _LCD_Set_Cursor 03F8  
                      ??_rd2RegCompleteHandler 007A                                           l4001 0357  
                                         l4011 07A5                                           l4003 035C  
                                         l1540 0685                                           l4021 0639  
                                         l4013 079F                                           l4101 07FC  
                                         l4005 0366                                           l4023 063D  
                                         l4103 077B                                           l4015 07B1  
                                         l4111 0309                                           l4007 0383  
                                         l4031 020B                                           l4201 074F  
                                         l4025 0642                                           l4105 077E  
                                         l4017 07AB                                           l4121 0322  
                                         l4113 0311                                           l4041 0237  
                                         l4033 020F                                           l4203 0750  
                                         l4211 016B                                           l4107 077F  
                                         l4019 07B7                                           l4131 033E  
                                         l4123 0324                                           l4115 031B  
                                         l4035 0213                                           l4051 0248  
                                         l4027 01F2                                           l4205 0753  
                                         l4141 0623                                           l4221 0195  
                                         l4213 016F                                           l4133 0340  
                                         l4125 0326                                           l4117 031E  
                                         l4109 0307                                           l4061 055A  
                                         l4053 0261                                           l1573 026B  
                                         l4037 0224                                           l4045 023D  
                                         l4029 0203                                           l4301 00DC  
                                         l4207 0755                                           l4143 0624  
                                         l4231 01D1                                           l4223 01A2  
                                         l4215 017B                                           l4135 0341  
                                         l4127 032E                                           l4119 0320  
                                         l4071 0565                                           l4063 055D  
                                         l1591 038C                                           l4047 0245  
                                         l4039 022C                                           l4151 0508  
                                         l4311 011A                                           l4303 00E9  
                                         l4145 0629                                           l4233 01DE  
                                         l4225 01AB                                           l4217 0184  
                                         l4209 0167                                           l4241 0407  
                                         l4137 0342                                           l4129 0336  
                                         l4081 0570                                           l4073 0568  
                                         l4065 055F                                           l4153 050C  
                                         l4321 0149                                           l4313 0127  
                                         l4305 00EB                                           l4171 05AB  
                                         l4227 01BC                                           l4219 0191  
                                         l4243 040D                                           l4235 03FA  
                                         l4147 060C                                           l4139 0349  
                                         l4091 075D                                           l4083 0571  
                                         l4075 056A                                           l4067 0561  
                                         l4059 0554                                           l4163 0661  
                                         l1579 052D                                           l4155 050F  
                                         l4315 012E                                           l4307 00F7  
                                         l4173 05B1                                           l4165 059A  
                                         l4181 04E1                                           l4229 01C0  
                                         l4237 03FB                                           l4245 0413  
                                         l4149 060E                                           l4253 05B9  
                                         l4093 075F                                           l4085 0573  
                                         l4077 056C                                           l4069 0563  
                                         l4157 0520                                           l4261 0674  
                                         l4325 0152                                           l4317 0133  
                                         l4309 0112                                           l4167 05A6  
                                         l4191 04FE                                           l4183 04F1  
                                         l4239 0401                                           l4255 05BD  
                                         l4087 0757                                           l4095 0734  
                                         l4079 056E                                           l4159 0529  
                                         l4263 0679                                           l4319 013E  
                                         l4271 0062                                           l4169 05A7  
                                         l4193 0501                                           l4185 04F5  
                                         l4177 04DB                                           l4257 05C7  
                                         l4089 075C                                           l4097 0737  
                                         l4281 007D                                           l4273 0065  
                                         l4195 0503                                           l4187 04FB  
                                         l4179 04DB                                           l4259 05CC  
                                         l4099 0738                                           l4291 00B2  
                                         l4283 0084                                           l4275 0066  
                                         l4189 04FC                                           l4293 00BA  
                                         l4285 008C                                           l4277 006E  
                                         l4199 074C                                           l4295 00C1  
                                         l4287 0098                                           l4279 0075  
                                         l4537 015B                                           l4297 00C9  
                                         l4289 00AB                                           l4539 041B  
                                         l4299 00D5                                           l3961 04B2  
                                         l3971 04D5                                           l3963 04BC  
                                         l3973 04D6                                           l3965 04C2  
                                         l3981 078D                                           l3983 07C3  
                                         l3991 06EC                                           l3967 04CB  
                                         l3975 04D8                                           l3959 04B2  
                                         l3977 0740                                           l3985 07C6  
                                         l3993 06EF                                           l3969 04CF  
                                         l3979 0745                                           l3987 07BD  
                                         l3995 064F                                           l3989 07C0  
                                         l3997 034C                                           l3999 0352  
                                         STR_1 06DA                                           STR_2 0773  
                                         STR_3 0719                                           STR_4 03E7  
                                         STR_5 0761                                           STR_6 070A  
                                         STR_7 06CA                                           u1400 04D5  
                                         u1401 04D4                                           u1410 0745  
                                         u1411 0744                                           u1420 074B  
                                         u1500 073F                                           u1421 074A  
                                         u1501 073E                                           _LATA 010C  
                                         u1430 06F8                                           _LATB 010D  
                                         u1431 06F7                                           _LATC 010E  
                                         u1440 0352                                           u1600 0110  
                                         _LATD 010F                                           u1441 0351  
                                         u1601 010F                                           _LATE 0110  
                                         u1450 0357                                           u1530 0529  
                                         u1610 012E                                           u1515 062D  
                                         u1451 0356                                           u1531 0528  
                                         u1611 012D                                           u1540 05B1  
                                         u1380 04B7                                           u1460 0366  
                                         u1620 0133                                           u1541 05B0  
                                         u1525 0617                                           u1381 04B6  
                                         u1461 0365                                           u1621 0132  
                                         u1550 04E1                                           u1390 04BC  
                                         u1470 0383                                           u1551 04E0  
                                         u1391 04BB                                           u1471 0382  
                                         u1560 04FB                                           u1480 0203  
                                         u1561 04FA                                           u1481 0202  
                                         u1570 05D7                                           u1490 0224  
                                         u1707 017F                                           u1571 05D6  
                                         u1475 037F                                           u1491 0223  
                                         u1580 00DA                                           u1717 018C  
                                         u1581 00D9                                           u1590 0106  
                                         u1727 0199                                           u1591 0105  
                                         u1647 0092                                           u1737 01A6  
                                         u1657 009E                                           u1747 01B5  
                                         u1595 0102                                           u1667 00CF  
                                         u1757 01C6                                           u1677 00E2  
                                         u1767 01D7                                           u1687 0120  
                                         u1777 01E8                                           u1697 0173  
                                         u1787 0649                                           u1797 05A8  
                                         _RCEN 10B3                                           i1l92 06B8  
                                         i1l95 06A7                                           i1l98 0696  
                                         _PLLR 04D6                                           _RSEN 10B1  
                                         _WPUB 020D                                           _WPUE 0210  
                      ??_wr2RegCompleteHandler 007A                              ?_LCD_Write_String 004F  
                                         _dbuf 00A0                                           _main 0062  
                     ?_I2C_CallbackReturnReset 0079                                           _prec 002C  
                                         _nout 0028                                           fsr0h 0005  
                                         fsr1h 0007                                           indf0 0000  
                                         fsr0l 0004                                           indf1 0001  
                                         fsr1l 0006                                           btemp 007E  
                                         start 0047                             ??_LCD_Write_String 0051  
                         LCD_Write_4Bit@Nibble 004C               __size_of_rdBlkRegCompleteHandler 0018  
                             __end_of_LCD_Init 01F0                               ?_I2C_Master_Init 0070  
                             ?_I2C_Master_Wait 0070                                  ?_EUSART_Write 0070  
                             ?_I2C_Master_Stop 0070                 __size_of_OSCILLATOR_Initialize 000C  
                                _I2C_DO_RX_ACK 07DE                  __end_of_OSCILLATOR_Initialize 0740  
                                        ?_main 0070                                          _ACKEN 10B4  
                                        _ACKDT 10B5                                          i1l101 06C9  
                                        i1l104 0609                                          i1l401 0045  
                                        i1l332 0595                                          i1l342 03C6  
                                        i1l335 0597                                          i1l352 0FEE  
                                        i1l346 05F1                                          i1l355 0FEA  
                                        i1l540 0733                                          i1l349 0FD1  
                                        i1l613 0455                                          i1l703 0FDA  
                                        i1l607 0798                                          i1l631 07F6  
                                        i1l560 0553                                          i1l712 0FF2  
                                        i1l640 07E7                                          i1l392 001A  
                                        i1l537 0709                                          i1l706 07CE  
                                        i1l570 07FB                                          i1l634 07F1  
                                        i1l730 0FE6                                          i1l394 002A  
                                        i1l643 07E2                                          i1l563 0FFA  
                                        i1l395 0045                                          i1l652 07D3  
                                        i1l396 003A                                          i1l709 0FF6  
                                        i1l733 0FE3                                          i1l573 0772  
                                        i1l637 07EC                                          i1l582 02C0  
                                        i1l646 07DD                                          i1l567 0483  
                                        i1l576 078A                                          i1l649 07D8  
                                        i1l666 0FD4                                          i1l658 04AF  
                                        i1l691 0FD7                                          i1l579 02A4  
                                        i1l595 02DE                                          i1l596 0306  
                                        i1l669 0003                                          i1l685 0FE0  
                                        i1l688 0FFF                                          i1l697 0FDD  
                                        _RCREG 0199                   __size_of_I2C_DO_RX_NACK_STOP 0005  
                                        _RCSTA 019D                                   vfpfcnvrt@fmt 0054  
                                        u73_20 0535                              ??_I2C_DO_TX_EMPTY 007A  
                                        u73_21 0534                                          _TRISA 008C  
                                        _TRISB 008D                                          _TRISC 008E  
                                        _TRISD 008F                                          _TRISE 0090  
                                        u82_20 05EC                                          u90_20 0466  
                                        _SSPIF 008B                                          u82_21 05EB  
                                        u90_21 0465                                          u83_20 0274  
                                        u83_21 0273                                          u76_20 0700  
                                        u84_20 02BD                                          u76_21 06FF  
                                        u84_21 02BC                                          u85_20 02D9  
                                        u85_21 02D8                                          u97_20 057D  
                                        u89_20 045E                                          u97_21 057C  
                                        u89_21 045D                                          _TXREG 019A  
                                        u98_20 058F                                          u98_21 058E  
                                        u99_20 0398                                          u99_21 0397  
                                        _TXSTA 019E                         __end_of_LCD_Set_Cursor 0427  
                            __end_of_I2C_DO_RX 0307                              __end_of_I2C_DO_TX 02C1  
                                        _flags 002E                                 _WDT_Initialize 07FC  
                                        _fputc 034C                         __size_of_I2C_MasterFsm 002E  
                       __size_of_I2C_MasterIsr 0004                                          _width 002A  
                                        _putch 078B                        _I2C_MasterEnableRestart 0FD5  
                                        pclath 000A                               ?_I2C_SetCallback 0070  
                                        status 0003                                          wtemp0 007E  
                            ?_I2C_DO_SEND_STOP 0070                         __size_of_I2C_SetBuffer 0010  
                           ??_I2C_DO_SEND_STOP 0070                                 _LCD_Write_4Bit 0637  
                               _LCD_Write_Char 060A                                __initialization 0049  
                                 __end_of_main 0165              __size_of_I2C_DO_SEND_RESTART_READ 0005  
                    ?_I2C_DO_SEND_RESTART_READ 0070                              _IO_Expander_Write 064D  
                               ??_EUSART_Write 0049                                 ?_I2C_DO_RX_ACK 0070  
                  ?_INTERRUPT_InterruptManager 0070                             ?_IO_Expander_Write 0070  
               ??_EUSART_SetRxInterruptHandler 004B                                         ??_main 0068  
                            ?_I2C_MasterIsNack 0070                                      ??_LCD_CMD 004D  
                            ?_I2C_MasterSetIrq 0070                             ??_I2C_MasterIsNack 0070  
                            ?_I2C_Master_Start 0070                              ?_I2C_Master_Write 0070  
                       __end_of_WDT_Initialize 0800                            ??_IO_Expander_Write 004A  
                              ?_LCD_Set_Cursor 004F                             ??_I2C_MasterSetIrq 0070  
                           ??_I2C_Master_Start 0049      __end_of_EUSART_DefaultFramingErrorHandler 0FD2  
   __size_of_EUSART_DefaultFramingErrorHandler 0001            ??_EUSART_DefaultFramingErrorHandler 0070  
           ?_EUSART_DefaultFramingErrorHandler 0070              _EUSART_DefaultFramingErrorHandler 0FD1  
                                       _ADCON0 009D                                         _ADCON1 009E  
                           ??_I2C_Master_Write 0049                     _EUSART_OverrunErrorHandler 0032  
              __end_of_I2C_CallbackReturnReset 0004                                         ?_fputc 004C  
                                       _ADRESH 009C                                         _ADRESL 009B  
              __size_of_I2C_CallbackReturnStop 0002                                         _APFCON 011D  
                I2C_SetDataCompleteCallback@cb 0075                                         _ANSELA 018C  
                                       ?_putch 0070                                         _ANSELB 018D  
                                       _ANSELD 018F                                         _ANSELE 0190  
                                       _BORCON 0116                                         u100_20 03A8  
                                       u100_21 03A7                                         u101_20 03BD  
                                       u101_21 03BC                                         i1l3001 0789  
                                       i1l3013 0279                                         i1l3005 026C  
                                       i1l3031 02BF                                         i1l3023 0281  
                                       i1l3111 07CF                                         i1l3025 02A6  
                                       i1l3017 027D                                         i1l3009 0275  
                                       i1l3041 02CB                                         i1l3105 07DE  
                                       i1l3113 07D1                                         i1l3121 0486  
                                       i1l3027 02B2                                         i1l3043 02CF  
                                       i1l3107 07E1                                         i1l3115 07D2  
                                       i1l3123 048B                                         i1l3029 02BD  
                                       i1l3053 02E0                                         i1l3045 02D9  
                                       i1l3133 0493                                         i1l3063 02E8  
                                       i1l3047 02DC                                         i1l3039 02C1  
                                       i1l3071 0792                                         i1l3127 048F  
                                       i1l3119 0484                                         u121_20 000A  
                                       i1l3081 042A                                         i1l3057 02E4  
                                       i1l3073 0794                                         u121_21 0009  
                                       i1l3091 0433                                         i1l3075 0797  
                                       i1l3261 0FEB                                         i1l3341 058F  
                                       i1l3333 0576                                         i1l3085 042E  
                                       i1l3263 0FE7                                         i1l3351 039E  
                                       i1l3343 0590                                         i1l3335 057D  
                                       i1l3087 0431                                         i1l3079 0427  
                                       i1l3271 0466                                         u122_20 000F  
                                       i1l3361 03BD                                         i1l3353 03A3  
                                       i1l3345 038D                                         i1l3337 0584  
                                       i1l3097 0437                                         i1l3273 046C  
                                       i1l3265 0456                                         u122_21 000E  
                                       i1l3363 03C3                                         i1l3355 03A8  
                                       i1l3347 0393                                         i1l3339 0589  
                                       i1l2811 0546                                         i1l3267 0459  
                                       i1l3611 0014                                         i1l3357 03AE  
                                       i1l3349 0398                                         i1l2821 0700  
                                       i1l2901 07E3                                         i1l3269 045E  
                                       i1l3621 003F                                         i1l3613 001F  
                                       i1l3605 0006                                         i1l3359 03B3  
                                       i1l2823 0708                                         i1l2807 052F  
                                       i1l2831 0FEF                                         i1l2911 0FF3  
                                       i1l2903 07E6                                         i1l3383 0FF7  
                                       i1l3615 0024                                         i1l3607 000A  
                                       u123_20 0014                                         i1l2809 0535  
                                       i1l2817 0727                                         i1l2921 07DC  
                                       i1l2913 07D4                                         i1l3617 002F  
                                       u123_21 0013                                         i1l3609 000F  
                                       i1l2827 0FD5                                         i1l2819 06FB  
                                       i1l2907 0FDE                                         i1l2915 07D7  
                                       i1l3619 0034                                         i1l2829 0FD8  
                                       i1l2845 06A8                                         i1l2853 0697  
                                       i1l2861 0686                                         i1l2925 0FDB  
                                       i1l2933 0FE1                                         i1l4541 04A7  
                                       i1l2871 06C1                                         i1l2847 06B0  
                                       i1l2855 069F                                         i1l2863 068E  
                                       i1l2935 0FD3                                         i1l4543 02F8  
                                       i1l2927 07E8                                         i1l2919 07D9  
                                       u124_20 001F                                         i1l2873 06C8  
                                       i1l2849 06B7                                         i1l2857 06A6  
                                       i1l2865 0695                                         i1l4545 0296  
                                       i1l2929 07EB                                         u124_21 001E  
                                       i1l2971 05E2                                         i1l2939 0002  
                                       i1l2883 07C9                                         i1l4547 0447  
                                       i1l2891 07F5                                         i1l2973 05E6  
                                       i1l2869 06B9                                         i1l2877 05F2  
                                       i1l2981 07F7                                         i1l2975 05EC  
                                       i1l2879 0608                                         i1l2887 0FFC  
                                       i1l2983 07F9                                         i1l2991 076C  
                                       i1l2895 07ED                                         u125_20 0024  
                                       i1l2977 05ED                                         i1l2969 05D8  
                                       i1l2985 07FA                                         i1l2993 0771  
                                       i1l2889 07F2                                         i1l2897 07F0  
                                       u125_21 0023                                         i1l2979 0FE4  
                                       i1l2989 076A                                         i1l2997 0783  
                                       i1l2999 0785                                         u126_20 002F  
                                       u126_21 002E                                         u127_20 0034  
                                       u127_21 0033                                         u128_20 003F  
                                       u128_21 003E                                         u129_20 0044  
                                       u129_21 0043                                         _OSCCON 0099  
                                       _SPBRGH 019C                                         _SPBRGL 019B  
                                       _WDTCON 0097                                         _SSPADD 0212  
                                       _TRISC3 0473                                         _TRISC4 0474  
                                       _SSPBUF 0211                                         _SSPCON 0215  
                       __end_of_LCD_Write_4Bit 064D                         __end_of_LCD_Write_Char 0621  
                          _I2C_MasterGetRxData 0FDE                      __end_of_IO_Expander_Write 0661  
                                main@reception 00EF                                   vfprintf@cfmt 0062  
                                _I2C_MasterFsm 0456                                  _I2C_MasterIsr 0FF7  
                          _EUSART_Transmit_ISR 0576                              I2C_SetCallback@cb 0070  
                      __size_of_I2C_MasterStop 0003                        __size_of_I2C_Initialize 000A  
                                       _printf 0674                                  _I2C_SetBuffer 06FA  
                                       fputc@c 004C                            _I2C_DO_ADDRESS_NACK 0484  
                         ?_I2C_MasterGetRxData 0070                                ?_WDT_Initialize 0070  
                    ??_I2C_MasterEnableRestart 0070                       ADC_GetConversion@channel 004C  
                             __end_of_vfprintf 052E                           ?_EUSART_Transmit_ISR 0070  
                         __size_of_EUSART_Read 002B                              _SYSTEM_Initialize 0661  
                      __end_of__initialization 005E                                      ?_LCD_Init 0070  
                              ?_LCD_Write_4Bit 0070                             ?_SYSTEM_Initialize 0070  
                         ?_I2C_DO_ADDRESS_NACK 0070                                ?_LCD_Write_Char 0070  
         __end_of_EUSART_SetTxInterruptHandler 07A5          __size_of_EUSART_SetTxInterruptHandler 0006  
                 _EUSART_SetTxInterruptHandler 079F                        _rdBlkRegCompleteHandler 05F2  
                               __pcstackCOMMON 0070                                 ?_I2C_MasterFsm 0070  
                               ?_I2C_MasterIsr 0070                                ??_I2C_DO_RX_ACK 0070  
                                 __pidataBANK0 0FD2                         _I2C_CallbackReturnStop 0FD3  
                          ??_SYSTEM_Initialize 004C                                  __end_of_fputc 038D  
                                __end_of_putch 0792                                 ?_I2C_SetBuffer 0070  
               __size_of_I2C_DO_SEND_ADR_WRITE 0008             __size_of_I2C_DO_SEND_RESTART_WRITE 0005  
                __end_of_I2C_DO_SEND_ADR_WRITE 078B                     ?_I2C_DO_SEND_RESTART_WRITE 0070  
                        ??_I2C_MasterGetRxData 0070                                 _OPTION_REGbits 0095  
                         _eusartRxStatusBuffer 0020                     __end_of_I2C_MasterClearIrq 0FE7  
              ??_EUSART_SetOverrunErrorHandler 004B                                        ??_fputc 004F  
                    __end_of_SYSTEM_Initialize 0674                          ??_EUSART_Transmit_ISR 0070  
                                      ??_putch 004B                              _I2C_MasterSendAck 0FF3  
                                   __pbssBANK0 0020                                     __pbssBANK1 00A0  
                         __end_of_EUSART_Write 04DB                                  ??_I2C_DO_IDLE 0070  
               __size_of_rd2RegCompleteHandler 0011                                  ??_I2C_DO_RCEN 0070  
                __end_of_rd2RegCompleteHandler 06A8                   __end_of_I2C_MasterSendTxData 1000  
                           ?_I2C_MasterSendAck 0070                                     ??_LCD_Init 004F  
                            _I2C_MasterStartRx 0FDB                 __size_of_wr2RegCompleteHandler 0011  
                        ??_I2C_DO_ADDRESS_NACK 007A                  __end_of_wr2RegCompleteHandler 06CA  
                  __size_of_EUSART_Receive_ISR 003A                            _I2C_DO_RX_NACK_STOP 07D9  
                        _rd1RegCompleteHandler 06A8                             ?_I2C_MasterStartRx 0070  
                   __end_of_I2C_MasterSendNack 0FF3                          _wr1RegCompleteHandler 0686  
                   __size_of_IO_Expander_Write 0014                                     __pmaintext 0062  
                          ??_I2C_MasterSendAck 0070                       rd1RegCompleteHandler@ptr 0079  
                ?_EUSART_SetTxInterruptHandler 0049               _EUSART_TxDefaultInterruptHandler 0038  
                  __end_of_I2C_DO_SEND_RESTART 07ED                                _I2C_DO_TX_EMPTY 0427  
                          I2C_SetBuffer@buffer 0073                                     __pintentry 0004  
                          ??_I2C_MasterStartRx 0070                  __size_of_I2C_DO_SEND_ADR_READ 0009  
                                      _BAUDCON 019F                                        _ACKSTAT 10B6  
             __size_of_I2C_CallbackReturnReset 0002                      __size_of_LCD_Write_String 001F  
                 ??_EUSART_DefaultErrorHandler 0071                                        ?_printf 0064  
               I2C_SetDataCompleteCallback@ptr 0077                        __size_of_ADC_Initialize 0008  
                     ??_I2C_DO_RX_NACK_RESTART 0070              __end_of_I2C_DO_SEND_RESTART_WRITE 07F2  
                         ?_I2C_DO_RX_NACK_STOP 0070                                        _LCD_CMD 0621  
                                _eusartRxCount 0040                                 main@lectureAN1 00ED  
                           __size_of_vfpfcnvrt 007C                  __size_of_EUSART_RxDataHandler 001A  
                    __end_of_I2C_MasterSendAck 0FF7                                        _OSCTUNE 0098  
                     ??_EUSART_SetErrorHandler 004B                                        _SSPCON1 0215  
                                      _SSPCON2 0216                                        _SSPSTAT 0214  
                    __end_of_I2C_MasterStartRx 0FDE                   ?_I2C_SetDataCompleteCallback 0075  
                                    _I2C_DO_RX 02C1                                      _I2C_DO_TX 026C  
             __end_of_I2C_DO_SEND_RESTART_READ 07F7                      ??_rdBlkRegCompleteHandler 007A  
                                      _i2c_add 003E                                ??_I2C_MasterFsm 0046  
                              ??_I2C_MasterIsr 007D                           _ADC_InterruptHandler 003A  
          __size_of_EUSART_DefaultErrorHandler 0004                            __end_of_I2C_DO_IDLE 07FC  
                          __end_of_I2C_DO_RCEN 0799                                ??_I2C_SetBuffer 0072  
                                    ?_vfprintf 005C                        I2C_SetBuffer@bufferSize 0070  
                               _I2C_MasterStop 0FD8                                 _I2C_Initialize 0757  
                    __size_of_I2C_DO_SEND_STOP 0005                               ??_LCD_Set_Cursor 0050  
                                      __ptext1 0674                                        __ptext2 0506  
                                      __ptext3 01F0                                        __ptext4 034C  
                                      __ptext5 078B                                        __ptext6 04B0  
                                      __ptext7 0661                                        __ptext8 07FC  
                                      __ptext9 0554                                __size_of_printf 0012  
                        ??_I2C_DO_RX_NACK_STOP 0070                          _OSCILLATOR_Initialize 0734  
                           I2C_SetCallback@idx 0074                       ??_PIN_MANAGER_Initialize 0049  
                I2C_CallbackReturnReset@funPtr 0079                             I2C_SetCallback@ptr 0072  
                     wr1RegCompleteHandler@ptr 0079                       __size_of_I2C_Master_Init 000B  
                     __size_of_I2C_Master_Wait 000C                       __size_of_I2C_Master_Stop 0006  
                   __size_of_SYSTEM_Initialize 0013                                        clrloop0 079A  
                         end_of_initialization 005E                                     ?_I2C_DO_RX 0070  
                                   ?_I2C_DO_TX 0070          __end_of_EUSART_SetOverrunErrorHandler 07B1  
       __size_of_EUSART_SetOverrunErrorHandler 0006                  _EUSART_SetOverrunErrorHandler 07AB  
                    __size_of_I2C_MasterIsNack 0006                                        fputc@fp 004E  
                       ?_rd1RegCompleteHandler 0079                        __end_of_I2C_DO_TX_EMPTY 0456  
                    __size_of_I2C_MasterSetIrq 0003                              _EUSART_Initialize 0307  
                       ?_wr1RegCompleteHandler 0079                      __size_of_I2C_Master_Start 0006  
                    __size_of_I2C_Master_Write 0010                             ?_EUSART_Initialize 0070  
                     __size_of_I2C_SetCallback 0026                              __end_of_vfpfcnvrt 026C  
                                    _RCSTAbits 019D                         __end_of_I2C_MasterStop 0FDB  
                       __end_of_I2C_Initialize 0761                                     ??_vfprintf 005F  
                          ??_EUSART_Initialize 004B                               ??_WDT_Initialize 0049  
               ??_EUSART_SetTxInterruptHandler 004B                                      _PORTDbits 000F  
              __end_of_rdBlkRegCompleteHandler 060A                           _I2C_MasterSendTxData 0FFB  
                                   LCD_CMD@CMD 004E                __size_of_I2C_DO_RX_NACK_RESTART 0005  
                        __size_of_EUSART_Write 002B                     __size_of_I2C_MasterSendAck 0004  
                             ??_LCD_Write_4Bit 004B                __size_of_EUSART_SetErrorHandler 0006  
                            LCD_Write_String@i 0052                     __size_of_I2C_MasterStartRx 0003  
                             ??_LCD_Write_Char 004D                      __end_of_EUSART_Initialize 034C  
                                  _I2C_DO_IDLE 07F7                                    _I2C_DO_RCEN 0792  
                   rdBlkRegCompleteHandler@ptr 0079                                      _TXSTAbits 019E  
                      ?_I2C_CallbackReturnStop 0079                              __size_of_LCD_Init 008B  
                     _I2C_DO_SEND_RESTART_READ 07F2                   I2C_CallbackReturnStop@funPtr 0079  
                              ?_I2C_MasterStop 0070                                ?_I2C_Initialize 0070  
                      _I2C_CallbackReturnReset 0002             __end_of_EUSART_DefaultErrorHandler 0FEB  
                   _EUSART_DefaultErrorHandler 0FE7                                    vfpfcnvrt@ap 0055  
                                  vfpfcnvrt@fp 005B           __size_of_I2C_SetDataCompleteCallback 000D  
                             _LCD_Write_String 05B9                                   _EUSART_Write 04B0  
                               _ADC_Initialize 077B                          ?_I2C_MasterSendTxData 0070  
                       ?_OSCILLATOR_Initialize 0070                    ??_I2C_DO_SEND_RESTART_WRITE 0070  
                               __end_of_printf 0686                            start_initialization 0049  
              __size_of_PIN_MANAGER_Initialize 0022                                  ??_EUSART_Read 0049  
                                ?_I2C_DO_RESET 0070   EUSART_SetRxInterruptHandler@interruptHandler 0049  
 EUSART_SetTxInterruptHandler@interruptHandler 0049                                    putch@txData 004B  
                                  ??_I2C_DO_RX 007A                                    ??_I2C_DO_TX 007A  
                            ??_I2C_Master_Init 0049                              ??_I2C_Master_Wait 0049  
                            ??_I2C_Master_Stop 0049                 __end_of_I2C_CallbackReturnStop 0FD5  
                       _I2C_DO_RX_NACK_RESTART 07D4                               ?_I2C_DO_TX_EMPTY 0070  
                           _I2C_MasterClearIrq 0FE4                 ?_EUSART_SetOverrunErrorHandler 0049  
                                  vfprintf@fmt 005C                     _EUSART_FramingErrorHandler 0034  
                       _EUSART_SetErrorHandler 07B7                            ?_I2C_MasterClearIrq 0070  
                       __end_of_ADC_Initialize 0783                    __end_of_I2C_MasterGetRxData 0FE1  
                                  __pdataBANK0 006A                          __end_of_I2C_DO_RX_ACK 07E3  
                             _I2C_DO_SEND_STOP 07E3                              ??_I2C_SetCallback 0073  
                                     ??_printf 0066                             _I2C_MasterSendNack 0FEF  
                     ?_I2C_MasterEnableRestart 0070                              _i2c_fsmStateTable 03C7  
                                     ?_LCD_CMD 0070                    __end_of_EUSART_Transmit_ISR 0598  
                        _I2C_DO_SEND_ADR_WRITE 0783                                    __pbssCOMMON 007D  
                                    ___latbits 0003                                  __pcstackBANK0 0046  
                                __pcstackBANK1 00ED                                 ??_I2C_DO_RESET 0070  
                          ?_I2C_MasterSendNack 0070                   __end_of_I2C_DO_SEND_ADR_READ 0773  
                         ??_I2C_MasterClearIrq 0070                    __end_of_I2C_DO_ADDRESS_NACK 04B0  
                   __end_of_EUSART_Receive_ISR 03C7                               _I2C_MasterIsNack 07C9  
                   __size_of_EUSART_Initialize 0045                      _I2C_DO_SEND_RESTART_WRITE 07ED  
             _EUSART_RxDefaultInterruptHandler 0036                            __end_of_EUSART_Read 0506  
                             _I2C_MasterSetIrq 0FE1                               _I2C_Master_Start 07C3  
                        _rd2RegCompleteHandler 0697                               _I2C_Master_Write 06EA  
                 __end_of_EUSART_RxDataHandler 05F2                         _PIN_MANAGER_Initialize 0554  
                        _wr2RegCompleteHandler 06B9                          IO_Expander_Write@Data 004A  
                    ??_I2C_CallbackReturnReset 007A                           EUSART_Read@readValue 004A  
                         ??_I2C_MasterSendNack 0070                       rd2RegCompleteHandler@ptr 0079  
                              ?_ADC_Initialize 0070                                   _eusartRxHead 0042  
                                 _eusartTxHead 0045                                   _eusartRxTail 0041  
                       ??_I2C_MasterSendTxData 0070                                   _eusartTxTail 0044  
                    __end_of_i2c_fsmStateTable 03E7                           I2C_Master_Write@data 0049  
                 ??_INTERRUPT_InterruptManager 007D                              __size_of_vfprintf 0028  
                      _eusartTxBufferRemaining 0043                   __size_of_I2C_DO_SEND_RESTART 0005  
                               __size_of_fputc 0041                        ??_rd1RegCompleteHandler 007A  
                               __size_of_putch 0007                                 _eusartRxBuffer 00DD  
                      ??_wr1RegCompleteHandler 007A                                 _eusartTxBuffer 00E5  
                                     _LCD_Init 0165                                       _LATAbits 010C  
       EUSART_SetErrorHandler@interruptHandler 0049                                      clear_ram0 0799  
                                     _PIE1bits 0091                                       _PIE2bits 0092  
                            _eusartRxLastError 003F            __size_of_INTERRUPT_InterruptManager 0043  
                                     _PIR1bits 0011                ??_EUSART_SetFramingErrorHandler 004B  
                                     _PIR2bits 0012                          __end_of_I2C_MasterFsm 0484  
                        __end_of_I2C_MasterIsr 0FFB                    __end_of_I2C_DO_RX_NACK_STOP 07DE  
    __end_of_EUSART_DefaultOverrunErrorHandler 0FEF     __size_of_EUSART_DefaultOverrunErrorHandler 0004  
          ??_EUSART_DefaultOverrunErrorHandler 0070             ?_EUSART_DefaultOverrunErrorHandler 0070  
            _EUSART_DefaultOverrunErrorHandler 0FEB                __end_of_I2C_MasterEnableRestart 0FD8  
                                    _vfpfcnvrt 01F0                          __end_of_I2C_SetBuffer 070A  
                                   _ADCON0bits 009D                         ?_I2C_DO_SEND_ADR_WRITE 0070  
                     I2C_MasterSendTxData@data 0070                               __size_of_LCD_CMD 0016  
                     wr2RegCompleteHandler@ptr 0079                                    _EUSART_Read 04DB  
                   ??_I2C_DO_SEND_RESTART_READ 0070                       ?_rdBlkRegCompleteHandler 0079  
                     __end_of_LCD_Write_String 05D8                                     _I2C_Status 00C0  
                                 ?_I2C_DO_IDLE 0070                                   ?_I2C_DO_RCEN 0070  
                       ?_rd2RegCompleteHandler 0079                         ?_wr2RegCompleteHandler 0079  
                             ??_I2C_MasterStop 0070                               ??_I2C_Initialize 0049  
                                   vfprintf@ap 005E                                     vfprintf@fp 0061  
                            _ADC_GetConversion 0598                           __end_of_I2C_DO_RESET 07D4  
                      ??_OSCILLATOR_Initialize 0049                            _EUSART_ErrorHandler 0030  
                           ?_ADC_GetConversion 0049                           _I2C_DO_SEND_ADR_READ 076A  
                  ?_EUSART_DefaultErrorHandler 0070                                     ?_vfpfcnvrt 0054  
                          ??_ADC_GetConversion 004B                                _I2C_Master_Init 074C  
                              _I2C_Master_Wait 0740                                _I2C_Master_Stop 07BD  
                         _EUSART_RxDataHandler 05D8                                       __ptext10 0734  
                                     __ptext11 0757                                       __ptext20 060A  
                                     __ptext12 0307                                       __ptext21 03F8  
                                     __ptext13 079F                                       __ptext30 074C  
                                     __ptext22 0165                                       __ptext14 07A5  
                                     __ptext31 04DB                                       __ptext23 0621  
                                     __ptext15 07AB                                       __ptext40 07D9  
                                     __ptext32 0598                                       __ptext24 0637  
                                     __ptext16 07B1                                       __ptext41 07DE  
                                     __ptext25 064D                                       __ptext17 07B7  
                                     __ptext50 076A                                       __ptext42 07E3  
                                     __ptext34 0FF7                                       __ptext26 06EA  
                                     __ptext18 077B                                       __ptext51 07F7  
                                     __ptext43 07E8                                       __ptext35 0456  
                                     __ptext27 07BD                                       __ptext19 05B9  
                                     __ptext60 0002                                       __ptext52 0427  
                                     __ptext44 07ED                                       __ptext36 0FE4  
                                     __ptext28 07C3                                       __ptext61 0FD3  
                                     __ptext53 0FE1                                       __ptext45 07F2  
                                     __ptext37 0484                                       __ptext29 0740  
                                     __ptext70 0FD8                                       __ptext62 05F2  
                                     __ptext54 07C9                                       __ptext46 0792  
                                     __ptext38 07CF                                       __ptext71 0FD5  
                                     __ptext63 0686                                       __ptext55 0FFB  
                                     __ptext47 02C1                                       __ptext39 07D4  
                                     __ptext72 0576                                       __ptext64 0697  
                                     __ptext56 0FF3                                       __ptext48 026C  
                                     __ptext73 038D                                       __ptext65 06A8  
                                     __ptext57 0FDE                                       __ptext49 0783  
                                     __ptext74 0FEB                                       __ptext66 06B9  
                                     __ptext58 0FEF                                       __ptext75 0FD1  
                                     __ptext67 0727                                       __ptext59 0FDB  
                                     __ptext76 0FE7                                       __ptext68 052E  
                                     __ptext77 05D8                                       __ptext69 06FA  
          __end_of_I2C_SetDataCompleteCallback 0734                    _I2C_SetDataCompleteCallback 0727  
                      __size_of_LCD_Set_Cursor 002F                        ?_I2C_DO_RX_NACK_RESTART 0070  
                     __end_of_I2C_DO_SEND_STOP 07E8                                _BackLight_State 006A  
                                __size_of_main 0103                      __end_of_ADC_GetConversion 05B9  
                      ?_EUSART_SetErrorHandler 0049                                _I2C_SetCallback 052E  
                ??_I2C_SetDataCompleteCallback 0078  EUSART_SetOverrunErrorHandler@interruptHandler 0049  
                                     int$flags 007E                          ?_I2C_DO_SEND_ADR_READ 0070  
                                     _vfprintf 0506             __end_of_INTERRUPT_InterruptManager 0047  
                   _INTERRUPT_InterruptManager 0004                                      printf@fmt 0064  
        __end_of_EUSART_SetFramingErrorHandler 07B7         __size_of_EUSART_SetFramingErrorHandler 0006  
                _EUSART_SetFramingErrorHandler 07B1                       __end_of_I2C_MasterIsNack 07CF  
                     __end_of_I2C_MasterSetIrq 0FE4                       __end_of_I2C_Master_Start 07C9  
                     __end_of_I2C_Master_Write 06FA                                     _INTCONbits 000B  
                        ?_EUSART_RxDataHandler 0070                             LCD_Write_Char@Data 004E  
               __end_of_I2C_DO_RX_NACK_RESTART 07D9                        __size_of_WDT_Initialize 0004  
                                     intlevel1 0000               __size_of_I2C_MasterEnableRestart 0003  
                      ?_PIN_MANAGER_Initialize 0070                 __end_of_EUSART_SetErrorHandler 07BD  
                          _I2C_DO_SEND_RESTART 07E8                               ??_ADC_Initialize 0049  
         __end_of_EUSART_SetRxInterruptHandler 07AB          __size_of_EUSART_SetRxInterruptHandler 0006  
                 _EUSART_SetRxInterruptHandler 07A5                        __size_of_LCD_Write_4Bit 0016  
                      __size_of_LCD_Write_Char 0017                                       printf@ap 0067  
                           _EUSART_Receive_ISR 038D  EUSART_SetFramingErrorHandler@interruptHandler 0049  
                     __size_of_I2C_DO_TX_EMPTY 002F                        __end_of_I2C_Master_Init 0757  
                      __end_of_I2C_Master_Wait 074C                        __end_of_I2C_Master_Stop 07C3  
                                  ??_vfpfcnvrt 0056                                LCD_Init@I2C_Add 0051  
                                __pstringtext1 03C7                                  __pstringtext2 06CA  
                                __pstringtext3 06DA                                  __pstringtext4 070A  
                                __pstringtext5 0719                                  __pstringtext6 0761  
                                __pstringtext7 0773                                  __pstringtext8 0000  
                         ?_I2C_DO_SEND_RESTART 0070                            ?_EUSART_Receive_ISR 0070  
                 __size_of_I2C_MasterGetRxData 0003                              LCD_Set_Cursor@COL 004F  
                            LCD_Set_Cursor@ROW 0052                                    _SSPCON1bits 0215  
                                  _SSPCON2bits 0216                    __size_of_I2C_MasterClearIrq 0003  
                           EUSART_Write@txData 004A                   __size_of_EUSART_Transmit_ISR 0022  
                      __end_of_I2C_SetCallback 0554                 __end_of_PIN_MANAGER_Initialize 0576  
               __size_of_rd1RegCompleteHandler 0011                  __end_of_rd1RegCompleteHandler 06B9  
                       __size_of_I2C_DO_RX_ACK 0005                 __size_of_wr1RegCompleteHandler 0011  
                         ??_EUSART_Receive_ISR 0071                          __size_of_I2C_DO_RESET 0005  
                __end_of_wr1RegCompleteHandler 0697                          _MSSP_InterruptHandler 003C  
                 __size_of_I2C_DO_ADDRESS_NACK 002C                     __size_of_ADC_GetConversion 0021  
                         __size_of_I2C_DO_IDLE 0005                           __size_of_I2C_DO_RCEN 0007  
                           __size_of_I2C_DO_RX 0046                             __size_of_I2C_DO_TX 0055  
